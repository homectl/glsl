#version 450
layout(location = 0) out vec3 out0;
layout(std140) uniform uBlock1 {
float u0;
float u4;
float u8;
} u1;
uniform sampler2D s4;
uniform sampler2D s5;
in float vf0;
in float vf1;
void main() {
float t0 = (0+0);
float t1 = (vf0-float(0.5));
float t2 = (float(1.5)*t1);
float t3 = (float(1.5)*float(0.6666667));
float t4 = (vf1-float(0.5));
float t5 = (t3*t4);
vec3 t6 = vec3(t2,t5,1);
vec3 t7 = vec3(float(0.2),1,0);
float t8 = (0-t0);
float t9 = (1+0);
float t10 = (0-t9);
float t11 = (-20);
float t12 = mod(3,21);
float t13 = (u1.u0/t12);
float t14 = (t11+t13);
float t15 = (0-t14);
vec3 t16 = vec3(t8,t10,t15);
vec3 t17 = normalize(t16);
vec3 t18 = vec3(t17[0],t17[1],t17[2]);
vec3 t19 = cross(t7,t18);
vec3 t20 = vec3(t19[0],t19[1],t19[2]);
vec3 t21 = normalize(t20);
vec3 t22 = vec3(t21[0],t21[1],t21[2]);
vec3 t23 = vec3(t17[0],t17[1],t17[2]);
vec3 t24 = vec3(t21[0],t21[1],t21[2]);
vec3 t25 = cross(t23,t24);
vec3 t26 = vec3(t25[0],t25[1],t25[2]);
vec3 t27 = vec3(t17[0],t17[1],t17[2]);
mat3x3 t28 = mat3x3(t22,t26,t27);
vec3 t29 = (t6*t28);
vec3 t30 = vec3(t29[0],t29[1],t29[2]);
vec3 t31 = normalize(t30);
float t32 = (t31[0]*u1.u8);
float t33 = (t0+t32);
float t34 = (t31[1]*u1.u8);
float t35 = (t9+t34);
float t36 = (t31[2]*u1.u8);
float t37 = (t14+t36);
vec3 t38 = vec3(t33,t35,t37);
float t39 = length(t38);
float t40 = (t39*t39);
bool t41 = (t40<1);
vec3 t42 = vec3(t0,t9,t14);
float t43 = length(t42);
float t44 = (t43*t43);
bool t45 = (t44>1);
bool t46 = (t41&&t45);
float t47;
float t48;
float t49;
float t50;
if(t46){
t47 = 0;
t48 = 0;
t49 = 0;
t50 = 1;
} else {
t47 = 0;
t48 = 0;
t49 = 0;
t50 = 0;
}
float t51 = (1-0);
float t52 = (t50*t51);
float t53 = (t47*t52);
float t54 = (0+t53);
bool t55 = (t9>0);
bool t56 = (t35>0);
bool t57 = (!t56);
bool t58 = (t55&&t57);
bool t59 = (!t55);
bool t60 = (t56&&t59);
bool t61 = (t58||t60);
bool t62 = (t40<196);
bool t63 = (t40>float(6.76));
bool t64 = (t62&&t63);
bool t65 = (t61&&t64);
float t66;
float t67;
float t68;
float t69;
if(t65){
float t70 = (t35/t31[1]);
float t71 = (-t70);
float t72 = (t71*t31[0]);
float t73 = (t33+t72);
float t74 = atan(t73,t37);
float t75 = (u1.u0/30);
float t76 = (t74+t75);
float t77 = (2*3.1415927);
float t78 = (t76+t77);
float t79 = mod(t78,2);
float t80 = (t79*3.1415927);
float t81 = (t80/t77);
float t82 = (t71*t31[1]);
float t83 = (t35+t82);
float t84 = (t71*t31[2]);
float t85 = (t37+t84);
vec3 t86 = vec3(t73,t83,t85);
float t87 = length(t86);
float t88 = (t87*t87);
float t89 = sqrt(t88);
float t90 = (t89-float(2.6));
float t91 = (t90/float(11.4));
vec4 t92 = texture(s4,vec2(t81,t91));
t66 = t92.x;
t67 = t92.y;
t68 = t92.z;
vec3 t93 = vec3(t92.x,t92.y,t92.z);
float t94 = length(t93);
float t95 = (t94*t94);
float t96 = (t95/float(3.0));
bool t97 = (t96<=1);
float t98;
if(t97){
t98 = t96;
} else {
t98 = 1;
}
bool t99 = (t98>=0);
float t100;
if(t99){
t100 = t98;
} else {
t100 = 0;
}
t69 = t100;
} else {
t66 = 0;
t67 = 0;
t68 = 0;
t69 = 0;
}
float t101 = (1-0);
float t102 = (t50*t101);
float t103 = (0+t102);
float t104 = (1-t103);
float t105 = (t69*t104);
float t106 = (t66*t105);
float t107 = (t54+t106);
float t108 = (-float(1.5));
vec3 t109 = vec3(t0,t9,t14);
vec3 t110 = vec3(t31[0],t31[1],t31[2]);
vec3 t111 = cross(t109,t110);
vec3 t112 = vec3(t111[0],t111[1],t111[2]);
float t113 = length(t112);
float t114 = (t113*t113);
float t115 = (t108*t114);
float t116 = (t115*t33);
float t117 = pow(t40,float(2.5));
float t118 = (t116/t117);
float t119 = (t118*u1.u8);
float t120 = (t31[0]+t119);
float t121 = (u1.u8*u1.u4);
float t122 = (t120*t121);
float t123 = (t33+t122);
float t124 = (t115*t35);
float t125 = (t124/t117);
float t126 = (t125*u1.u8);
float t127 = (t31[1]+t126);
float t128 = (t127*t121);
float t129 = (t35+t128);
float t130 = (t115*t37);
float t131 = (t130/t117);
float t132 = (t131*u1.u8);
float t133 = (t31[2]+t132);
float t134 = (t133*t121);
float t135 = (t37+t134);
vec3 t136 = vec3(t123,t129,t135);
float t137 = length(t136);
float t138 = (t137*t137);
bool t139 = (t138<1);
vec3 t140 = vec3(t33,t35,t37);
float t141 = length(t140);
float t142 = (t141*t141);
bool t143 = (t142>1);
bool t144 = (t139&&t143);
float t145;
float t146;
float t147;
float t148;
if(t144){
t145 = 0;
t146 = 0;
t147 = 0;
t148 = 1;
} else {
t145 = 0;
t146 = 0;
t147 = 0;
t148 = 0;
}
float t149 = (1-t103);
float t150 = (t69*t149);
float t151 = (t103+t150);
float t152 = (1-t151);
float t153 = (t148*t152);
float t154 = (t145*t153);
float t155 = (t107+t154);
bool t156 = (t35>0);
bool t157 = (t129>0);
bool t158 = (!t157);
bool t159 = (t156&&t158);
bool t160 = (!t156);
bool t161 = (t157&&t160);
bool t162 = (t159||t161);
bool t163 = (t138<196);
bool t164 = (t138>float(6.76));
bool t165 = (t163&&t164);
bool t166 = (t162&&t165);
float t167;
float t168;
float t169;
float t170;
if(t166){
float t171 = (t129/t127);
float t172 = (-t171);
float t173 = (t172*t120);
float t174 = (t123+t173);
float t175 = atan(t174,t135);
float t176 = (u1.u0/30);
float t177 = (t175+t176);
float t178 = (2*3.1415927);
float t179 = (t177+t178);
float t180 = mod(t179,2);
float t181 = (t180*3.1415927);
float t182 = (t181/t178);
float t183 = (t172*t127);
float t184 = (t129+t183);
float t185 = (t172*t133);
float t186 = (t135+t185);
vec3 t187 = vec3(t174,t184,t186);
float t188 = length(t187);
float t189 = (t188*t188);
float t190 = sqrt(t189);
float t191 = (t190-float(2.6));
float t192 = (t191/float(11.4));
vec4 t193 = texture(s4,vec2(t182,t192));
t167 = t193.x;
t168 = t193.y;
t169 = t193.z;
vec3 t194 = vec3(t193.x,t193.y,t193.z);
float t195 = length(t194);
float t196 = (t195*t195);
float t197 = (t196/float(3.0));
bool t198 = (t197<=1);
float t199;
if(t198){
t199 = t197;
} else {
t199 = 1;
}
bool t200 = (t199>=0);
float t201;
if(t200){
t201 = t199;
} else {
t201 = 0;
}
t170 = t201;
} else {
t167 = 0;
t168 = 0;
t169 = 0;
t170 = 0;
}
float t202 = (1-t151);
float t203 = (t148*t202);
float t204 = (t151+t203);
float t205 = (1-t204);
float t206 = (t170*t205);
float t207 = (t167*t206);
float t208 = (t155+t207);
float t209 = (t115*t123);
float t210 = pow(t138,float(2.5));
float t211 = (t209/t210);
float t212 = (t211*t121);
float t213 = (t120+t212);
float t214 = (t121*u1.u4);
float t215 = (t213*t214);
float t216 = (t123+t215);
float t217 = (t115*t129);
float t218 = (t217/t210);
float t219 = (t218*t121);
float t220 = (t127+t219);
float t221 = (t220*t214);
float t222 = (t129+t221);
float t223 = (t115*t135);
float t224 = (t223/t210);
float t225 = (t224*t121);
float t226 = (t133+t225);
float t227 = (t226*t214);
float t228 = (t135+t227);
vec3 t229 = vec3(t216,t222,t228);
float t230 = length(t229);
float t231 = (t230*t230);
bool t232 = (t231<1);
vec3 t233 = vec3(t123,t129,t135);
float t234 = length(t233);
float t235 = (t234*t234);
bool t236 = (t235>1);
bool t237 = (t232&&t236);
float t238;
float t239;
float t240;
float t241;
if(t237){
t238 = 0;
t239 = 0;
t240 = 0;
t241 = 1;
} else {
t238 = 0;
t239 = 0;
t240 = 0;
t241 = 0;
}
float t242 = (1-t204);
float t243 = (t170*t242);
float t244 = (t204+t243);
float t245 = (1-t244);
float t246 = (t241*t245);
float t247 = (t238*t246);
float t248 = (t208+t247);
bool t249 = (t129>0);
bool t250 = (t222>0);
bool t251 = (!t250);
bool t252 = (t249&&t251);
bool t253 = (!t249);
bool t254 = (t250&&t253);
bool t255 = (t252||t254);
bool t256 = (t231<196);
bool t257 = (t231>float(6.76));
bool t258 = (t256&&t257);
bool t259 = (t255&&t258);
float t260;
float t261;
float t262;
float t263;
if(t259){
float t264 = (t222/t220);
float t265 = (-t264);
float t266 = (t265*t213);
float t267 = (t216+t266);
float t268 = atan(t267,t228);
float t269 = (u1.u0/30);
float t270 = (t268+t269);
float t271 = (2*3.1415927);
float t272 = (t270+t271);
float t273 = mod(t272,2);
float t274 = (t273*3.1415927);
float t275 = (t274/t271);
float t276 = (t265*t220);
float t277 = (t222+t276);
float t278 = (t265*t226);
float t279 = (t228+t278);
vec3 t280 = vec3(t267,t277,t279);
float t281 = length(t280);
float t282 = (t281*t281);
float t283 = sqrt(t282);
float t284 = (t283-float(2.6));
float t285 = (t284/float(11.4));
vec4 t286 = texture(s4,vec2(t275,t285));
t260 = t286.x;
t261 = t286.y;
t262 = t286.z;
vec3 t287 = vec3(t286.x,t286.y,t286.z);
float t288 = length(t287);
float t289 = (t288*t288);
float t290 = (t289/float(3.0));
bool t291 = (t290<=1);
float t292;
if(t291){
t292 = t290;
} else {
t292 = 1;
}
bool t293 = (t292>=0);
float t294;
if(t293){
t294 = t292;
} else {
t294 = 0;
}
t263 = t294;
} else {
t260 = 0;
t261 = 0;
t262 = 0;
t263 = 0;
}
float t295 = (1-t244);
float t296 = (t241*t295);
float t297 = (t244+t296);
float t298 = (1-t297);
float t299 = (t263*t298);
float t300 = (t260*t299);
float t301 = (t248+t300);
float t302 = (t115*t216);
float t303 = pow(t231,float(2.5));
float t304 = (t302/t303);
float t305 = (t304*t214);
float t306 = (t213+t305);
float t307 = (t214*u1.u4);
float t308 = (t306*t307);
float t309 = (t216+t308);
float t310 = (t115*t222);
float t311 = (t310/t303);
float t312 = (t311*t214);
float t313 = (t220+t312);
float t314 = (t313*t307);
float t315 = (t222+t314);
float t316 = (t115*t228);
float t317 = (t316/t303);
float t318 = (t317*t214);
float t319 = (t226+t318);
float t320 = (t319*t307);
float t321 = (t228+t320);
vec3 t322 = vec3(t309,t315,t321);
float t323 = length(t322);
float t324 = (t323*t323);
bool t325 = (t324<1);
vec3 t326 = vec3(t216,t222,t228);
float t327 = length(t326);
float t328 = (t327*t327);
bool t329 = (t328>1);
bool t330 = (t325&&t329);
float t331;
float t332;
float t333;
float t334;
if(t330){
t331 = 0;
t332 = 0;
t333 = 0;
t334 = 1;
} else {
t331 = 0;
t332 = 0;
t333 = 0;
t334 = 0;
}
float t335 = (1-t297);
float t336 = (t263*t335);
float t337 = (t297+t336);
float t338 = (1-t337);
float t339 = (t334*t338);
float t340 = (t331*t339);
float t341 = (t301+t340);
bool t342 = (t222>0);
bool t343 = (t315>0);
bool t344 = (!t343);
bool t345 = (t342&&t344);
bool t346 = (!t342);
bool t347 = (t343&&t346);
bool t348 = (t345||t347);
bool t349 = (t324<196);
bool t350 = (t324>float(6.76));
bool t351 = (t349&&t350);
bool t352 = (t348&&t351);
float t353;
float t354;
float t355;
float t356;
if(t352){
float t357 = (t315/t313);
float t358 = (-t357);
float t359 = (t358*t306);
float t360 = (t309+t359);
float t361 = atan(t360,t321);
float t362 = (u1.u0/30);
float t363 = (t361+t362);
float t364 = (2*3.1415927);
float t365 = (t363+t364);
float t366 = mod(t365,2);
float t367 = (t366*3.1415927);
float t368 = (t367/t364);
float t369 = (t358*t313);
float t370 = (t315+t369);
float t371 = (t358*t319);
float t372 = (t321+t371);
vec3 t373 = vec3(t360,t370,t372);
float t374 = length(t373);
float t375 = (t374*t374);
float t376 = sqrt(t375);
float t377 = (t376-float(2.6));
float t378 = (t377/float(11.4));
vec4 t379 = texture(s4,vec2(t368,t378));
t353 = t379.x;
t354 = t379.y;
t355 = t379.z;
vec3 t380 = vec3(t379.x,t379.y,t379.z);
float t381 = length(t380);
float t382 = (t381*t381);
float t383 = (t382/float(3.0));
bool t384 = (t383<=1);
float t385;
if(t384){
t385 = t383;
} else {
t385 = 1;
}
bool t386 = (t385>=0);
float t387;
if(t386){
t387 = t385;
} else {
t387 = 0;
}
t356 = t387;
} else {
t353 = 0;
t354 = 0;
t355 = 0;
t356 = 0;
}
float t388 = (1-t337);
float t389 = (t334*t388);
float t390 = (t337+t389);
float t391 = (1-t390);
float t392 = (t356*t391);
float t393 = (t353*t392);
float t394 = (t341+t393);
float t395 = (t115*t309);
float t396 = pow(t324,float(2.5));
float t397 = (t395/t396);
float t398 = (t397*t307);
float t399 = (t306+t398);
float t400 = (t307*u1.u4);
float t401 = (t399*t400);
float t402 = (t309+t401);
float t403 = (t115*t315);
float t404 = (t403/t396);
float t405 = (t404*t307);
float t406 = (t313+t405);
float t407 = (t406*t400);
float t408 = (t315+t407);
float t409 = (t115*t321);
float t410 = (t409/t396);
float t411 = (t410*t307);
float t412 = (t319+t411);
float t413 = (t412*t400);
float t414 = (t321+t413);
vec3 t415 = vec3(t402,t408,t414);
float t416 = length(t415);
float t417 = (t416*t416);
bool t418 = (t417<1);
vec3 t419 = vec3(t309,t315,t321);
float t420 = length(t419);
float t421 = (t420*t420);
bool t422 = (t421>1);
bool t423 = (t418&&t422);
float t424;
float t425;
float t426;
float t427;
if(t423){
t424 = 0;
t425 = 0;
t426 = 0;
t427 = 1;
} else {
t424 = 0;
t425 = 0;
t426 = 0;
t427 = 0;
}
float t428 = (1-t390);
float t429 = (t356*t428);
float t430 = (t390+t429);
float t431 = (1-t430);
float t432 = (t427*t431);
float t433 = (t424*t432);
float t434 = (t394+t433);
bool t435 = (t315>0);
bool t436 = (t408>0);
bool t437 = (!t436);
bool t438 = (t435&&t437);
bool t439 = (!t435);
bool t440 = (t436&&t439);
bool t441 = (t438||t440);
bool t442 = (t417<196);
bool t443 = (t417>float(6.76));
bool t444 = (t442&&t443);
bool t445 = (t441&&t444);
float t446;
float t447;
float t448;
float t449;
if(t445){
float t450 = (t408/t406);
float t451 = (-t450);
float t452 = (t451*t399);
float t453 = (t402+t452);
float t454 = atan(t453,t414);
float t455 = (u1.u0/30);
float t456 = (t454+t455);
float t457 = (2*3.1415927);
float t458 = (t456+t457);
float t459 = mod(t458,2);
float t460 = (t459*3.1415927);
float t461 = (t460/t457);
float t462 = (t451*t406);
float t463 = (t408+t462);
float t464 = (t451*t412);
float t465 = (t414+t464);
vec3 t466 = vec3(t453,t463,t465);
float t467 = length(t466);
float t468 = (t467*t467);
float t469 = sqrt(t468);
float t470 = (t469-float(2.6));
float t471 = (t470/float(11.4));
vec4 t472 = texture(s4,vec2(t461,t471));
t446 = t472.x;
t447 = t472.y;
t448 = t472.z;
vec3 t473 = vec3(t472.x,t472.y,t472.z);
float t474 = length(t473);
float t475 = (t474*t474);
float t476 = (t475/float(3.0));
bool t477 = (t476<=1);
float t478;
if(t477){
t478 = t476;
} else {
t478 = 1;
}
bool t479 = (t478>=0);
float t480;
if(t479){
t480 = t478;
} else {
t480 = 0;
}
t449 = t480;
} else {
t446 = 0;
t447 = 0;
t448 = 0;
t449 = 0;
}
float t481 = (1-t430);
float t482 = (t427*t481);
float t483 = (t430+t482);
float t484 = (1-t483);
float t485 = (t449*t484);
float t486 = (t446*t485);
float t487 = (t434+t486);
float t488 = (t115*t402);
float t489 = pow(t417,float(2.5));
float t490 = (t488/t489);
float t491 = (t490*t400);
float t492 = (t399+t491);
float t493 = (t400*u1.u4);
float t494 = (t492*t493);
float t495 = (t402+t494);
float t496 = (t115*t408);
float t497 = (t496/t489);
float t498 = (t497*t400);
float t499 = (t406+t498);
float t500 = (t499*t493);
float t501 = (t408+t500);
float t502 = (t115*t414);
float t503 = (t502/t489);
float t504 = (t503*t400);
float t505 = (t412+t504);
float t506 = (t505*t493);
float t507 = (t414+t506);
vec3 t508 = vec3(t495,t501,t507);
float t509 = length(t508);
float t510 = (t509*t509);
bool t511 = (t510<1);
vec3 t512 = vec3(t402,t408,t414);
float t513 = length(t512);
float t514 = (t513*t513);
bool t515 = (t514>1);
bool t516 = (t511&&t515);
float t517;
float t518;
float t519;
float t520;
if(t516){
t517 = 0;
t518 = 0;
t519 = 0;
t520 = 1;
} else {
t517 = 0;
t518 = 0;
t519 = 0;
t520 = 0;
}
float t521 = (1-t483);
float t522 = (t449*t521);
float t523 = (t483+t522);
float t524 = (1-t523);
float t525 = (t520*t524);
float t526 = (t517*t525);
float t527 = (t487+t526);
bool t528 = (t408>0);
bool t529 = (t501>0);
bool t530 = (!t529);
bool t531 = (t528&&t530);
bool t532 = (!t528);
bool t533 = (t529&&t532);
bool t534 = (t531||t533);
bool t535 = (t510<196);
bool t536 = (t510>float(6.76));
bool t537 = (t535&&t536);
bool t538 = (t534&&t537);
float t539;
float t540;
float t541;
float t542;
if(t538){
float t543 = (t501/t499);
float t544 = (-t543);
float t545 = (t544*t492);
float t546 = (t495+t545);
float t547 = atan(t546,t507);
float t548 = (u1.u0/30);
float t549 = (t547+t548);
float t550 = (2*3.1415927);
float t551 = (t549+t550);
float t552 = mod(t551,2);
float t553 = (t552*3.1415927);
float t554 = (t553/t550);
float t555 = (t544*t499);
float t556 = (t501+t555);
float t557 = (t544*t505);
float t558 = (t507+t557);
vec3 t559 = vec3(t546,t556,t558);
float t560 = length(t559);
float t561 = (t560*t560);
float t562 = sqrt(t561);
float t563 = (t562-float(2.6));
float t564 = (t563/float(11.4));
vec4 t565 = texture(s4,vec2(t554,t564));
t539 = t565.x;
t540 = t565.y;
t541 = t565.z;
vec3 t566 = vec3(t565.x,t565.y,t565.z);
float t567 = length(t566);
float t568 = (t567*t567);
float t569 = (t568/float(3.0));
bool t570 = (t569<=1);
float t571;
if(t570){
t571 = t569;
} else {
t571 = 1;
}
bool t572 = (t571>=0);
float t573;
if(t572){
t573 = t571;
} else {
t573 = 0;
}
t542 = t573;
} else {
t539 = 0;
t540 = 0;
t541 = 0;
t542 = 0;
}
float t574 = (1-t523);
float t575 = (t520*t574);
float t576 = (t523+t575);
float t577 = (1-t576);
float t578 = (t542*t577);
float t579 = (t539*t578);
float t580 = (t527+t579);
float t581 = (t115*t495);
float t582 = pow(t510,float(2.5));
float t583 = (t581/t582);
float t584 = (t583*t493);
float t585 = (t492+t584);
float t586 = (t493*u1.u4);
float t587 = (t585*t586);
float t588 = (t495+t587);
float t589 = (t115*t501);
float t590 = (t589/t582);
float t591 = (t590*t493);
float t592 = (t499+t591);
float t593 = (t592*t586);
float t594 = (t501+t593);
float t595 = (t115*t507);
float t596 = (t595/t582);
float t597 = (t596*t493);
float t598 = (t505+t597);
float t599 = (t598*t586);
float t600 = (t507+t599);
vec3 t601 = vec3(t588,t594,t600);
float t602 = length(t601);
float t603 = (t602*t602);
bool t604 = (t603<1);
vec3 t605 = vec3(t495,t501,t507);
float t606 = length(t605);
float t607 = (t606*t606);
bool t608 = (t607>1);
bool t609 = (t604&&t608);
float t610;
float t611;
float t612;
float t613;
if(t609){
t610 = 0;
t611 = 0;
t612 = 0;
t613 = 1;
} else {
t610 = 0;
t611 = 0;
t612 = 0;
t613 = 0;
}
float t614 = (1-t576);
float t615 = (t542*t614);
float t616 = (t576+t615);
float t617 = (1-t616);
float t618 = (t613*t617);
float t619 = (t610*t618);
float t620 = (t580+t619);
bool t621 = (t501>0);
bool t622 = (t594>0);
bool t623 = (!t622);
bool t624 = (t621&&t623);
bool t625 = (!t621);
bool t626 = (t622&&t625);
bool t627 = (t624||t626);
bool t628 = (t603<196);
bool t629 = (t603>float(6.76));
bool t630 = (t628&&t629);
bool t631 = (t627&&t630);
float t632;
float t633;
float t634;
float t635;
if(t631){
float t636 = (t594/t592);
float t637 = (-t636);
float t638 = (t637*t585);
float t639 = (t588+t638);
float t640 = atan(t639,t600);
float t641 = (u1.u0/30);
float t642 = (t640+t641);
float t643 = (2*3.1415927);
float t644 = (t642+t643);
float t645 = mod(t644,2);
float t646 = (t645*3.1415927);
float t647 = (t646/t643);
float t648 = (t637*t592);
float t649 = (t594+t648);
float t650 = (t637*t598);
float t651 = (t600+t650);
vec3 t652 = vec3(t639,t649,t651);
float t653 = length(t652);
float t654 = (t653*t653);
float t655 = sqrt(t654);
float t656 = (t655-float(2.6));
float t657 = (t656/float(11.4));
vec4 t658 = texture(s4,vec2(t647,t657));
t632 = t658.x;
t633 = t658.y;
t634 = t658.z;
vec3 t659 = vec3(t658.x,t658.y,t658.z);
float t660 = length(t659);
float t661 = (t660*t660);
float t662 = (t661/float(3.0));
bool t663 = (t662<=1);
float t664;
if(t663){
t664 = t662;
} else {
t664 = 1;
}
bool t665 = (t664>=0);
float t666;
if(t665){
t666 = t664;
} else {
t666 = 0;
}
t635 = t666;
} else {
t632 = 0;
t633 = 0;
t634 = 0;
t635 = 0;
}
float t667 = (1-t616);
float t668 = (t613*t667);
float t669 = (t616+t668);
float t670 = (1-t669);
float t671 = (t635*t670);
float t672 = (t632*t671);
float t673 = (t620+t672);
float t674 = (t115*t588);
float t675 = pow(t603,float(2.5));
float t676 = (t674/t675);
float t677 = (t676*t586);
float t678 = (t585+t677);
float t679 = (t586*u1.u4);
float t680 = (t678*t679);
float t681 = (t588+t680);
float t682 = (t115*t594);
float t683 = (t682/t675);
float t684 = (t683*t586);
float t685 = (t592+t684);
float t686 = (t685*t679);
float t687 = (t594+t686);
float t688 = (t115*t600);
float t689 = (t688/t675);
float t690 = (t689*t586);
float t691 = (t598+t690);
float t692 = (t691*t679);
float t693 = (t600+t692);
vec3 t694 = vec3(t681,t687,t693);
float t695 = length(t694);
float t696 = (t695*t695);
bool t697 = (t696<1);
vec3 t698 = vec3(t588,t594,t600);
float t699 = length(t698);
float t700 = (t699*t699);
bool t701 = (t700>1);
bool t702 = (t697&&t701);
float t703;
float t704;
float t705;
float t706;
if(t702){
t703 = 0;
t704 = 0;
t705 = 0;
t706 = 1;
} else {
t703 = 0;
t704 = 0;
t705 = 0;
t706 = 0;
}
float t707 = (1-t669);
float t708 = (t635*t707);
float t709 = (t669+t708);
float t710 = (1-t709);
float t711 = (t706*t710);
float t712 = (t703*t711);
float t713 = (t673+t712);
bool t714 = (t594>0);
bool t715 = (t687>0);
bool t716 = (!t715);
bool t717 = (t714&&t716);
bool t718 = (!t714);
bool t719 = (t715&&t718);
bool t720 = (t717||t719);
bool t721 = (t696<196);
bool t722 = (t696>float(6.76));
bool t723 = (t721&&t722);
bool t724 = (t720&&t723);
float t725;
float t726;
float t727;
float t728;
if(t724){
float t729 = (t687/t685);
float t730 = (-t729);
float t731 = (t730*t678);
float t732 = (t681+t731);
float t733 = atan(t732,t693);
float t734 = (u1.u0/30);
float t735 = (t733+t734);
float t736 = (2*3.1415927);
float t737 = (t735+t736);
float t738 = mod(t737,2);
float t739 = (t738*3.1415927);
float t740 = (t739/t736);
float t741 = (t730*t685);
float t742 = (t687+t741);
float t743 = (t730*t691);
float t744 = (t693+t743);
vec3 t745 = vec3(t732,t742,t744);
float t746 = length(t745);
float t747 = (t746*t746);
float t748 = sqrt(t747);
float t749 = (t748-float(2.6));
float t750 = (t749/float(11.4));
vec4 t751 = texture(s4,vec2(t740,t750));
t725 = t751.x;
t726 = t751.y;
t727 = t751.z;
vec3 t752 = vec3(t751.x,t751.y,t751.z);
float t753 = length(t752);
float t754 = (t753*t753);
float t755 = (t754/float(3.0));
bool t756 = (t755<=1);
float t757;
if(t756){
t757 = t755;
} else {
t757 = 1;
}
bool t758 = (t757>=0);
float t759;
if(t758){
t759 = t757;
} else {
t759 = 0;
}
t728 = t759;
} else {
t725 = 0;
t726 = 0;
t727 = 0;
t728 = 0;
}
float t760 = (1-t709);
float t761 = (t706*t760);
float t762 = (t709+t761);
float t763 = (1-t762);
float t764 = (t728*t763);
float t765 = (t725*t764);
float t766 = (t713+t765);
float t767 = (t115*t681);
float t768 = pow(t696,float(2.5));
float t769 = (t767/t768);
float t770 = (t769*t679);
float t771 = (t678+t770);
float t772 = (t679*u1.u4);
float t773 = (t771*t772);
float t774 = (t681+t773);
float t775 = (t115*t687);
float t776 = (t775/t768);
float t777 = (t776*t679);
float t778 = (t685+t777);
float t779 = (t778*t772);
float t780 = (t687+t779);
float t781 = (t115*t693);
float t782 = (t781/t768);
float t783 = (t782*t679);
float t784 = (t691+t783);
float t785 = (t784*t772);
float t786 = (t693+t785);
vec3 t787 = vec3(t774,t780,t786);
float t788 = length(t787);
float t789 = (t788*t788);
bool t790 = (t789<1);
vec3 t791 = vec3(t681,t687,t693);
float t792 = length(t791);
float t793 = (t792*t792);
bool t794 = (t793>1);
bool t795 = (t790&&t794);
float t796;
float t797;
float t798;
float t799;
if(t795){
t796 = 0;
t797 = 0;
t798 = 0;
t799 = 1;
} else {
t796 = 0;
t797 = 0;
t798 = 0;
t799 = 0;
}
float t800 = (1-t762);
float t801 = (t728*t800);
float t802 = (t762+t801);
float t803 = (1-t802);
float t804 = (t799*t803);
float t805 = (t796*t804);
float t806 = (t766+t805);
bool t807 = (t687>0);
bool t808 = (t780>0);
bool t809 = (!t808);
bool t810 = (t807&&t809);
bool t811 = (!t807);
bool t812 = (t808&&t811);
bool t813 = (t810||t812);
bool t814 = (t789<196);
bool t815 = (t789>float(6.76));
bool t816 = (t814&&t815);
bool t817 = (t813&&t816);
float t818;
float t819;
float t820;
float t821;
if(t817){
float t822 = (t780/t778);
float t823 = (-t822);
float t824 = (t823*t771);
float t825 = (t774+t824);
float t826 = atan(t825,t786);
float t827 = (u1.u0/30);
float t828 = (t826+t827);
float t829 = (2*3.1415927);
float t830 = (t828+t829);
float t831 = mod(t830,2);
float t832 = (t831*3.1415927);
float t833 = (t832/t829);
float t834 = (t823*t778);
float t835 = (t780+t834);
float t836 = (t823*t784);
float t837 = (t786+t836);
vec3 t838 = vec3(t825,t835,t837);
float t839 = length(t838);
float t840 = (t839*t839);
float t841 = sqrt(t840);
float t842 = (t841-float(2.6));
float t843 = (t842/float(11.4));
vec4 t844 = texture(s4,vec2(t833,t843));
t818 = t844.x;
t819 = t844.y;
t820 = t844.z;
vec3 t845 = vec3(t844.x,t844.y,t844.z);
float t846 = length(t845);
float t847 = (t846*t846);
float t848 = (t847/float(3.0));
bool t849 = (t848<=1);
float t850;
if(t849){
t850 = t848;
} else {
t850 = 1;
}
bool t851 = (t850>=0);
float t852;
if(t851){
t852 = t850;
} else {
t852 = 0;
}
t821 = t852;
} else {
t818 = 0;
t819 = 0;
t820 = 0;
t821 = 0;
}
float t853 = (1-t802);
float t854 = (t799*t853);
float t855 = (t802+t854);
float t856 = (1-t855);
float t857 = (t821*t856);
float t858 = (t818*t857);
float t859 = (t806+t858);
float t860 = (t115*t774);
float t861 = pow(t789,float(2.5));
float t862 = (t860/t861);
float t863 = (t862*t772);
float t864 = (t771+t863);
float t865 = (t772*u1.u4);
float t866 = (t864*t865);
float t867 = (t774+t866);
float t868 = (t115*t780);
float t869 = (t868/t861);
float t870 = (t869*t772);
float t871 = (t778+t870);
float t872 = (t871*t865);
float t873 = (t780+t872);
float t874 = (t115*t786);
float t875 = (t874/t861);
float t876 = (t875*t772);
float t877 = (t784+t876);
float t878 = (t877*t865);
float t879 = (t786+t878);
vec3 t880 = vec3(t867,t873,t879);
float t881 = length(t880);
float t882 = (t881*t881);
bool t883 = (t882<1);
vec3 t884 = vec3(t774,t780,t786);
float t885 = length(t884);
float t886 = (t885*t885);
bool t887 = (t886>1);
bool t888 = (t883&&t887);
float t889;
float t890;
float t891;
float t892;
if(t888){
t889 = 0;
t890 = 0;
t891 = 0;
t892 = 1;
} else {
t889 = 0;
t890 = 0;
t891 = 0;
t892 = 0;
}
float t893 = (1-t855);
float t894 = (t821*t893);
float t895 = (t855+t894);
float t896 = (1-t895);
float t897 = (t892*t896);
float t898 = (t889*t897);
float t899 = (t859+t898);
bool t900 = (t780>0);
bool t901 = (t873>0);
bool t902 = (!t901);
bool t903 = (t900&&t902);
bool t904 = (!t900);
bool t905 = (t901&&t904);
bool t906 = (t903||t905);
bool t907 = (t882<196);
bool t908 = (t882>float(6.76));
bool t909 = (t907&&t908);
bool t910 = (t906&&t909);
float t911;
float t912;
float t913;
float t914;
if(t910){
float t915 = (t873/t871);
float t916 = (-t915);
float t917 = (t916*t864);
float t918 = (t867+t917);
float t919 = atan(t918,t879);
float t920 = (u1.u0/30);
float t921 = (t919+t920);
float t922 = (2*3.1415927);
float t923 = (t921+t922);
float t924 = mod(t923,2);
float t925 = (t924*3.1415927);
float t926 = (t925/t922);
float t927 = (t916*t871);
float t928 = (t873+t927);
float t929 = (t916*t877);
float t930 = (t879+t929);
vec3 t931 = vec3(t918,t928,t930);
float t932 = length(t931);
float t933 = (t932*t932);
float t934 = sqrt(t933);
float t935 = (t934-float(2.6));
float t936 = (t935/float(11.4));
vec4 t937 = texture(s4,vec2(t926,t936));
t911 = t937.x;
t912 = t937.y;
t913 = t937.z;
vec3 t938 = vec3(t937.x,t937.y,t937.z);
float t939 = length(t938);
float t940 = (t939*t939);
float t941 = (t940/float(3.0));
bool t942 = (t941<=1);
float t943;
if(t942){
t943 = t941;
} else {
t943 = 1;
}
bool t944 = (t943>=0);
float t945;
if(t944){
t945 = t943;
} else {
t945 = 0;
}
t914 = t945;
} else {
t911 = 0;
t912 = 0;
t913 = 0;
t914 = 0;
}
float t946 = (1-t895);
float t947 = (t892*t946);
float t948 = (t895+t947);
float t949 = (1-t948);
float t950 = (t914*t949);
float t951 = (t911*t950);
float t952 = (t899+t951);
float t953 = (t115*t867);
float t954 = pow(t882,float(2.5));
float t955 = (t953/t954);
float t956 = (t955*t865);
float t957 = (t864+t956);
float t958 = (t865*u1.u4);
float t959 = (t957*t958);
float t960 = (t867+t959);
float t961 = (t115*t873);
float t962 = (t961/t954);
float t963 = (t962*t865);
float t964 = (t871+t963);
float t965 = (t964*t958);
float t966 = (t873+t965);
float t967 = (t115*t879);
float t968 = (t967/t954);
float t969 = (t968*t865);
float t970 = (t877+t969);
float t971 = (t970*t958);
float t972 = (t879+t971);
vec3 t973 = vec3(t960,t966,t972);
float t974 = length(t973);
float t975 = (t974*t974);
bool t976 = (t975<1);
vec3 t977 = vec3(t867,t873,t879);
float t978 = length(t977);
float t979 = (t978*t978);
bool t980 = (t979>1);
bool t981 = (t976&&t980);
float t982;
float t983;
float t984;
float t985;
if(t981){
t982 = 0;
t983 = 0;
t984 = 0;
t985 = 1;
} else {
t982 = 0;
t983 = 0;
t984 = 0;
t985 = 0;
}
float t986 = (1-t948);
float t987 = (t914*t986);
float t988 = (t948+t987);
float t989 = (1-t988);
float t990 = (t985*t989);
float t991 = (t982*t990);
float t992 = (t952+t991);
bool t993 = (t873>0);
bool t994 = (t966>0);
bool t995 = (!t994);
bool t996 = (t993&&t995);
bool t997 = (!t993);
bool t998 = (t994&&t997);
bool t999 = (t996||t998);
bool t1000 = (t975<196);
bool t1001 = (t975>float(6.76));
bool t1002 = (t1000&&t1001);
bool t1003 = (t999&&t1002);
float t1004;
float t1005;
float t1006;
float t1007;
if(t1003){
float t1008 = (t966/t964);
float t1009 = (-t1008);
float t1010 = (t1009*t957);
float t1011 = (t960+t1010);
float t1012 = atan(t1011,t972);
float t1013 = (u1.u0/30);
float t1014 = (t1012+t1013);
float t1015 = (2*3.1415927);
float t1016 = (t1014+t1015);
float t1017 = mod(t1016,2);
float t1018 = (t1017*3.1415927);
float t1019 = (t1018/t1015);
float t1020 = (t1009*t964);
float t1021 = (t966+t1020);
float t1022 = (t1009*t970);
float t1023 = (t972+t1022);
vec3 t1024 = vec3(t1011,t1021,t1023);
float t1025 = length(t1024);
float t1026 = (t1025*t1025);
float t1027 = sqrt(t1026);
float t1028 = (t1027-float(2.6));
float t1029 = (t1028/float(11.4));
vec4 t1030 = texture(s4,vec2(t1019,t1029));
t1004 = t1030.x;
t1005 = t1030.y;
t1006 = t1030.z;
vec3 t1031 = vec3(t1030.x,t1030.y,t1030.z);
float t1032 = length(t1031);
float t1033 = (t1032*t1032);
float t1034 = (t1033/float(3.0));
bool t1035 = (t1034<=1);
float t1036;
if(t1035){
t1036 = t1034;
} else {
t1036 = 1;
}
bool t1037 = (t1036>=0);
float t1038;
if(t1037){
t1038 = t1036;
} else {
t1038 = 0;
}
t1007 = t1038;
} else {
t1004 = 0;
t1005 = 0;
t1006 = 0;
t1007 = 0;
}
float t1039 = (1-t988);
float t1040 = (t985*t1039);
float t1041 = (t988+t1040);
float t1042 = (1-t1041);
float t1043 = (t1007*t1042);
float t1044 = (t1004*t1043);
float t1045 = (t992+t1044);
float t1046 = (t115*t960);
float t1047 = pow(t975,float(2.5));
float t1048 = (t1046/t1047);
float t1049 = (t1048*t958);
float t1050 = (t957+t1049);
float t1051 = (t958*u1.u4);
float t1052 = (t1050*t1051);
float t1053 = (t960+t1052);
float t1054 = (t115*t966);
float t1055 = (t1054/t1047);
float t1056 = (t1055*t958);
float t1057 = (t964+t1056);
float t1058 = (t1057*t1051);
float t1059 = (t966+t1058);
float t1060 = (t115*t972);
float t1061 = (t1060/t1047);
float t1062 = (t1061*t958);
float t1063 = (t970+t1062);
float t1064 = (t1063*t1051);
float t1065 = (t972+t1064);
vec3 t1066 = vec3(t1053,t1059,t1065);
float t1067 = length(t1066);
float t1068 = (t1067*t1067);
bool t1069 = (t1068<1);
vec3 t1070 = vec3(t960,t966,t972);
float t1071 = length(t1070);
float t1072 = (t1071*t1071);
bool t1073 = (t1072>1);
bool t1074 = (t1069&&t1073);
float t1075;
float t1076;
float t1077;
float t1078;
if(t1074){
t1075 = 0;
t1076 = 0;
t1077 = 0;
t1078 = 1;
} else {
t1075 = 0;
t1076 = 0;
t1077 = 0;
t1078 = 0;
}
float t1079 = (1-t1041);
float t1080 = (t1007*t1079);
float t1081 = (t1041+t1080);
float t1082 = (1-t1081);
float t1083 = (t1078*t1082);
float t1084 = (t1075*t1083);
float t1085 = (t1045+t1084);
bool t1086 = (t966>0);
bool t1087 = (t1059>0);
bool t1088 = (!t1087);
bool t1089 = (t1086&&t1088);
bool t1090 = (!t1086);
bool t1091 = (t1087&&t1090);
bool t1092 = (t1089||t1091);
bool t1093 = (t1068<196);
bool t1094 = (t1068>float(6.76));
bool t1095 = (t1093&&t1094);
bool t1096 = (t1092&&t1095);
float t1097;
float t1098;
float t1099;
float t1100;
if(t1096){
float t1101 = (t1059/t1057);
float t1102 = (-t1101);
float t1103 = (t1102*t1050);
float t1104 = (t1053+t1103);
float t1105 = atan(t1104,t1065);
float t1106 = (u1.u0/30);
float t1107 = (t1105+t1106);
float t1108 = (2*3.1415927);
float t1109 = (t1107+t1108);
float t1110 = mod(t1109,2);
float t1111 = (t1110*3.1415927);
float t1112 = (t1111/t1108);
float t1113 = (t1102*t1057);
float t1114 = (t1059+t1113);
float t1115 = (t1102*t1063);
float t1116 = (t1065+t1115);
vec3 t1117 = vec3(t1104,t1114,t1116);
float t1118 = length(t1117);
float t1119 = (t1118*t1118);
float t1120 = sqrt(t1119);
float t1121 = (t1120-float(2.6));
float t1122 = (t1121/float(11.4));
vec4 t1123 = texture(s4,vec2(t1112,t1122));
t1097 = t1123.x;
t1098 = t1123.y;
t1099 = t1123.z;
vec3 t1124 = vec3(t1123.x,t1123.y,t1123.z);
float t1125 = length(t1124);
float t1126 = (t1125*t1125);
float t1127 = (t1126/float(3.0));
bool t1128 = (t1127<=1);
float t1129;
if(t1128){
t1129 = t1127;
} else {
t1129 = 1;
}
bool t1130 = (t1129>=0);
float t1131;
if(t1130){
t1131 = t1129;
} else {
t1131 = 0;
}
t1100 = t1131;
} else {
t1097 = 0;
t1098 = 0;
t1099 = 0;
t1100 = 0;
}
float t1132 = (1-t1081);
float t1133 = (t1078*t1132);
float t1134 = (t1081+t1133);
float t1135 = (1-t1134);
float t1136 = (t1100*t1135);
float t1137 = (t1097*t1136);
float t1138 = (t1085+t1137);
float t1139 = (t115*t1053);
float t1140 = pow(t1068,float(2.5));
float t1141 = (t1139/t1140);
float t1142 = (t1141*t1051);
float t1143 = (t1050+t1142);
float t1144 = (t1051*u1.u4);
float t1145 = (t1143*t1144);
float t1146 = (t1053+t1145);
float t1147 = (t115*t1059);
float t1148 = (t1147/t1140);
float t1149 = (t1148*t1051);
float t1150 = (t1057+t1149);
float t1151 = (t1150*t1144);
float t1152 = (t1059+t1151);
float t1153 = (t115*t1065);
float t1154 = (t1153/t1140);
float t1155 = (t1154*t1051);
float t1156 = (t1063+t1155);
float t1157 = (t1156*t1144);
float t1158 = (t1065+t1157);
vec3 t1159 = vec3(t1146,t1152,t1158);
float t1160 = length(t1159);
float t1161 = (t1160*t1160);
bool t1162 = (t1161<1);
vec3 t1163 = vec3(t1053,t1059,t1065);
float t1164 = length(t1163);
float t1165 = (t1164*t1164);
bool t1166 = (t1165>1);
bool t1167 = (t1162&&t1166);
float t1168;
float t1169;
float t1170;
float t1171;
if(t1167){
t1168 = 0;
t1169 = 0;
t1170 = 0;
t1171 = 1;
} else {
t1168 = 0;
t1169 = 0;
t1170 = 0;
t1171 = 0;
}
float t1172 = (1-t1134);
float t1173 = (t1100*t1172);
float t1174 = (t1134+t1173);
float t1175 = (1-t1174);
float t1176 = (t1171*t1175);
float t1177 = (t1168*t1176);
float t1178 = (t1138+t1177);
bool t1179 = (t1059>0);
bool t1180 = (t1152>0);
bool t1181 = (!t1180);
bool t1182 = (t1179&&t1181);
bool t1183 = (!t1179);
bool t1184 = (t1180&&t1183);
bool t1185 = (t1182||t1184);
bool t1186 = (t1161<196);
bool t1187 = (t1161>float(6.76));
bool t1188 = (t1186&&t1187);
bool t1189 = (t1185&&t1188);
float t1190;
float t1191;
float t1192;
float t1193;
if(t1189){
float t1194 = (t1152/t1150);
float t1195 = (-t1194);
float t1196 = (t1195*t1143);
float t1197 = (t1146+t1196);
float t1198 = atan(t1197,t1158);
float t1199 = (u1.u0/30);
float t1200 = (t1198+t1199);
float t1201 = (2*3.1415927);
float t1202 = (t1200+t1201);
float t1203 = mod(t1202,2);
float t1204 = (t1203*3.1415927);
float t1205 = (t1204/t1201);
float t1206 = (t1195*t1150);
float t1207 = (t1152+t1206);
float t1208 = (t1195*t1156);
float t1209 = (t1158+t1208);
vec3 t1210 = vec3(t1197,t1207,t1209);
float t1211 = length(t1210);
float t1212 = (t1211*t1211);
float t1213 = sqrt(t1212);
float t1214 = (t1213-float(2.6));
float t1215 = (t1214/float(11.4));
vec4 t1216 = texture(s4,vec2(t1205,t1215));
t1190 = t1216.x;
t1191 = t1216.y;
t1192 = t1216.z;
vec3 t1217 = vec3(t1216.x,t1216.y,t1216.z);
float t1218 = length(t1217);
float t1219 = (t1218*t1218);
float t1220 = (t1219/float(3.0));
bool t1221 = (t1220<=1);
float t1222;
if(t1221){
t1222 = t1220;
} else {
t1222 = 1;
}
bool t1223 = (t1222>=0);
float t1224;
if(t1223){
t1224 = t1222;
} else {
t1224 = 0;
}
t1193 = t1224;
} else {
t1190 = 0;
t1191 = 0;
t1192 = 0;
t1193 = 0;
}
float t1225 = (1-t1174);
float t1226 = (t1171*t1225);
float t1227 = (t1174+t1226);
float t1228 = (1-t1227);
float t1229 = (t1193*t1228);
float t1230 = (t1190*t1229);
float t1231 = (t1178+t1230);
float t1232 = (t115*t1146);
float t1233 = pow(t1161,float(2.5));
float t1234 = (t1232/t1233);
float t1235 = (t1234*t1144);
float t1236 = (t1143+t1235);
float t1237 = (t1144*u1.u4);
float t1238 = (t1236*t1237);
float t1239 = (t1146+t1238);
float t1240 = (t115*t1152);
float t1241 = (t1240/t1233);
float t1242 = (t1241*t1144);
float t1243 = (t1150+t1242);
float t1244 = (t1243*t1237);
float t1245 = (t1152+t1244);
float t1246 = (t115*t1158);
float t1247 = (t1246/t1233);
float t1248 = (t1247*t1144);
float t1249 = (t1156+t1248);
float t1250 = (t1249*t1237);
float t1251 = (t1158+t1250);
vec3 t1252 = vec3(t1239,t1245,t1251);
float t1253 = length(t1252);
float t1254 = (t1253*t1253);
bool t1255 = (t1254<1);
vec3 t1256 = vec3(t1146,t1152,t1158);
float t1257 = length(t1256);
float t1258 = (t1257*t1257);
bool t1259 = (t1258>1);
bool t1260 = (t1255&&t1259);
float t1261;
float t1262;
float t1263;
float t1264;
if(t1260){
t1261 = 0;
t1262 = 0;
t1263 = 0;
t1264 = 1;
} else {
t1261 = 0;
t1262 = 0;
t1263 = 0;
t1264 = 0;
}
float t1265 = (1-t1227);
float t1266 = (t1193*t1265);
float t1267 = (t1227+t1266);
float t1268 = (1-t1267);
float t1269 = (t1264*t1268);
float t1270 = (t1261*t1269);
float t1271 = (t1231+t1270);
bool t1272 = (t1152>0);
bool t1273 = (t1245>0);
bool t1274 = (!t1273);
bool t1275 = (t1272&&t1274);
bool t1276 = (!t1272);
bool t1277 = (t1273&&t1276);
bool t1278 = (t1275||t1277);
bool t1279 = (t1254<196);
bool t1280 = (t1254>float(6.76));
bool t1281 = (t1279&&t1280);
bool t1282 = (t1278&&t1281);
float t1283;
float t1284;
float t1285;
float t1286;
if(t1282){
float t1287 = (t1245/t1243);
float t1288 = (-t1287);
float t1289 = (t1288*t1236);
float t1290 = (t1239+t1289);
float t1291 = atan(t1290,t1251);
float t1292 = (u1.u0/30);
float t1293 = (t1291+t1292);
float t1294 = (2*3.1415927);
float t1295 = (t1293+t1294);
float t1296 = mod(t1295,2);
float t1297 = (t1296*3.1415927);
float t1298 = (t1297/t1294);
float t1299 = (t1288*t1243);
float t1300 = (t1245+t1299);
float t1301 = (t1288*t1249);
float t1302 = (t1251+t1301);
vec3 t1303 = vec3(t1290,t1300,t1302);
float t1304 = length(t1303);
float t1305 = (t1304*t1304);
float t1306 = sqrt(t1305);
float t1307 = (t1306-float(2.6));
float t1308 = (t1307/float(11.4));
vec4 t1309 = texture(s4,vec2(t1298,t1308));
t1283 = t1309.x;
t1284 = t1309.y;
t1285 = t1309.z;
vec3 t1310 = vec3(t1309.x,t1309.y,t1309.z);
float t1311 = length(t1310);
float t1312 = (t1311*t1311);
float t1313 = (t1312/float(3.0));
bool t1314 = (t1313<=1);
float t1315;
if(t1314){
t1315 = t1313;
} else {
t1315 = 1;
}
bool t1316 = (t1315>=0);
float t1317;
if(t1316){
t1317 = t1315;
} else {
t1317 = 0;
}
t1286 = t1317;
} else {
t1283 = 0;
t1284 = 0;
t1285 = 0;
t1286 = 0;
}
float t1318 = (1-t1267);
float t1319 = (t1264*t1318);
float t1320 = (t1267+t1319);
float t1321 = (1-t1320);
float t1322 = (t1286*t1321);
float t1323 = (t1283*t1322);
float t1324 = (t1271+t1323);
float t1325 = (t115*t1239);
float t1326 = pow(t1254,float(2.5));
float t1327 = (t1325/t1326);
float t1328 = (t1327*t1237);
float t1329 = (t1236+t1328);
float t1330 = (t1237*u1.u4);
float t1331 = (t1329*t1330);
float t1332 = (t1239+t1331);
float t1333 = (t115*t1245);
float t1334 = (t1333/t1326);
float t1335 = (t1334*t1237);
float t1336 = (t1243+t1335);
float t1337 = (t1336*t1330);
float t1338 = (t1245+t1337);
float t1339 = (t115*t1251);
float t1340 = (t1339/t1326);
float t1341 = (t1340*t1237);
float t1342 = (t1249+t1341);
float t1343 = (t1342*t1330);
float t1344 = (t1251+t1343);
vec3 t1345 = vec3(t1332,t1338,t1344);
float t1346 = length(t1345);
float t1347 = (t1346*t1346);
bool t1348 = (t1347<1);
vec3 t1349 = vec3(t1239,t1245,t1251);
float t1350 = length(t1349);
float t1351 = (t1350*t1350);
bool t1352 = (t1351>1);
bool t1353 = (t1348&&t1352);
float t1354;
float t1355;
float t1356;
float t1357;
if(t1353){
t1354 = 0;
t1355 = 0;
t1356 = 0;
t1357 = 1;
} else {
t1354 = 0;
t1355 = 0;
t1356 = 0;
t1357 = 0;
}
float t1358 = (1-t1320);
float t1359 = (t1286*t1358);
float t1360 = (t1320+t1359);
float t1361 = (1-t1360);
float t1362 = (t1357*t1361);
float t1363 = (t1354*t1362);
float t1364 = (t1324+t1363);
bool t1365 = (t1245>0);
bool t1366 = (t1338>0);
bool t1367 = (!t1366);
bool t1368 = (t1365&&t1367);
bool t1369 = (!t1365);
bool t1370 = (t1366&&t1369);
bool t1371 = (t1368||t1370);
bool t1372 = (t1347<196);
bool t1373 = (t1347>float(6.76));
bool t1374 = (t1372&&t1373);
bool t1375 = (t1371&&t1374);
float t1376;
float t1377;
float t1378;
float t1379;
if(t1375){
float t1380 = (t1338/t1336);
float t1381 = (-t1380);
float t1382 = (t1381*t1329);
float t1383 = (t1332+t1382);
float t1384 = atan(t1383,t1344);
float t1385 = (u1.u0/30);
float t1386 = (t1384+t1385);
float t1387 = (2*3.1415927);
float t1388 = (t1386+t1387);
float t1389 = mod(t1388,2);
float t1390 = (t1389*3.1415927);
float t1391 = (t1390/t1387);
float t1392 = (t1381*t1336);
float t1393 = (t1338+t1392);
float t1394 = (t1381*t1342);
float t1395 = (t1344+t1394);
vec3 t1396 = vec3(t1383,t1393,t1395);
float t1397 = length(t1396);
float t1398 = (t1397*t1397);
float t1399 = sqrt(t1398);
float t1400 = (t1399-float(2.6));
float t1401 = (t1400/float(11.4));
vec4 t1402 = texture(s4,vec2(t1391,t1401));
t1376 = t1402.x;
t1377 = t1402.y;
t1378 = t1402.z;
vec3 t1403 = vec3(t1402.x,t1402.y,t1402.z);
float t1404 = length(t1403);
float t1405 = (t1404*t1404);
float t1406 = (t1405/float(3.0));
bool t1407 = (t1406<=1);
float t1408;
if(t1407){
t1408 = t1406;
} else {
t1408 = 1;
}
bool t1409 = (t1408>=0);
float t1410;
if(t1409){
t1410 = t1408;
} else {
t1410 = 0;
}
t1379 = t1410;
} else {
t1376 = 0;
t1377 = 0;
t1378 = 0;
t1379 = 0;
}
float t1411 = (1-t1360);
float t1412 = (t1357*t1411);
float t1413 = (t1360+t1412);
float t1414 = (1-t1413);
float t1415 = (t1379*t1414);
float t1416 = (t1376*t1415);
float t1417 = (t1364+t1416);
float t1418 = (t115*t1332);
float t1419 = pow(t1347,float(2.5));
float t1420 = (t1418/t1419);
float t1421 = (t1420*t1330);
float t1422 = (t1329+t1421);
float t1423 = (t1330*u1.u4);
float t1424 = (t1422*t1423);
float t1425 = (t1332+t1424);
float t1426 = (t115*t1338);
float t1427 = (t1426/t1419);
float t1428 = (t1427*t1330);
float t1429 = (t1336+t1428);
float t1430 = (t1429*t1423);
float t1431 = (t1338+t1430);
float t1432 = (t115*t1344);
float t1433 = (t1432/t1419);
float t1434 = (t1433*t1330);
float t1435 = (t1342+t1434);
float t1436 = (t1435*t1423);
float t1437 = (t1344+t1436);
vec3 t1438 = vec3(t1425,t1431,t1437);
float t1439 = length(t1438);
float t1440 = (t1439*t1439);
bool t1441 = (t1440<1);
vec3 t1442 = vec3(t1332,t1338,t1344);
float t1443 = length(t1442);
float t1444 = (t1443*t1443);
bool t1445 = (t1444>1);
bool t1446 = (t1441&&t1445);
float t1447;
float t1448;
float t1449;
float t1450;
if(t1446){
t1447 = 0;
t1448 = 0;
t1449 = 0;
t1450 = 1;
} else {
t1447 = 0;
t1448 = 0;
t1449 = 0;
t1450 = 0;
}
float t1451 = (1-t1413);
float t1452 = (t1379*t1451);
float t1453 = (t1413+t1452);
float t1454 = (1-t1453);
float t1455 = (t1450*t1454);
float t1456 = (t1447*t1455);
float t1457 = (t1417+t1456);
bool t1458 = (t1338>0);
bool t1459 = (t1431>0);
bool t1460 = (!t1459);
bool t1461 = (t1458&&t1460);
bool t1462 = (!t1458);
bool t1463 = (t1459&&t1462);
bool t1464 = (t1461||t1463);
bool t1465 = (t1440<196);
bool t1466 = (t1440>float(6.76));
bool t1467 = (t1465&&t1466);
bool t1468 = (t1464&&t1467);
float t1469;
float t1470;
float t1471;
float t1472;
if(t1468){
float t1473 = (t1431/t1429);
float t1474 = (-t1473);
float t1475 = (t1474*t1422);
float t1476 = (t1425+t1475);
float t1477 = atan(t1476,t1437);
float t1478 = (u1.u0/30);
float t1479 = (t1477+t1478);
float t1480 = (2*3.1415927);
float t1481 = (t1479+t1480);
float t1482 = mod(t1481,2);
float t1483 = (t1482*3.1415927);
float t1484 = (t1483/t1480);
float t1485 = (t1474*t1429);
float t1486 = (t1431+t1485);
float t1487 = (t1474*t1435);
float t1488 = (t1437+t1487);
vec3 t1489 = vec3(t1476,t1486,t1488);
float t1490 = length(t1489);
float t1491 = (t1490*t1490);
float t1492 = sqrt(t1491);
float t1493 = (t1492-float(2.6));
float t1494 = (t1493/float(11.4));
vec4 t1495 = texture(s4,vec2(t1484,t1494));
t1469 = t1495.x;
t1470 = t1495.y;
t1471 = t1495.z;
vec3 t1496 = vec3(t1495.x,t1495.y,t1495.z);
float t1497 = length(t1496);
float t1498 = (t1497*t1497);
float t1499 = (t1498/float(3.0));
bool t1500 = (t1499<=1);
float t1501;
if(t1500){
t1501 = t1499;
} else {
t1501 = 1;
}
bool t1502 = (t1501>=0);
float t1503;
if(t1502){
t1503 = t1501;
} else {
t1503 = 0;
}
t1472 = t1503;
} else {
t1469 = 0;
t1470 = 0;
t1471 = 0;
t1472 = 0;
}
float t1504 = (1-t1453);
float t1505 = (t1450*t1504);
float t1506 = (t1453+t1505);
float t1507 = (1-t1506);
float t1508 = (t1472*t1507);
float t1509 = (t1469*t1508);
float t1510 = (t1457+t1509);
float t1511 = (t115*t1425);
float t1512 = pow(t1440,float(2.5));
float t1513 = (t1511/t1512);
float t1514 = (t1513*t1423);
float t1515 = (t1422+t1514);
float t1516 = (t1423*u1.u4);
float t1517 = (t1515*t1516);
float t1518 = (t1425+t1517);
float t1519 = (t115*t1431);
float t1520 = (t1519/t1512);
float t1521 = (t1520*t1423);
float t1522 = (t1429+t1521);
float t1523 = (t1522*t1516);
float t1524 = (t1431+t1523);
float t1525 = (t115*t1437);
float t1526 = (t1525/t1512);
float t1527 = (t1526*t1423);
float t1528 = (t1435+t1527);
float t1529 = (t1528*t1516);
float t1530 = (t1437+t1529);
vec3 t1531 = vec3(t1518,t1524,t1530);
float t1532 = length(t1531);
float t1533 = (t1532*t1532);
bool t1534 = (t1533<1);
vec3 t1535 = vec3(t1425,t1431,t1437);
float t1536 = length(t1535);
float t1537 = (t1536*t1536);
bool t1538 = (t1537>1);
bool t1539 = (t1534&&t1538);
float t1540;
float t1541;
float t1542;
float t1543;
if(t1539){
t1540 = 0;
t1541 = 0;
t1542 = 0;
t1543 = 1;
} else {
t1540 = 0;
t1541 = 0;
t1542 = 0;
t1543 = 0;
}
float t1544 = (1-t1506);
float t1545 = (t1472*t1544);
float t1546 = (t1506+t1545);
float t1547 = (1-t1546);
float t1548 = (t1543*t1547);
float t1549 = (t1540*t1548);
float t1550 = (t1510+t1549);
bool t1551 = (t1431>0);
bool t1552 = (t1524>0);
bool t1553 = (!t1552);
bool t1554 = (t1551&&t1553);
bool t1555 = (!t1551);
bool t1556 = (t1552&&t1555);
bool t1557 = (t1554||t1556);
bool t1558 = (t1533<196);
bool t1559 = (t1533>float(6.76));
bool t1560 = (t1558&&t1559);
bool t1561 = (t1557&&t1560);
float t1562;
float t1563;
float t1564;
float t1565;
if(t1561){
float t1566 = (t1524/t1522);
float t1567 = (-t1566);
float t1568 = (t1567*t1515);
float t1569 = (t1518+t1568);
float t1570 = atan(t1569,t1530);
float t1571 = (u1.u0/30);
float t1572 = (t1570+t1571);
float t1573 = (2*3.1415927);
float t1574 = (t1572+t1573);
float t1575 = mod(t1574,2);
float t1576 = (t1575*3.1415927);
float t1577 = (t1576/t1573);
float t1578 = (t1567*t1522);
float t1579 = (t1524+t1578);
float t1580 = (t1567*t1528);
float t1581 = (t1530+t1580);
vec3 t1582 = vec3(t1569,t1579,t1581);
float t1583 = length(t1582);
float t1584 = (t1583*t1583);
float t1585 = sqrt(t1584);
float t1586 = (t1585-float(2.6));
float t1587 = (t1586/float(11.4));
vec4 t1588 = texture(s4,vec2(t1577,t1587));
t1562 = t1588.x;
t1563 = t1588.y;
t1564 = t1588.z;
vec3 t1589 = vec3(t1588.x,t1588.y,t1588.z);
float t1590 = length(t1589);
float t1591 = (t1590*t1590);
float t1592 = (t1591/float(3.0));
bool t1593 = (t1592<=1);
float t1594;
if(t1593){
t1594 = t1592;
} else {
t1594 = 1;
}
bool t1595 = (t1594>=0);
float t1596;
if(t1595){
t1596 = t1594;
} else {
t1596 = 0;
}
t1565 = t1596;
} else {
t1562 = 0;
t1563 = 0;
t1564 = 0;
t1565 = 0;
}
float t1597 = (1-t1546);
float t1598 = (t1543*t1597);
float t1599 = (t1546+t1598);
float t1600 = (1-t1599);
float t1601 = (t1565*t1600);
float t1602 = (t1562*t1601);
float t1603 = (t1550+t1602);
float t1604 = (t115*t1518);
float t1605 = pow(t1533,float(2.5));
float t1606 = (t1604/t1605);
float t1607 = (t1606*t1516);
float t1608 = (t1515+t1607);
float t1609 = (t1516*u1.u4);
float t1610 = (t1608*t1609);
float t1611 = (t1518+t1610);
float t1612 = (t115*t1524);
float t1613 = (t1612/t1605);
float t1614 = (t1613*t1516);
float t1615 = (t1522+t1614);
float t1616 = (t1615*t1609);
float t1617 = (t1524+t1616);
float t1618 = (t115*t1530);
float t1619 = (t1618/t1605);
float t1620 = (t1619*t1516);
float t1621 = (t1528+t1620);
float t1622 = (t1621*t1609);
float t1623 = (t1530+t1622);
vec3 t1624 = vec3(t1611,t1617,t1623);
float t1625 = length(t1624);
float t1626 = (t1625*t1625);
bool t1627 = (t1626<1);
vec3 t1628 = vec3(t1518,t1524,t1530);
float t1629 = length(t1628);
float t1630 = (t1629*t1629);
bool t1631 = (t1630>1);
bool t1632 = (t1627&&t1631);
float t1633;
float t1634;
float t1635;
float t1636;
if(t1632){
t1633 = 0;
t1634 = 0;
t1635 = 0;
t1636 = 1;
} else {
t1633 = 0;
t1634 = 0;
t1635 = 0;
t1636 = 0;
}
float t1637 = (1-t1599);
float t1638 = (t1565*t1637);
float t1639 = (t1599+t1638);
float t1640 = (1-t1639);
float t1641 = (t1636*t1640);
float t1642 = (t1633*t1641);
float t1643 = (t1603+t1642);
bool t1644 = (t1524>0);
bool t1645 = (t1617>0);
bool t1646 = (!t1645);
bool t1647 = (t1644&&t1646);
bool t1648 = (!t1644);
bool t1649 = (t1645&&t1648);
bool t1650 = (t1647||t1649);
bool t1651 = (t1626<196);
bool t1652 = (t1626>float(6.76));
bool t1653 = (t1651&&t1652);
bool t1654 = (t1650&&t1653);
float t1655;
float t1656;
float t1657;
float t1658;
if(t1654){
float t1659 = (t1617/t1615);
float t1660 = (-t1659);
float t1661 = (t1660*t1608);
float t1662 = (t1611+t1661);
float t1663 = atan(t1662,t1623);
float t1664 = (u1.u0/30);
float t1665 = (t1663+t1664);
float t1666 = (2*3.1415927);
float t1667 = (t1665+t1666);
float t1668 = mod(t1667,2);
float t1669 = (t1668*3.1415927);
float t1670 = (t1669/t1666);
float t1671 = (t1660*t1615);
float t1672 = (t1617+t1671);
float t1673 = (t1660*t1621);
float t1674 = (t1623+t1673);
vec3 t1675 = vec3(t1662,t1672,t1674);
float t1676 = length(t1675);
float t1677 = (t1676*t1676);
float t1678 = sqrt(t1677);
float t1679 = (t1678-float(2.6));
float t1680 = (t1679/float(11.4));
vec4 t1681 = texture(s4,vec2(t1670,t1680));
t1655 = t1681.x;
t1656 = t1681.y;
t1657 = t1681.z;
vec3 t1682 = vec3(t1681.x,t1681.y,t1681.z);
float t1683 = length(t1682);
float t1684 = (t1683*t1683);
float t1685 = (t1684/float(3.0));
bool t1686 = (t1685<=1);
float t1687;
if(t1686){
t1687 = t1685;
} else {
t1687 = 1;
}
bool t1688 = (t1687>=0);
float t1689;
if(t1688){
t1689 = t1687;
} else {
t1689 = 0;
}
t1658 = t1689;
} else {
t1655 = 0;
t1656 = 0;
t1657 = 0;
t1658 = 0;
}
float t1690 = (1-t1639);
float t1691 = (t1636*t1690);
float t1692 = (t1639+t1691);
float t1693 = (1-t1692);
float t1694 = (t1658*t1693);
float t1695 = (t1655*t1694);
float t1696 = (t1643+t1695);
float t1697 = (t115*t1611);
float t1698 = pow(t1626,float(2.5));
float t1699 = (t1697/t1698);
float t1700 = (t1699*t1609);
float t1701 = (t1608+t1700);
float t1702 = (t1609*u1.u4);
float t1703 = (t1701*t1702);
float t1704 = (t1611+t1703);
float t1705 = (t115*t1617);
float t1706 = (t1705/t1698);
float t1707 = (t1706*t1609);
float t1708 = (t1615+t1707);
float t1709 = (t1708*t1702);
float t1710 = (t1617+t1709);
float t1711 = (t115*t1623);
float t1712 = (t1711/t1698);
float t1713 = (t1712*t1609);
float t1714 = (t1621+t1713);
float t1715 = (t1714*t1702);
float t1716 = (t1623+t1715);
vec3 t1717 = vec3(t1704,t1710,t1716);
float t1718 = length(t1717);
float t1719 = (t1718*t1718);
bool t1720 = (t1719<1);
vec3 t1721 = vec3(t1611,t1617,t1623);
float t1722 = length(t1721);
float t1723 = (t1722*t1722);
bool t1724 = (t1723>1);
bool t1725 = (t1720&&t1724);
float t1726;
float t1727;
float t1728;
float t1729;
if(t1725){
t1726 = 0;
t1727 = 0;
t1728 = 0;
t1729 = 1;
} else {
t1726 = 0;
t1727 = 0;
t1728 = 0;
t1729 = 0;
}
float t1730 = (1-t1692);
float t1731 = (t1658*t1730);
float t1732 = (t1692+t1731);
float t1733 = (1-t1732);
float t1734 = (t1729*t1733);
float t1735 = (t1726*t1734);
float t1736 = (t1696+t1735);
bool t1737 = (t1617>0);
bool t1738 = (t1710>0);
bool t1739 = (!t1738);
bool t1740 = (t1737&&t1739);
bool t1741 = (!t1737);
bool t1742 = (t1738&&t1741);
bool t1743 = (t1740||t1742);
bool t1744 = (t1719<196);
bool t1745 = (t1719>float(6.76));
bool t1746 = (t1744&&t1745);
bool t1747 = (t1743&&t1746);
float t1748;
float t1749;
float t1750;
float t1751;
if(t1747){
float t1752 = (t1710/t1708);
float t1753 = (-t1752);
float t1754 = (t1753*t1701);
float t1755 = (t1704+t1754);
float t1756 = atan(t1755,t1716);
float t1757 = (u1.u0/30);
float t1758 = (t1756+t1757);
float t1759 = (2*3.1415927);
float t1760 = (t1758+t1759);
float t1761 = mod(t1760,2);
float t1762 = (t1761*3.1415927);
float t1763 = (t1762/t1759);
float t1764 = (t1753*t1708);
float t1765 = (t1710+t1764);
float t1766 = (t1753*t1714);
float t1767 = (t1716+t1766);
vec3 t1768 = vec3(t1755,t1765,t1767);
float t1769 = length(t1768);
float t1770 = (t1769*t1769);
float t1771 = sqrt(t1770);
float t1772 = (t1771-float(2.6));
float t1773 = (t1772/float(11.4));
vec4 t1774 = texture(s4,vec2(t1763,t1773));
t1748 = t1774.x;
t1749 = t1774.y;
t1750 = t1774.z;
vec3 t1775 = vec3(t1774.x,t1774.y,t1774.z);
float t1776 = length(t1775);
float t1777 = (t1776*t1776);
float t1778 = (t1777/float(3.0));
bool t1779 = (t1778<=1);
float t1780;
if(t1779){
t1780 = t1778;
} else {
t1780 = 1;
}
bool t1781 = (t1780>=0);
float t1782;
if(t1781){
t1782 = t1780;
} else {
t1782 = 0;
}
t1751 = t1782;
} else {
t1748 = 0;
t1749 = 0;
t1750 = 0;
t1751 = 0;
}
float t1783 = (1-t1732);
float t1784 = (t1729*t1783);
float t1785 = (t1732+t1784);
float t1786 = (1-t1785);
float t1787 = (t1751*t1786);
float t1788 = (t1748*t1787);
float t1789 = (t1736+t1788);
float t1790 = (t115*t1704);
float t1791 = pow(t1719,float(2.5));
float t1792 = (t1790/t1791);
float t1793 = (t1792*t1702);
float t1794 = (t1701+t1793);
float t1795 = (t1702*u1.u4);
float t1796 = (t1794*t1795);
float t1797 = (t1704+t1796);
float t1798 = (t115*t1710);
float t1799 = (t1798/t1791);
float t1800 = (t1799*t1702);
float t1801 = (t1708+t1800);
float t1802 = (t1801*t1795);
float t1803 = (t1710+t1802);
float t1804 = (t115*t1716);
float t1805 = (t1804/t1791);
float t1806 = (t1805*t1702);
float t1807 = (t1714+t1806);
float t1808 = (t1807*t1795);
float t1809 = (t1716+t1808);
vec3 t1810 = vec3(t1797,t1803,t1809);
float t1811 = length(t1810);
float t1812 = (t1811*t1811);
bool t1813 = (t1812<1);
vec3 t1814 = vec3(t1704,t1710,t1716);
float t1815 = length(t1814);
float t1816 = (t1815*t1815);
bool t1817 = (t1816>1);
bool t1818 = (t1813&&t1817);
float t1819;
float t1820;
float t1821;
float t1822;
if(t1818){
t1819 = 0;
t1820 = 0;
t1821 = 0;
t1822 = 1;
} else {
t1819 = 0;
t1820 = 0;
t1821 = 0;
t1822 = 0;
}
float t1823 = (1-t1785);
float t1824 = (t1751*t1823);
float t1825 = (t1785+t1824);
float t1826 = (1-t1825);
float t1827 = (t1822*t1826);
float t1828 = (t1819*t1827);
float t1829 = (t1789+t1828);
bool t1830 = (t1710>0);
bool t1831 = (t1803>0);
bool t1832 = (!t1831);
bool t1833 = (t1830&&t1832);
bool t1834 = (!t1830);
bool t1835 = (t1831&&t1834);
bool t1836 = (t1833||t1835);
bool t1837 = (t1812<196);
bool t1838 = (t1812>float(6.76));
bool t1839 = (t1837&&t1838);
bool t1840 = (t1836&&t1839);
float t1841;
float t1842;
float t1843;
float t1844;
if(t1840){
float t1845 = (t1803/t1801);
float t1846 = (-t1845);
float t1847 = (t1846*t1794);
float t1848 = (t1797+t1847);
float t1849 = atan(t1848,t1809);
float t1850 = (u1.u0/30);
float t1851 = (t1849+t1850);
float t1852 = (2*3.1415927);
float t1853 = (t1851+t1852);
float t1854 = mod(t1853,2);
float t1855 = (t1854*3.1415927);
float t1856 = (t1855/t1852);
float t1857 = (t1846*t1801);
float t1858 = (t1803+t1857);
float t1859 = (t1846*t1807);
float t1860 = (t1809+t1859);
vec3 t1861 = vec3(t1848,t1858,t1860);
float t1862 = length(t1861);
float t1863 = (t1862*t1862);
float t1864 = sqrt(t1863);
float t1865 = (t1864-float(2.6));
float t1866 = (t1865/float(11.4));
vec4 t1867 = texture(s4,vec2(t1856,t1866));
t1841 = t1867.x;
t1842 = t1867.y;
t1843 = t1867.z;
vec3 t1868 = vec3(t1867.x,t1867.y,t1867.z);
float t1869 = length(t1868);
float t1870 = (t1869*t1869);
float t1871 = (t1870/float(3.0));
bool t1872 = (t1871<=1);
float t1873;
if(t1872){
t1873 = t1871;
} else {
t1873 = 1;
}
bool t1874 = (t1873>=0);
float t1875;
if(t1874){
t1875 = t1873;
} else {
t1875 = 0;
}
t1844 = t1875;
} else {
t1841 = 0;
t1842 = 0;
t1843 = 0;
t1844 = 0;
}
float t1876 = (1-t1825);
float t1877 = (t1822*t1876);
float t1878 = (t1825+t1877);
float t1879 = (1-t1878);
float t1880 = (t1844*t1879);
float t1881 = (t1841*t1880);
float t1882 = (t1829+t1881);
float t1883 = (t115*t1797);
float t1884 = pow(t1812,float(2.5));
float t1885 = (t1883/t1884);
float t1886 = (t1885*t1795);
float t1887 = (t1794+t1886);
float t1888 = (t1795*u1.u4);
float t1889 = (t1887*t1888);
float t1890 = (t1797+t1889);
float t1891 = (t115*t1803);
float t1892 = (t1891/t1884);
float t1893 = (t1892*t1795);
float t1894 = (t1801+t1893);
float t1895 = (t1894*t1888);
float t1896 = (t1803+t1895);
float t1897 = (t115*t1809);
float t1898 = (t1897/t1884);
float t1899 = (t1898*t1795);
float t1900 = (t1807+t1899);
float t1901 = (t1900*t1888);
float t1902 = (t1809+t1901);
vec3 t1903 = vec3(t1890,t1896,t1902);
float t1904 = length(t1903);
float t1905 = (t1904*t1904);
bool t1906 = (t1905<1);
vec3 t1907 = vec3(t1797,t1803,t1809);
float t1908 = length(t1907);
float t1909 = (t1908*t1908);
bool t1910 = (t1909>1);
bool t1911 = (t1906&&t1910);
float t1912;
float t1913;
float t1914;
float t1915;
if(t1911){
t1912 = 0;
t1913 = 0;
t1914 = 0;
t1915 = 1;
} else {
t1912 = 0;
t1913 = 0;
t1914 = 0;
t1915 = 0;
}
float t1916 = (1-t1878);
float t1917 = (t1844*t1916);
float t1918 = (t1878+t1917);
float t1919 = (1-t1918);
float t1920 = (t1915*t1919);
float t1921 = (t1912*t1920);
float t1922 = (t1882+t1921);
bool t1923 = (t1803>0);
bool t1924 = (t1896>0);
bool t1925 = (!t1924);
bool t1926 = (t1923&&t1925);
bool t1927 = (!t1923);
bool t1928 = (t1924&&t1927);
bool t1929 = (t1926||t1928);
bool t1930 = (t1905<196);
bool t1931 = (t1905>float(6.76));
bool t1932 = (t1930&&t1931);
bool t1933 = (t1929&&t1932);
float t1934;
float t1935;
float t1936;
float t1937;
if(t1933){
float t1938 = (t1896/t1894);
float t1939 = (-t1938);
float t1940 = (t1939*t1887);
float t1941 = (t1890+t1940);
float t1942 = atan(t1941,t1902);
float t1943 = (u1.u0/30);
float t1944 = (t1942+t1943);
float t1945 = (2*3.1415927);
float t1946 = (t1944+t1945);
float t1947 = mod(t1946,2);
float t1948 = (t1947*3.1415927);
float t1949 = (t1948/t1945);
float t1950 = (t1939*t1894);
float t1951 = (t1896+t1950);
float t1952 = (t1939*t1900);
float t1953 = (t1902+t1952);
vec3 t1954 = vec3(t1941,t1951,t1953);
float t1955 = length(t1954);
float t1956 = (t1955*t1955);
float t1957 = sqrt(t1956);
float t1958 = (t1957-float(2.6));
float t1959 = (t1958/float(11.4));
vec4 t1960 = texture(s4,vec2(t1949,t1959));
t1934 = t1960.x;
t1935 = t1960.y;
t1936 = t1960.z;
vec3 t1961 = vec3(t1960.x,t1960.y,t1960.z);
float t1962 = length(t1961);
float t1963 = (t1962*t1962);
float t1964 = (t1963/float(3.0));
bool t1965 = (t1964<=1);
float t1966;
if(t1965){
t1966 = t1964;
} else {
t1966 = 1;
}
bool t1967 = (t1966>=0);
float t1968;
if(t1967){
t1968 = t1966;
} else {
t1968 = 0;
}
t1937 = t1968;
} else {
t1934 = 0;
t1935 = 0;
t1936 = 0;
t1937 = 0;
}
float t1969 = (1-t1918);
float t1970 = (t1915*t1969);
float t1971 = (t1918+t1970);
float t1972 = (1-t1971);
float t1973 = (t1937*t1972);
float t1974 = (t1934*t1973);
float t1975 = (t1922+t1974);
float t1976 = (t115*t1890);
float t1977 = pow(t1905,float(2.5));
float t1978 = (t1976/t1977);
float t1979 = (t1978*t1888);
float t1980 = (t1887+t1979);
float t1981 = (t1888*u1.u4);
float t1982 = (t1980*t1981);
float t1983 = (t1890+t1982);
float t1984 = (t115*t1896);
float t1985 = (t1984/t1977);
float t1986 = (t1985*t1888);
float t1987 = (t1894+t1986);
float t1988 = (t1987*t1981);
float t1989 = (t1896+t1988);
float t1990 = (t115*t1902);
float t1991 = (t1990/t1977);
float t1992 = (t1991*t1888);
float t1993 = (t1900+t1992);
float t1994 = (t1993*t1981);
float t1995 = (t1902+t1994);
vec3 t1996 = vec3(t1983,t1989,t1995);
float t1997 = length(t1996);
float t1998 = (t1997*t1997);
bool t1999 = (t1998<1);
vec3 t2000 = vec3(t1890,t1896,t1902);
float t2001 = length(t2000);
float t2002 = (t2001*t2001);
bool t2003 = (t2002>1);
bool t2004 = (t1999&&t2003);
float t2005;
float t2006;
float t2007;
float t2008;
if(t2004){
t2005 = 0;
t2006 = 0;
t2007 = 0;
t2008 = 1;
} else {
t2005 = 0;
t2006 = 0;
t2007 = 0;
t2008 = 0;
}
float t2009 = (1-t1971);
float t2010 = (t1937*t2009);
float t2011 = (t1971+t2010);
float t2012 = (1-t2011);
float t2013 = (t2008*t2012);
float t2014 = (t2005*t2013);
float t2015 = (t1975+t2014);
bool t2016 = (t1896>0);
bool t2017 = (t1989>0);
bool t2018 = (!t2017);
bool t2019 = (t2016&&t2018);
bool t2020 = (!t2016);
bool t2021 = (t2017&&t2020);
bool t2022 = (t2019||t2021);
bool t2023 = (t1998<196);
bool t2024 = (t1998>float(6.76));
bool t2025 = (t2023&&t2024);
bool t2026 = (t2022&&t2025);
float t2027;
float t2028;
float t2029;
float t2030;
if(t2026){
float t2031 = (t1989/t1987);
float t2032 = (-t2031);
float t2033 = (t2032*t1980);
float t2034 = (t1983+t2033);
float t2035 = atan(t2034,t1995);
float t2036 = (u1.u0/30);
float t2037 = (t2035+t2036);
float t2038 = (2*3.1415927);
float t2039 = (t2037+t2038);
float t2040 = mod(t2039,2);
float t2041 = (t2040*3.1415927);
float t2042 = (t2041/t2038);
float t2043 = (t2032*t1987);
float t2044 = (t1989+t2043);
float t2045 = (t2032*t1993);
float t2046 = (t1995+t2045);
vec3 t2047 = vec3(t2034,t2044,t2046);
float t2048 = length(t2047);
float t2049 = (t2048*t2048);
float t2050 = sqrt(t2049);
float t2051 = (t2050-float(2.6));
float t2052 = (t2051/float(11.4));
vec4 t2053 = texture(s4,vec2(t2042,t2052));
t2027 = t2053.x;
t2028 = t2053.y;
t2029 = t2053.z;
vec3 t2054 = vec3(t2053.x,t2053.y,t2053.z);
float t2055 = length(t2054);
float t2056 = (t2055*t2055);
float t2057 = (t2056/float(3.0));
bool t2058 = (t2057<=1);
float t2059;
if(t2058){
t2059 = t2057;
} else {
t2059 = 1;
}
bool t2060 = (t2059>=0);
float t2061;
if(t2060){
t2061 = t2059;
} else {
t2061 = 0;
}
t2030 = t2061;
} else {
t2027 = 0;
t2028 = 0;
t2029 = 0;
t2030 = 0;
}
float t2062 = (1-t2011);
float t2063 = (t2008*t2062);
float t2064 = (t2011+t2063);
float t2065 = (1-t2064);
float t2066 = (t2030*t2065);
float t2067 = (t2027*t2066);
float t2068 = (t2015+t2067);
float t2069 = (t115*t1983);
float t2070 = pow(t1998,float(2.5));
float t2071 = (t2069/t2070);
float t2072 = (t2071*t1981);
float t2073 = (t1980+t2072);
float t2074 = (t1981*u1.u4);
float t2075 = (t2073*t2074);
float t2076 = (t1983+t2075);
float t2077 = (t115*t1989);
float t2078 = (t2077/t2070);
float t2079 = (t2078*t1981);
float t2080 = (t1987+t2079);
float t2081 = (t2080*t2074);
float t2082 = (t1989+t2081);
float t2083 = (t115*t1995);
float t2084 = (t2083/t2070);
float t2085 = (t2084*t1981);
float t2086 = (t1993+t2085);
float t2087 = (t2086*t2074);
float t2088 = (t1995+t2087);
vec3 t2089 = vec3(t2076,t2082,t2088);
float t2090 = length(t2089);
float t2091 = (t2090*t2090);
bool t2092 = (t2091<1);
vec3 t2093 = vec3(t1983,t1989,t1995);
float t2094 = length(t2093);
float t2095 = (t2094*t2094);
bool t2096 = (t2095>1);
bool t2097 = (t2092&&t2096);
float t2098;
float t2099;
float t2100;
float t2101;
if(t2097){
t2098 = 0;
t2099 = 0;
t2100 = 0;
t2101 = 1;
} else {
t2098 = 0;
t2099 = 0;
t2100 = 0;
t2101 = 0;
}
float t2102 = (1-t2064);
float t2103 = (t2030*t2102);
float t2104 = (t2064+t2103);
float t2105 = (1-t2104);
float t2106 = (t2101*t2105);
float t2107 = (t2098*t2106);
float t2108 = (t2068+t2107);
bool t2109 = (t1989>0);
bool t2110 = (t2082>0);
bool t2111 = (!t2110);
bool t2112 = (t2109&&t2111);
bool t2113 = (!t2109);
bool t2114 = (t2110&&t2113);
bool t2115 = (t2112||t2114);
bool t2116 = (t2091<196);
bool t2117 = (t2091>float(6.76));
bool t2118 = (t2116&&t2117);
bool t2119 = (t2115&&t2118);
float t2120;
float t2121;
float t2122;
float t2123;
if(t2119){
float t2124 = (t2082/t2080);
float t2125 = (-t2124);
float t2126 = (t2125*t2073);
float t2127 = (t2076+t2126);
float t2128 = atan(t2127,t2088);
float t2129 = (u1.u0/30);
float t2130 = (t2128+t2129);
float t2131 = (2*3.1415927);
float t2132 = (t2130+t2131);
float t2133 = mod(t2132,2);
float t2134 = (t2133*3.1415927);
float t2135 = (t2134/t2131);
float t2136 = (t2125*t2080);
float t2137 = (t2082+t2136);
float t2138 = (t2125*t2086);
float t2139 = (t2088+t2138);
vec3 t2140 = vec3(t2127,t2137,t2139);
float t2141 = length(t2140);
float t2142 = (t2141*t2141);
float t2143 = sqrt(t2142);
float t2144 = (t2143-float(2.6));
float t2145 = (t2144/float(11.4));
vec4 t2146 = texture(s4,vec2(t2135,t2145));
t2120 = t2146.x;
t2121 = t2146.y;
t2122 = t2146.z;
vec3 t2147 = vec3(t2146.x,t2146.y,t2146.z);
float t2148 = length(t2147);
float t2149 = (t2148*t2148);
float t2150 = (t2149/float(3.0));
bool t2151 = (t2150<=1);
float t2152;
if(t2151){
t2152 = t2150;
} else {
t2152 = 1;
}
bool t2153 = (t2152>=0);
float t2154;
if(t2153){
t2154 = t2152;
} else {
t2154 = 0;
}
t2123 = t2154;
} else {
t2120 = 0;
t2121 = 0;
t2122 = 0;
t2123 = 0;
}
float t2155 = (1-t2104);
float t2156 = (t2101*t2155);
float t2157 = (t2104+t2156);
float t2158 = (1-t2157);
float t2159 = (t2123*t2158);
float t2160 = (t2120*t2159);
float t2161 = (t2108+t2160);
float t2162 = (t115*t2076);
float t2163 = pow(t2091,float(2.5));
float t2164 = (t2162/t2163);
float t2165 = (t2164*t2074);
float t2166 = (t2073+t2165);
float t2167 = (t2074*u1.u4);
float t2168 = (t2166*t2167);
float t2169 = (t2076+t2168);
float t2170 = (t115*t2082);
float t2171 = (t2170/t2163);
float t2172 = (t2171*t2074);
float t2173 = (t2080+t2172);
float t2174 = (t2173*t2167);
float t2175 = (t2082+t2174);
float t2176 = (t115*t2088);
float t2177 = (t2176/t2163);
float t2178 = (t2177*t2074);
float t2179 = (t2086+t2178);
float t2180 = (t2179*t2167);
float t2181 = (t2088+t2180);
vec3 t2182 = vec3(t2169,t2175,t2181);
float t2183 = length(t2182);
float t2184 = (t2183*t2183);
bool t2185 = (t2184<1);
vec3 t2186 = vec3(t2076,t2082,t2088);
float t2187 = length(t2186);
float t2188 = (t2187*t2187);
bool t2189 = (t2188>1);
bool t2190 = (t2185&&t2189);
float t2191;
float t2192;
float t2193;
float t2194;
if(t2190){
t2191 = 0;
t2192 = 0;
t2193 = 0;
t2194 = 1;
} else {
t2191 = 0;
t2192 = 0;
t2193 = 0;
t2194 = 0;
}
float t2195 = (1-t2157);
float t2196 = (t2123*t2195);
float t2197 = (t2157+t2196);
float t2198 = (1-t2197);
float t2199 = (t2194*t2198);
float t2200 = (t2191*t2199);
float t2201 = (t2161+t2200);
bool t2202 = (t2082>0);
bool t2203 = (t2175>0);
bool t2204 = (!t2203);
bool t2205 = (t2202&&t2204);
bool t2206 = (!t2202);
bool t2207 = (t2203&&t2206);
bool t2208 = (t2205||t2207);
bool t2209 = (t2184<196);
bool t2210 = (t2184>float(6.76));
bool t2211 = (t2209&&t2210);
bool t2212 = (t2208&&t2211);
float t2213;
float t2214;
float t2215;
float t2216;
if(t2212){
float t2217 = (t2175/t2173);
float t2218 = (-t2217);
float t2219 = (t2218*t2166);
float t2220 = (t2169+t2219);
float t2221 = atan(t2220,t2181);
float t2222 = (u1.u0/30);
float t2223 = (t2221+t2222);
float t2224 = (2*3.1415927);
float t2225 = (t2223+t2224);
float t2226 = mod(t2225,2);
float t2227 = (t2226*3.1415927);
float t2228 = (t2227/t2224);
float t2229 = (t2218*t2173);
float t2230 = (t2175+t2229);
float t2231 = (t2218*t2179);
float t2232 = (t2181+t2231);
vec3 t2233 = vec3(t2220,t2230,t2232);
float t2234 = length(t2233);
float t2235 = (t2234*t2234);
float t2236 = sqrt(t2235);
float t2237 = (t2236-float(2.6));
float t2238 = (t2237/float(11.4));
vec4 t2239 = texture(s4,vec2(t2228,t2238));
t2213 = t2239.x;
t2214 = t2239.y;
t2215 = t2239.z;
vec3 t2240 = vec3(t2239.x,t2239.y,t2239.z);
float t2241 = length(t2240);
float t2242 = (t2241*t2241);
float t2243 = (t2242/float(3.0));
bool t2244 = (t2243<=1);
float t2245;
if(t2244){
t2245 = t2243;
} else {
t2245 = 1;
}
bool t2246 = (t2245>=0);
float t2247;
if(t2246){
t2247 = t2245;
} else {
t2247 = 0;
}
t2216 = t2247;
} else {
t2213 = 0;
t2214 = 0;
t2215 = 0;
t2216 = 0;
}
float t2248 = (1-t2197);
float t2249 = (t2194*t2248);
float t2250 = (t2197+t2249);
float t2251 = (1-t2250);
float t2252 = (t2216*t2251);
float t2253 = (t2213*t2252);
float t2254 = (t2201+t2253);
float t2255 = (t115*t2169);
float t2256 = pow(t2184,float(2.5));
float t2257 = (t2255/t2256);
float t2258 = (t2257*t2167);
float t2259 = (t2166+t2258);
float t2260 = (t2167*u1.u4);
float t2261 = (t2259*t2260);
float t2262 = (t2169+t2261);
float t2263 = (t115*t2175);
float t2264 = (t2263/t2256);
float t2265 = (t2264*t2167);
float t2266 = (t2173+t2265);
float t2267 = (t2266*t2260);
float t2268 = (t2175+t2267);
float t2269 = (t115*t2181);
float t2270 = (t2269/t2256);
float t2271 = (t2270*t2167);
float t2272 = (t2179+t2271);
float t2273 = (t2272*t2260);
float t2274 = (t2181+t2273);
vec3 t2275 = vec3(t2262,t2268,t2274);
float t2276 = length(t2275);
float t2277 = (t2276*t2276);
bool t2278 = (t2277<1);
vec3 t2279 = vec3(t2169,t2175,t2181);
float t2280 = length(t2279);
float t2281 = (t2280*t2280);
bool t2282 = (t2281>1);
bool t2283 = (t2278&&t2282);
float t2284;
float t2285;
float t2286;
float t2287;
if(t2283){
t2284 = 0;
t2285 = 0;
t2286 = 0;
t2287 = 1;
} else {
t2284 = 0;
t2285 = 0;
t2286 = 0;
t2287 = 0;
}
float t2288 = (1-t2250);
float t2289 = (t2216*t2288);
float t2290 = (t2250+t2289);
float t2291 = (1-t2290);
float t2292 = (t2287*t2291);
float t2293 = (t2284*t2292);
float t2294 = (t2254+t2293);
bool t2295 = (t2175>0);
bool t2296 = (t2268>0);
bool t2297 = (!t2296);
bool t2298 = (t2295&&t2297);
bool t2299 = (!t2295);
bool t2300 = (t2296&&t2299);
bool t2301 = (t2298||t2300);
bool t2302 = (t2277<196);
bool t2303 = (t2277>float(6.76));
bool t2304 = (t2302&&t2303);
bool t2305 = (t2301&&t2304);
float t2306;
float t2307;
float t2308;
float t2309;
if(t2305){
float t2310 = (t2268/t2266);
float t2311 = (-t2310);
float t2312 = (t2311*t2259);
float t2313 = (t2262+t2312);
float t2314 = atan(t2313,t2274);
float t2315 = (u1.u0/30);
float t2316 = (t2314+t2315);
float t2317 = (2*3.1415927);
float t2318 = (t2316+t2317);
float t2319 = mod(t2318,2);
float t2320 = (t2319*3.1415927);
float t2321 = (t2320/t2317);
float t2322 = (t2311*t2266);
float t2323 = (t2268+t2322);
float t2324 = (t2311*t2272);
float t2325 = (t2274+t2324);
vec3 t2326 = vec3(t2313,t2323,t2325);
float t2327 = length(t2326);
float t2328 = (t2327*t2327);
float t2329 = sqrt(t2328);
float t2330 = (t2329-float(2.6));
float t2331 = (t2330/float(11.4));
vec4 t2332 = texture(s4,vec2(t2321,t2331));
t2306 = t2332.x;
t2307 = t2332.y;
t2308 = t2332.z;
vec3 t2333 = vec3(t2332.x,t2332.y,t2332.z);
float t2334 = length(t2333);
float t2335 = (t2334*t2334);
float t2336 = (t2335/float(3.0));
bool t2337 = (t2336<=1);
float t2338;
if(t2337){
t2338 = t2336;
} else {
t2338 = 1;
}
bool t2339 = (t2338>=0);
float t2340;
if(t2339){
t2340 = t2338;
} else {
t2340 = 0;
}
t2309 = t2340;
} else {
t2306 = 0;
t2307 = 0;
t2308 = 0;
t2309 = 0;
}
float t2341 = (1-t2290);
float t2342 = (t2287*t2341);
float t2343 = (t2290+t2342);
float t2344 = (1-t2343);
float t2345 = (t2309*t2344);
float t2346 = (t2306*t2345);
float t2347 = (t2294+t2346);
float t2348 = (t115*t2262);
float t2349 = pow(t2277,float(2.5));
float t2350 = (t2348/t2349);
float t2351 = (t2350*t2260);
float t2352 = (t2259+t2351);
float t2353 = (t2260*u1.u4);
float t2354 = (t2352*t2353);
float t2355 = (t2262+t2354);
float t2356 = (t115*t2268);
float t2357 = (t2356/t2349);
float t2358 = (t2357*t2260);
float t2359 = (t2266+t2358);
float t2360 = (t2359*t2353);
float t2361 = (t2268+t2360);
float t2362 = (t115*t2274);
float t2363 = (t2362/t2349);
float t2364 = (t2363*t2260);
float t2365 = (t2272+t2364);
float t2366 = (t2365*t2353);
float t2367 = (t2274+t2366);
vec3 t2368 = vec3(t2355,t2361,t2367);
float t2369 = length(t2368);
float t2370 = (t2369*t2369);
bool t2371 = (t2370<1);
vec3 t2372 = vec3(t2262,t2268,t2274);
float t2373 = length(t2372);
float t2374 = (t2373*t2373);
bool t2375 = (t2374>1);
bool t2376 = (t2371&&t2375);
float t2377;
float t2378;
float t2379;
float t2380;
if(t2376){
t2377 = 0;
t2378 = 0;
t2379 = 0;
t2380 = 1;
} else {
t2377 = 0;
t2378 = 0;
t2379 = 0;
t2380 = 0;
}
float t2381 = (1-t2343);
float t2382 = (t2309*t2381);
float t2383 = (t2343+t2382);
float t2384 = (1-t2383);
float t2385 = (t2380*t2384);
float t2386 = (t2377*t2385);
float t2387 = (t2347+t2386);
bool t2388 = (t2268>0);
bool t2389 = (t2361>0);
bool t2390 = (!t2389);
bool t2391 = (t2388&&t2390);
bool t2392 = (!t2388);
bool t2393 = (t2389&&t2392);
bool t2394 = (t2391||t2393);
bool t2395 = (t2370<196);
bool t2396 = (t2370>float(6.76));
bool t2397 = (t2395&&t2396);
bool t2398 = (t2394&&t2397);
float t2399;
float t2400;
float t2401;
float t2402;
if(t2398){
float t2403 = (t2361/t2359);
float t2404 = (-t2403);
float t2405 = (t2404*t2352);
float t2406 = (t2355+t2405);
float t2407 = atan(t2406,t2367);
float t2408 = (u1.u0/30);
float t2409 = (t2407+t2408);
float t2410 = (2*3.1415927);
float t2411 = (t2409+t2410);
float t2412 = mod(t2411,2);
float t2413 = (t2412*3.1415927);
float t2414 = (t2413/t2410);
float t2415 = (t2404*t2359);
float t2416 = (t2361+t2415);
float t2417 = (t2404*t2365);
float t2418 = (t2367+t2417);
vec3 t2419 = vec3(t2406,t2416,t2418);
float t2420 = length(t2419);
float t2421 = (t2420*t2420);
float t2422 = sqrt(t2421);
float t2423 = (t2422-float(2.6));
float t2424 = (t2423/float(11.4));
vec4 t2425 = texture(s4,vec2(t2414,t2424));
t2399 = t2425.x;
t2400 = t2425.y;
t2401 = t2425.z;
vec3 t2426 = vec3(t2425.x,t2425.y,t2425.z);
float t2427 = length(t2426);
float t2428 = (t2427*t2427);
float t2429 = (t2428/float(3.0));
bool t2430 = (t2429<=1);
float t2431;
if(t2430){
t2431 = t2429;
} else {
t2431 = 1;
}
bool t2432 = (t2431>=0);
float t2433;
if(t2432){
t2433 = t2431;
} else {
t2433 = 0;
}
t2402 = t2433;
} else {
t2399 = 0;
t2400 = 0;
t2401 = 0;
t2402 = 0;
}
float t2434 = (1-t2383);
float t2435 = (t2380*t2434);
float t2436 = (t2383+t2435);
float t2437 = (1-t2436);
float t2438 = (t2402*t2437);
float t2439 = (t2399*t2438);
float t2440 = (t2387+t2439);
float t2441 = (t115*t2355);
float t2442 = pow(t2370,float(2.5));
float t2443 = (t2441/t2442);
float t2444 = (t2443*t2353);
float t2445 = (t2352+t2444);
float t2446 = (t2353*u1.u4);
float t2447 = (t2445*t2446);
float t2448 = (t2355+t2447);
float t2449 = (t115*t2361);
float t2450 = (t2449/t2442);
float t2451 = (t2450*t2353);
float t2452 = (t2359+t2451);
float t2453 = (t2452*t2446);
float t2454 = (t2361+t2453);
float t2455 = (t115*t2367);
float t2456 = (t2455/t2442);
float t2457 = (t2456*t2353);
float t2458 = (t2365+t2457);
float t2459 = (t2458*t2446);
float t2460 = (t2367+t2459);
vec3 t2461 = vec3(t2448,t2454,t2460);
float t2462 = length(t2461);
float t2463 = (t2462*t2462);
bool t2464 = (t2463<1);
vec3 t2465 = vec3(t2355,t2361,t2367);
float t2466 = length(t2465);
float t2467 = (t2466*t2466);
bool t2468 = (t2467>1);
bool t2469 = (t2464&&t2468);
float t2470;
float t2471;
float t2472;
float t2473;
if(t2469){
t2470 = 0;
t2471 = 0;
t2472 = 0;
t2473 = 1;
} else {
t2470 = 0;
t2471 = 0;
t2472 = 0;
t2473 = 0;
}
float t2474 = (1-t2436);
float t2475 = (t2402*t2474);
float t2476 = (t2436+t2475);
float t2477 = (1-t2476);
float t2478 = (t2473*t2477);
float t2479 = (t2470*t2478);
float t2480 = (t2440+t2479);
bool t2481 = (t2361>0);
bool t2482 = (t2454>0);
bool t2483 = (!t2482);
bool t2484 = (t2481&&t2483);
bool t2485 = (!t2481);
bool t2486 = (t2482&&t2485);
bool t2487 = (t2484||t2486);
bool t2488 = (t2463<196);
bool t2489 = (t2463>float(6.76));
bool t2490 = (t2488&&t2489);
bool t2491 = (t2487&&t2490);
float t2492;
float t2493;
float t2494;
float t2495;
if(t2491){
float t2496 = (t2454/t2452);
float t2497 = (-t2496);
float t2498 = (t2497*t2445);
float t2499 = (t2448+t2498);
float t2500 = atan(t2499,t2460);
float t2501 = (u1.u0/30);
float t2502 = (t2500+t2501);
float t2503 = (2*3.1415927);
float t2504 = (t2502+t2503);
float t2505 = mod(t2504,2);
float t2506 = (t2505*3.1415927);
float t2507 = (t2506/t2503);
float t2508 = (t2497*t2452);
float t2509 = (t2454+t2508);
float t2510 = (t2497*t2458);
float t2511 = (t2460+t2510);
vec3 t2512 = vec3(t2499,t2509,t2511);
float t2513 = length(t2512);
float t2514 = (t2513*t2513);
float t2515 = sqrt(t2514);
float t2516 = (t2515-float(2.6));
float t2517 = (t2516/float(11.4));
vec4 t2518 = texture(s4,vec2(t2507,t2517));
t2492 = t2518.x;
t2493 = t2518.y;
t2494 = t2518.z;
vec3 t2519 = vec3(t2518.x,t2518.y,t2518.z);
float t2520 = length(t2519);
float t2521 = (t2520*t2520);
float t2522 = (t2521/float(3.0));
bool t2523 = (t2522<=1);
float t2524;
if(t2523){
t2524 = t2522;
} else {
t2524 = 1;
}
bool t2525 = (t2524>=0);
float t2526;
if(t2525){
t2526 = t2524;
} else {
t2526 = 0;
}
t2495 = t2526;
} else {
t2492 = 0;
t2493 = 0;
t2494 = 0;
t2495 = 0;
}
float t2527 = (1-t2476);
float t2528 = (t2473*t2527);
float t2529 = (t2476+t2528);
float t2530 = (1-t2529);
float t2531 = (t2495*t2530);
float t2532 = (t2492*t2531);
float t2533 = (t2480+t2532);
float t2534 = (t115*t2448);
float t2535 = pow(t2463,float(2.5));
float t2536 = (t2534/t2535);
float t2537 = (t2536*t2446);
float t2538 = (t2445+t2537);
float t2539 = (t2446*u1.u4);
float t2540 = (t2538*t2539);
float t2541 = (t2448+t2540);
float t2542 = (t115*t2454);
float t2543 = (t2542/t2535);
float t2544 = (t2543*t2446);
float t2545 = (t2452+t2544);
float t2546 = (t2545*t2539);
float t2547 = (t2454+t2546);
float t2548 = (t115*t2460);
float t2549 = (t2548/t2535);
float t2550 = (t2549*t2446);
float t2551 = (t2458+t2550);
float t2552 = (t2551*t2539);
float t2553 = (t2460+t2552);
vec3 t2554 = vec3(t2541,t2547,t2553);
float t2555 = length(t2554);
float t2556 = (t2555*t2555);
bool t2557 = (t2556<1);
vec3 t2558 = vec3(t2448,t2454,t2460);
float t2559 = length(t2558);
float t2560 = (t2559*t2559);
bool t2561 = (t2560>1);
bool t2562 = (t2557&&t2561);
float t2563;
float t2564;
float t2565;
float t2566;
if(t2562){
t2563 = 0;
t2564 = 0;
t2565 = 0;
t2566 = 1;
} else {
t2563 = 0;
t2564 = 0;
t2565 = 0;
t2566 = 0;
}
float t2567 = (1-t2529);
float t2568 = (t2495*t2567);
float t2569 = (t2529+t2568);
float t2570 = (1-t2569);
float t2571 = (t2566*t2570);
float t2572 = (t2563*t2571);
float t2573 = (t2533+t2572);
bool t2574 = (t2454>0);
bool t2575 = (t2547>0);
bool t2576 = (!t2575);
bool t2577 = (t2574&&t2576);
bool t2578 = (!t2574);
bool t2579 = (t2575&&t2578);
bool t2580 = (t2577||t2579);
bool t2581 = (t2556<196);
bool t2582 = (t2556>float(6.76));
bool t2583 = (t2581&&t2582);
bool t2584 = (t2580&&t2583);
float t2585;
float t2586;
float t2587;
float t2588;
if(t2584){
float t2589 = (t2547/t2545);
float t2590 = (-t2589);
float t2591 = (t2590*t2538);
float t2592 = (t2541+t2591);
float t2593 = atan(t2592,t2553);
float t2594 = (u1.u0/30);
float t2595 = (t2593+t2594);
float t2596 = (2*3.1415927);
float t2597 = (t2595+t2596);
float t2598 = mod(t2597,2);
float t2599 = (t2598*3.1415927);
float t2600 = (t2599/t2596);
float t2601 = (t2590*t2545);
float t2602 = (t2547+t2601);
float t2603 = (t2590*t2551);
float t2604 = (t2553+t2603);
vec3 t2605 = vec3(t2592,t2602,t2604);
float t2606 = length(t2605);
float t2607 = (t2606*t2606);
float t2608 = sqrt(t2607);
float t2609 = (t2608-float(2.6));
float t2610 = (t2609/float(11.4));
vec4 t2611 = texture(s4,vec2(t2600,t2610));
t2585 = t2611.x;
t2586 = t2611.y;
t2587 = t2611.z;
vec3 t2612 = vec3(t2611.x,t2611.y,t2611.z);
float t2613 = length(t2612);
float t2614 = (t2613*t2613);
float t2615 = (t2614/float(3.0));
bool t2616 = (t2615<=1);
float t2617;
if(t2616){
t2617 = t2615;
} else {
t2617 = 1;
}
bool t2618 = (t2617>=0);
float t2619;
if(t2618){
t2619 = t2617;
} else {
t2619 = 0;
}
t2588 = t2619;
} else {
t2585 = 0;
t2586 = 0;
t2587 = 0;
t2588 = 0;
}
float t2620 = (1-t2569);
float t2621 = (t2566*t2620);
float t2622 = (t2569+t2621);
float t2623 = (1-t2622);
float t2624 = (t2588*t2623);
float t2625 = (t2585*t2624);
float t2626 = (t2573+t2625);
float t2627 = (t115*t2541);
float t2628 = pow(t2556,float(2.5));
float t2629 = (t2627/t2628);
float t2630 = (t2629*t2539);
float t2631 = (t2538+t2630);
float t2632 = (t2539*u1.u4);
float t2633 = (t2631*t2632);
float t2634 = (t2541+t2633);
float t2635 = (t115*t2547);
float t2636 = (t2635/t2628);
float t2637 = (t2636*t2539);
float t2638 = (t2545+t2637);
float t2639 = (t2638*t2632);
float t2640 = (t2547+t2639);
float t2641 = (t115*t2553);
float t2642 = (t2641/t2628);
float t2643 = (t2642*t2539);
float t2644 = (t2551+t2643);
float t2645 = (t2644*t2632);
float t2646 = (t2553+t2645);
vec3 t2647 = vec3(t2634,t2640,t2646);
float t2648 = length(t2647);
float t2649 = (t2648*t2648);
bool t2650 = (t2649<1);
vec3 t2651 = vec3(t2541,t2547,t2553);
float t2652 = length(t2651);
float t2653 = (t2652*t2652);
bool t2654 = (t2653>1);
bool t2655 = (t2650&&t2654);
float t2656;
float t2657;
float t2658;
float t2659;
if(t2655){
t2656 = 0;
t2657 = 0;
t2658 = 0;
t2659 = 1;
} else {
t2656 = 0;
t2657 = 0;
t2658 = 0;
t2659 = 0;
}
float t2660 = (1-t2622);
float t2661 = (t2588*t2660);
float t2662 = (t2622+t2661);
float t2663 = (1-t2662);
float t2664 = (t2659*t2663);
float t2665 = (t2656*t2664);
float t2666 = (t2626+t2665);
bool t2667 = (t2547>0);
bool t2668 = (t2640>0);
bool t2669 = (!t2668);
bool t2670 = (t2667&&t2669);
bool t2671 = (!t2667);
bool t2672 = (t2668&&t2671);
bool t2673 = (t2670||t2672);
bool t2674 = (t2649<196);
bool t2675 = (t2649>float(6.76));
bool t2676 = (t2674&&t2675);
bool t2677 = (t2673&&t2676);
float t2678;
float t2679;
float t2680;
float t2681;
if(t2677){
float t2682 = (t2640/t2638);
float t2683 = (-t2682);
float t2684 = (t2683*t2631);
float t2685 = (t2634+t2684);
float t2686 = atan(t2685,t2646);
float t2687 = (u1.u0/30);
float t2688 = (t2686+t2687);
float t2689 = (2*3.1415927);
float t2690 = (t2688+t2689);
float t2691 = mod(t2690,2);
float t2692 = (t2691*3.1415927);
float t2693 = (t2692/t2689);
float t2694 = (t2683*t2638);
float t2695 = (t2640+t2694);
float t2696 = (t2683*t2644);
float t2697 = (t2646+t2696);
vec3 t2698 = vec3(t2685,t2695,t2697);
float t2699 = length(t2698);
float t2700 = (t2699*t2699);
float t2701 = sqrt(t2700);
float t2702 = (t2701-float(2.6));
float t2703 = (t2702/float(11.4));
vec4 t2704 = texture(s4,vec2(t2693,t2703));
t2678 = t2704.x;
t2679 = t2704.y;
t2680 = t2704.z;
vec3 t2705 = vec3(t2704.x,t2704.y,t2704.z);
float t2706 = length(t2705);
float t2707 = (t2706*t2706);
float t2708 = (t2707/float(3.0));
bool t2709 = (t2708<=1);
float t2710;
if(t2709){
t2710 = t2708;
} else {
t2710 = 1;
}
bool t2711 = (t2710>=0);
float t2712;
if(t2711){
t2712 = t2710;
} else {
t2712 = 0;
}
t2681 = t2712;
} else {
t2678 = 0;
t2679 = 0;
t2680 = 0;
t2681 = 0;
}
float t2713 = (1-t2662);
float t2714 = (t2659*t2713);
float t2715 = (t2662+t2714);
float t2716 = (1-t2715);
float t2717 = (t2681*t2716);
float t2718 = (t2678*t2717);
float t2719 = (t2666+t2718);
float t2720 = (t115*t2634);
float t2721 = pow(t2649,float(2.5));
float t2722 = (t2720/t2721);
float t2723 = (t2722*t2632);
float t2724 = (t2631+t2723);
float t2725 = (t2632*u1.u4);
float t2726 = (t2724*t2725);
float t2727 = (t2634+t2726);
float t2728 = (t115*t2640);
float t2729 = (t2728/t2721);
float t2730 = (t2729*t2632);
float t2731 = (t2638+t2730);
float t2732 = (t2731*t2725);
float t2733 = (t2640+t2732);
float t2734 = (t115*t2646);
float t2735 = (t2734/t2721);
float t2736 = (t2735*t2632);
float t2737 = (t2644+t2736);
float t2738 = (t2737*t2725);
float t2739 = (t2646+t2738);
vec3 t2740 = vec3(t2727,t2733,t2739);
float t2741 = length(t2740);
float t2742 = (t2741*t2741);
bool t2743 = (t2742<1);
vec3 t2744 = vec3(t2634,t2640,t2646);
float t2745 = length(t2744);
float t2746 = (t2745*t2745);
bool t2747 = (t2746>1);
bool t2748 = (t2743&&t2747);
float t2749;
float t2750;
float t2751;
float t2752;
if(t2748){
t2749 = 0;
t2750 = 0;
t2751 = 0;
t2752 = 1;
} else {
t2749 = 0;
t2750 = 0;
t2751 = 0;
t2752 = 0;
}
float t2753 = (1-t2715);
float t2754 = (t2681*t2753);
float t2755 = (t2715+t2754);
float t2756 = (1-t2755);
float t2757 = (t2752*t2756);
float t2758 = (t2749*t2757);
float t2759 = (t2719+t2758);
bool t2760 = (t2640>0);
bool t2761 = (t2733>0);
bool t2762 = (!t2761);
bool t2763 = (t2760&&t2762);
bool t2764 = (!t2760);
bool t2765 = (t2761&&t2764);
bool t2766 = (t2763||t2765);
bool t2767 = (t2742<196);
bool t2768 = (t2742>float(6.76));
bool t2769 = (t2767&&t2768);
bool t2770 = (t2766&&t2769);
float t2771;
float t2772;
float t2773;
float t2774;
if(t2770){
float t2775 = (t2733/t2731);
float t2776 = (-t2775);
float t2777 = (t2776*t2724);
float t2778 = (t2727+t2777);
float t2779 = atan(t2778,t2739);
float t2780 = (u1.u0/30);
float t2781 = (t2779+t2780);
float t2782 = (2*3.1415927);
float t2783 = (t2781+t2782);
float t2784 = mod(t2783,2);
float t2785 = (t2784*3.1415927);
float t2786 = (t2785/t2782);
float t2787 = (t2776*t2731);
float t2788 = (t2733+t2787);
float t2789 = (t2776*t2737);
float t2790 = (t2739+t2789);
vec3 t2791 = vec3(t2778,t2788,t2790);
float t2792 = length(t2791);
float t2793 = (t2792*t2792);
float t2794 = sqrt(t2793);
float t2795 = (t2794-float(2.6));
float t2796 = (t2795/float(11.4));
vec4 t2797 = texture(s4,vec2(t2786,t2796));
t2771 = t2797.x;
t2772 = t2797.y;
t2773 = t2797.z;
vec3 t2798 = vec3(t2797.x,t2797.y,t2797.z);
float t2799 = length(t2798);
float t2800 = (t2799*t2799);
float t2801 = (t2800/float(3.0));
bool t2802 = (t2801<=1);
float t2803;
if(t2802){
t2803 = t2801;
} else {
t2803 = 1;
}
bool t2804 = (t2803>=0);
float t2805;
if(t2804){
t2805 = t2803;
} else {
t2805 = 0;
}
t2774 = t2805;
} else {
t2771 = 0;
t2772 = 0;
t2773 = 0;
t2774 = 0;
}
float t2806 = (1-t2755);
float t2807 = (t2752*t2806);
float t2808 = (t2755+t2807);
float t2809 = (1-t2808);
float t2810 = (t2774*t2809);
float t2811 = (t2771*t2810);
float t2812 = (t2759+t2811);
float t2813 = (t115*t2727);
float t2814 = pow(t2742,float(2.5));
float t2815 = (t2813/t2814);
float t2816 = (t2815*t2725);
float t2817 = (t2724+t2816);
float t2818 = (t2725*u1.u4);
float t2819 = (t2817*t2818);
float t2820 = (t2727+t2819);
float t2821 = (t115*t2733);
float t2822 = (t2821/t2814);
float t2823 = (t2822*t2725);
float t2824 = (t2731+t2823);
float t2825 = (t2824*t2818);
float t2826 = (t2733+t2825);
float t2827 = (t115*t2739);
float t2828 = (t2827/t2814);
float t2829 = (t2828*t2725);
float t2830 = (t2737+t2829);
float t2831 = (t2830*t2818);
float t2832 = (t2739+t2831);
vec3 t2833 = vec3(t2820,t2826,t2832);
float t2834 = length(t2833);
float t2835 = (t2834*t2834);
bool t2836 = (t2835<1);
vec3 t2837 = vec3(t2727,t2733,t2739);
float t2838 = length(t2837);
float t2839 = (t2838*t2838);
bool t2840 = (t2839>1);
bool t2841 = (t2836&&t2840);
float t2842;
float t2843;
float t2844;
float t2845;
if(t2841){
t2842 = 0;
t2843 = 0;
t2844 = 0;
t2845 = 1;
} else {
t2842 = 0;
t2843 = 0;
t2844 = 0;
t2845 = 0;
}
float t2846 = (1-t2808);
float t2847 = (t2774*t2846);
float t2848 = (t2808+t2847);
float t2849 = (1-t2848);
float t2850 = (t2845*t2849);
float t2851 = (t2842*t2850);
float t2852 = (t2812+t2851);
bool t2853 = (t2733>0);
bool t2854 = (t2826>0);
bool t2855 = (!t2854);
bool t2856 = (t2853&&t2855);
bool t2857 = (!t2853);
bool t2858 = (t2854&&t2857);
bool t2859 = (t2856||t2858);
bool t2860 = (t2835<196);
bool t2861 = (t2835>float(6.76));
bool t2862 = (t2860&&t2861);
bool t2863 = (t2859&&t2862);
float t2864;
float t2865;
float t2866;
float t2867;
if(t2863){
float t2868 = (t2826/t2824);
float t2869 = (-t2868);
float t2870 = (t2869*t2817);
float t2871 = (t2820+t2870);
float t2872 = atan(t2871,t2832);
float t2873 = (u1.u0/30);
float t2874 = (t2872+t2873);
float t2875 = (2*3.1415927);
float t2876 = (t2874+t2875);
float t2877 = mod(t2876,2);
float t2878 = (t2877*3.1415927);
float t2879 = (t2878/t2875);
float t2880 = (t2869*t2824);
float t2881 = (t2826+t2880);
float t2882 = (t2869*t2830);
float t2883 = (t2832+t2882);
vec3 t2884 = vec3(t2871,t2881,t2883);
float t2885 = length(t2884);
float t2886 = (t2885*t2885);
float t2887 = sqrt(t2886);
float t2888 = (t2887-float(2.6));
float t2889 = (t2888/float(11.4));
vec4 t2890 = texture(s4,vec2(t2879,t2889));
t2864 = t2890.x;
t2865 = t2890.y;
t2866 = t2890.z;
vec3 t2891 = vec3(t2890.x,t2890.y,t2890.z);
float t2892 = length(t2891);
float t2893 = (t2892*t2892);
float t2894 = (t2893/float(3.0));
bool t2895 = (t2894<=1);
float t2896;
if(t2895){
t2896 = t2894;
} else {
t2896 = 1;
}
bool t2897 = (t2896>=0);
float t2898;
if(t2897){
t2898 = t2896;
} else {
t2898 = 0;
}
t2867 = t2898;
} else {
t2864 = 0;
t2865 = 0;
t2866 = 0;
t2867 = 0;
}
float t2899 = (1-t2848);
float t2900 = (t2845*t2899);
float t2901 = (t2848+t2900);
float t2902 = (1-t2901);
float t2903 = (t2867*t2902);
float t2904 = (t2864*t2903);
float t2905 = (t2852+t2904);
float t2906 = (t115*t2820);
float t2907 = pow(t2835,float(2.5));
float t2908 = (t2906/t2907);
float t2909 = (t2908*t2818);
float t2910 = (t2817+t2909);
float t2911 = (t2818*u1.u4);
float t2912 = (t2910*t2911);
float t2913 = (t2820+t2912);
float t2914 = (t115*t2826);
float t2915 = (t2914/t2907);
float t2916 = (t2915*t2818);
float t2917 = (t2824+t2916);
float t2918 = (t2917*t2911);
float t2919 = (t2826+t2918);
float t2920 = (t115*t2832);
float t2921 = (t2920/t2907);
float t2922 = (t2921*t2818);
float t2923 = (t2830+t2922);
float t2924 = (t2923*t2911);
float t2925 = (t2832+t2924);
vec3 t2926 = vec3(t2913,t2919,t2925);
float t2927 = length(t2926);
float t2928 = (t2927*t2927);
bool t2929 = (t2928<1);
vec3 t2930 = vec3(t2820,t2826,t2832);
float t2931 = length(t2930);
float t2932 = (t2931*t2931);
bool t2933 = (t2932>1);
bool t2934 = (t2929&&t2933);
float t2935;
float t2936;
float t2937;
float t2938;
if(t2934){
t2935 = 0;
t2936 = 0;
t2937 = 0;
t2938 = 1;
} else {
t2935 = 0;
t2936 = 0;
t2937 = 0;
t2938 = 0;
}
float t2939 = (1-t2901);
float t2940 = (t2867*t2939);
float t2941 = (t2901+t2940);
float t2942 = (1-t2941);
float t2943 = (t2938*t2942);
float t2944 = (t2935*t2943);
float t2945 = (t2905+t2944);
bool t2946 = (t2826>0);
bool t2947 = (t2919>0);
bool t2948 = (!t2947);
bool t2949 = (t2946&&t2948);
bool t2950 = (!t2946);
bool t2951 = (t2947&&t2950);
bool t2952 = (t2949||t2951);
bool t2953 = (t2928<196);
bool t2954 = (t2928>float(6.76));
bool t2955 = (t2953&&t2954);
bool t2956 = (t2952&&t2955);
float t2957;
float t2958;
float t2959;
float t2960;
if(t2956){
float t2961 = (t2919/t2917);
float t2962 = (-t2961);
float t2963 = (t2962*t2910);
float t2964 = (t2913+t2963);
float t2965 = atan(t2964,t2925);
float t2966 = (u1.u0/30);
float t2967 = (t2965+t2966);
float t2968 = (2*3.1415927);
float t2969 = (t2967+t2968);
float t2970 = mod(t2969,2);
float t2971 = (t2970*3.1415927);
float t2972 = (t2971/t2968);
float t2973 = (t2962*t2917);
float t2974 = (t2919+t2973);
float t2975 = (t2962*t2923);
float t2976 = (t2925+t2975);
vec3 t2977 = vec3(t2964,t2974,t2976);
float t2978 = length(t2977);
float t2979 = (t2978*t2978);
float t2980 = sqrt(t2979);
float t2981 = (t2980-float(2.6));
float t2982 = (t2981/float(11.4));
vec4 t2983 = texture(s4,vec2(t2972,t2982));
t2957 = t2983.x;
t2958 = t2983.y;
t2959 = t2983.z;
vec3 t2984 = vec3(t2983.x,t2983.y,t2983.z);
float t2985 = length(t2984);
float t2986 = (t2985*t2985);
float t2987 = (t2986/float(3.0));
bool t2988 = (t2987<=1);
float t2989;
if(t2988){
t2989 = t2987;
} else {
t2989 = 1;
}
bool t2990 = (t2989>=0);
float t2991;
if(t2990){
t2991 = t2989;
} else {
t2991 = 0;
}
t2960 = t2991;
} else {
t2957 = 0;
t2958 = 0;
t2959 = 0;
t2960 = 0;
}
float t2992 = (1-t2941);
float t2993 = (t2938*t2992);
float t2994 = (t2941+t2993);
float t2995 = (1-t2994);
float t2996 = (t2960*t2995);
float t2997 = (t2957*t2996);
float t2998 = (t2945+t2997);
float t2999 = (t115*t2913);
float t3000 = pow(t2928,float(2.5));
float t3001 = (t2999/t3000);
float t3002 = (t3001*t2911);
float t3003 = (t2910+t3002);
float t3004 = (t2911*u1.u4);
float t3005 = (t3003*t3004);
float t3006 = (t2913+t3005);
float t3007 = (t115*t2919);
float t3008 = (t3007/t3000);
float t3009 = (t3008*t2911);
float t3010 = (t2917+t3009);
float t3011 = (t3010*t3004);
float t3012 = (t2919+t3011);
float t3013 = (t115*t2925);
float t3014 = (t3013/t3000);
float t3015 = (t3014*t2911);
float t3016 = (t2923+t3015);
float t3017 = (t3016*t3004);
float t3018 = (t2925+t3017);
vec3 t3019 = vec3(t3006,t3012,t3018);
float t3020 = length(t3019);
float t3021 = (t3020*t3020);
bool t3022 = (t3021<1);
vec3 t3023 = vec3(t2913,t2919,t2925);
float t3024 = length(t3023);
float t3025 = (t3024*t3024);
bool t3026 = (t3025>1);
bool t3027 = (t3022&&t3026);
float t3028;
float t3029;
float t3030;
float t3031;
if(t3027){
t3028 = 0;
t3029 = 0;
t3030 = 0;
t3031 = 1;
} else {
t3028 = 0;
t3029 = 0;
t3030 = 0;
t3031 = 0;
}
float t3032 = (1-t2994);
float t3033 = (t2960*t3032);
float t3034 = (t2994+t3033);
float t3035 = (1-t3034);
float t3036 = (t3031*t3035);
float t3037 = (t3028*t3036);
float t3038 = (t2998+t3037);
bool t3039 = (t2919>0);
bool t3040 = (t3012>0);
bool t3041 = (!t3040);
bool t3042 = (t3039&&t3041);
bool t3043 = (!t3039);
bool t3044 = (t3040&&t3043);
bool t3045 = (t3042||t3044);
bool t3046 = (t3021<196);
bool t3047 = (t3021>float(6.76));
bool t3048 = (t3046&&t3047);
bool t3049 = (t3045&&t3048);
float t3050;
float t3051;
float t3052;
float t3053;
if(t3049){
float t3054 = (t3012/t3010);
float t3055 = (-t3054);
float t3056 = (t3055*t3003);
float t3057 = (t3006+t3056);
float t3058 = atan(t3057,t3018);
float t3059 = (u1.u0/30);
float t3060 = (t3058+t3059);
float t3061 = (2*3.1415927);
float t3062 = (t3060+t3061);
float t3063 = mod(t3062,2);
float t3064 = (t3063*3.1415927);
float t3065 = (t3064/t3061);
float t3066 = (t3055*t3010);
float t3067 = (t3012+t3066);
float t3068 = (t3055*t3016);
float t3069 = (t3018+t3068);
vec3 t3070 = vec3(t3057,t3067,t3069);
float t3071 = length(t3070);
float t3072 = (t3071*t3071);
float t3073 = sqrt(t3072);
float t3074 = (t3073-float(2.6));
float t3075 = (t3074/float(11.4));
vec4 t3076 = texture(s4,vec2(t3065,t3075));
t3050 = t3076.x;
t3051 = t3076.y;
t3052 = t3076.z;
vec3 t3077 = vec3(t3076.x,t3076.y,t3076.z);
float t3078 = length(t3077);
float t3079 = (t3078*t3078);
float t3080 = (t3079/float(3.0));
bool t3081 = (t3080<=1);
float t3082;
if(t3081){
t3082 = t3080;
} else {
t3082 = 1;
}
bool t3083 = (t3082>=0);
float t3084;
if(t3083){
t3084 = t3082;
} else {
t3084 = 0;
}
t3053 = t3084;
} else {
t3050 = 0;
t3051 = 0;
t3052 = 0;
t3053 = 0;
}
float t3085 = (1-t3034);
float t3086 = (t3031*t3085);
float t3087 = (t3034+t3086);
float t3088 = (1-t3087);
float t3089 = (t3053*t3088);
float t3090 = (t3050*t3089);
float t3091 = (t3038+t3090);
float t3092 = (t115*t3006);
float t3093 = pow(t3021,float(2.5));
float t3094 = (t3092/t3093);
float t3095 = (t3094*t3004);
float t3096 = (t3003+t3095);
float t3097 = (t3004*u1.u4);
float t3098 = (t3096*t3097);
float t3099 = (t3006+t3098);
float t3100 = (t115*t3012);
float t3101 = (t3100/t3093);
float t3102 = (t3101*t3004);
float t3103 = (t3010+t3102);
float t3104 = (t3103*t3097);
float t3105 = (t3012+t3104);
float t3106 = (t115*t3018);
float t3107 = (t3106/t3093);
float t3108 = (t3107*t3004);
float t3109 = (t3016+t3108);
float t3110 = (t3109*t3097);
float t3111 = (t3018+t3110);
vec3 t3112 = vec3(t3099,t3105,t3111);
float t3113 = length(t3112);
float t3114 = (t3113*t3113);
bool t3115 = (t3114<1);
vec3 t3116 = vec3(t3006,t3012,t3018);
float t3117 = length(t3116);
float t3118 = (t3117*t3117);
bool t3119 = (t3118>1);
bool t3120 = (t3115&&t3119);
float t3121;
float t3122;
float t3123;
float t3124;
if(t3120){
t3121 = 0;
t3122 = 0;
t3123 = 0;
t3124 = 1;
} else {
t3121 = 0;
t3122 = 0;
t3123 = 0;
t3124 = 0;
}
float t3125 = (1-t3087);
float t3126 = (t3053*t3125);
float t3127 = (t3087+t3126);
float t3128 = (1-t3127);
float t3129 = (t3124*t3128);
float t3130 = (t3121*t3129);
float t3131 = (t3091+t3130);
bool t3132 = (t3012>0);
bool t3133 = (t3105>0);
bool t3134 = (!t3133);
bool t3135 = (t3132&&t3134);
bool t3136 = (!t3132);
bool t3137 = (t3133&&t3136);
bool t3138 = (t3135||t3137);
bool t3139 = (t3114<196);
bool t3140 = (t3114>float(6.76));
bool t3141 = (t3139&&t3140);
bool t3142 = (t3138&&t3141);
float t3143;
float t3144;
float t3145;
float t3146;
if(t3142){
float t3147 = (t3105/t3103);
float t3148 = (-t3147);
float t3149 = (t3148*t3096);
float t3150 = (t3099+t3149);
float t3151 = atan(t3150,t3111);
float t3152 = (u1.u0/30);
float t3153 = (t3151+t3152);
float t3154 = (2*3.1415927);
float t3155 = (t3153+t3154);
float t3156 = mod(t3155,2);
float t3157 = (t3156*3.1415927);
float t3158 = (t3157/t3154);
float t3159 = (t3148*t3103);
float t3160 = (t3105+t3159);
float t3161 = (t3148*t3109);
float t3162 = (t3111+t3161);
vec3 t3163 = vec3(t3150,t3160,t3162);
float t3164 = length(t3163);
float t3165 = (t3164*t3164);
float t3166 = sqrt(t3165);
float t3167 = (t3166-float(2.6));
float t3168 = (t3167/float(11.4));
vec4 t3169 = texture(s4,vec2(t3158,t3168));
t3143 = t3169.x;
t3144 = t3169.y;
t3145 = t3169.z;
vec3 t3170 = vec3(t3169.x,t3169.y,t3169.z);
float t3171 = length(t3170);
float t3172 = (t3171*t3171);
float t3173 = (t3172/float(3.0));
bool t3174 = (t3173<=1);
float t3175;
if(t3174){
t3175 = t3173;
} else {
t3175 = 1;
}
bool t3176 = (t3175>=0);
float t3177;
if(t3176){
t3177 = t3175;
} else {
t3177 = 0;
}
t3146 = t3177;
} else {
t3143 = 0;
t3144 = 0;
t3145 = 0;
t3146 = 0;
}
float t3178 = (1-t3127);
float t3179 = (t3124*t3178);
float t3180 = (t3127+t3179);
float t3181 = (1-t3180);
float t3182 = (t3146*t3181);
float t3183 = (t3143*t3182);
float t3184 = (t3131+t3183);
float t3185 = (t115*t3099);
float t3186 = pow(t3114,float(2.5));
float t3187 = (t3185/t3186);
float t3188 = (t3187*t3097);
float t3189 = (t3096+t3188);
float t3190 = (t3097*u1.u4);
float t3191 = (t3189*t3190);
float t3192 = (t3099+t3191);
float t3193 = (t115*t3105);
float t3194 = (t3193/t3186);
float t3195 = (t3194*t3097);
float t3196 = (t3103+t3195);
float t3197 = (t3196*t3190);
float t3198 = (t3105+t3197);
float t3199 = (t115*t3111);
float t3200 = (t3199/t3186);
float t3201 = (t3200*t3097);
float t3202 = (t3109+t3201);
float t3203 = (t3202*t3190);
float t3204 = (t3111+t3203);
vec3 t3205 = vec3(t3192,t3198,t3204);
float t3206 = length(t3205);
float t3207 = (t3206*t3206);
bool t3208 = (t3207<1);
vec3 t3209 = vec3(t3099,t3105,t3111);
float t3210 = length(t3209);
float t3211 = (t3210*t3210);
bool t3212 = (t3211>1);
bool t3213 = (t3208&&t3212);
float t3214;
float t3215;
float t3216;
float t3217;
if(t3213){
t3214 = 0;
t3215 = 0;
t3216 = 0;
t3217 = 1;
} else {
t3214 = 0;
t3215 = 0;
t3216 = 0;
t3217 = 0;
}
float t3218 = (1-t3180);
float t3219 = (t3146*t3218);
float t3220 = (t3180+t3219);
float t3221 = (1-t3220);
float t3222 = (t3217*t3221);
float t3223 = (t3214*t3222);
float t3224 = (t3184+t3223);
bool t3225 = (t3105>0);
bool t3226 = (t3198>0);
bool t3227 = (!t3226);
bool t3228 = (t3225&&t3227);
bool t3229 = (!t3225);
bool t3230 = (t3226&&t3229);
bool t3231 = (t3228||t3230);
bool t3232 = (t3207<196);
bool t3233 = (t3207>float(6.76));
bool t3234 = (t3232&&t3233);
bool t3235 = (t3231&&t3234);
float t3236;
float t3237;
float t3238;
float t3239;
if(t3235){
float t3240 = (t3198/t3196);
float t3241 = (-t3240);
float t3242 = (t3241*t3189);
float t3243 = (t3192+t3242);
float t3244 = atan(t3243,t3204);
float t3245 = (u1.u0/30);
float t3246 = (t3244+t3245);
float t3247 = (2*3.1415927);
float t3248 = (t3246+t3247);
float t3249 = mod(t3248,2);
float t3250 = (t3249*3.1415927);
float t3251 = (t3250/t3247);
float t3252 = (t3241*t3196);
float t3253 = (t3198+t3252);
float t3254 = (t3241*t3202);
float t3255 = (t3204+t3254);
vec3 t3256 = vec3(t3243,t3253,t3255);
float t3257 = length(t3256);
float t3258 = (t3257*t3257);
float t3259 = sqrt(t3258);
float t3260 = (t3259-float(2.6));
float t3261 = (t3260/float(11.4));
vec4 t3262 = texture(s4,vec2(t3251,t3261));
t3236 = t3262.x;
t3237 = t3262.y;
t3238 = t3262.z;
vec3 t3263 = vec3(t3262.x,t3262.y,t3262.z);
float t3264 = length(t3263);
float t3265 = (t3264*t3264);
float t3266 = (t3265/float(3.0));
bool t3267 = (t3266<=1);
float t3268;
if(t3267){
t3268 = t3266;
} else {
t3268 = 1;
}
bool t3269 = (t3268>=0);
float t3270;
if(t3269){
t3270 = t3268;
} else {
t3270 = 0;
}
t3239 = t3270;
} else {
t3236 = 0;
t3237 = 0;
t3238 = 0;
t3239 = 0;
}
float t3271 = (1-t3220);
float t3272 = (t3217*t3271);
float t3273 = (t3220+t3272);
float t3274 = (1-t3273);
float t3275 = (t3239*t3274);
float t3276 = (t3236*t3275);
float t3277 = (t3224+t3276);
float t3278 = (t115*t3192);
float t3279 = pow(t3207,float(2.5));
float t3280 = (t3278/t3279);
float t3281 = (t3280*t3190);
float t3282 = (t3189+t3281);
float t3283 = (t3190*u1.u4);
float t3284 = (t3282*t3283);
float t3285 = (t3192+t3284);
float t3286 = (t115*t3198);
float t3287 = (t3286/t3279);
float t3288 = (t3287*t3190);
float t3289 = (t3196+t3288);
float t3290 = (t3289*t3283);
float t3291 = (t3198+t3290);
float t3292 = (t115*t3204);
float t3293 = (t3292/t3279);
float t3294 = (t3293*t3190);
float t3295 = (t3202+t3294);
float t3296 = (t3295*t3283);
float t3297 = (t3204+t3296);
vec3 t3298 = vec3(t3285,t3291,t3297);
float t3299 = length(t3298);
float t3300 = (t3299*t3299);
bool t3301 = (t3300<1);
vec3 t3302 = vec3(t3192,t3198,t3204);
float t3303 = length(t3302);
float t3304 = (t3303*t3303);
bool t3305 = (t3304>1);
bool t3306 = (t3301&&t3305);
float t3307;
float t3308;
float t3309;
float t3310;
if(t3306){
t3307 = 0;
t3308 = 0;
t3309 = 0;
t3310 = 1;
} else {
t3307 = 0;
t3308 = 0;
t3309 = 0;
t3310 = 0;
}
float t3311 = (1-t3273);
float t3312 = (t3239*t3311);
float t3313 = (t3273+t3312);
float t3314 = (1-t3313);
float t3315 = (t3310*t3314);
float t3316 = (t3307*t3315);
float t3317 = (t3277+t3316);
bool t3318 = (t3198>0);
bool t3319 = (t3291>0);
bool t3320 = (!t3319);
bool t3321 = (t3318&&t3320);
bool t3322 = (!t3318);
bool t3323 = (t3319&&t3322);
bool t3324 = (t3321||t3323);
bool t3325 = (t3300<196);
bool t3326 = (t3300>float(6.76));
bool t3327 = (t3325&&t3326);
bool t3328 = (t3324&&t3327);
float t3329;
float t3330;
float t3331;
float t3332;
if(t3328){
float t3333 = (t3291/t3289);
float t3334 = (-t3333);
float t3335 = (t3334*t3282);
float t3336 = (t3285+t3335);
float t3337 = atan(t3336,t3297);
float t3338 = (u1.u0/30);
float t3339 = (t3337+t3338);
float t3340 = (2*3.1415927);
float t3341 = (t3339+t3340);
float t3342 = mod(t3341,2);
float t3343 = (t3342*3.1415927);
float t3344 = (t3343/t3340);
float t3345 = (t3334*t3289);
float t3346 = (t3291+t3345);
float t3347 = (t3334*t3295);
float t3348 = (t3297+t3347);
vec3 t3349 = vec3(t3336,t3346,t3348);
float t3350 = length(t3349);
float t3351 = (t3350*t3350);
float t3352 = sqrt(t3351);
float t3353 = (t3352-float(2.6));
float t3354 = (t3353/float(11.4));
vec4 t3355 = texture(s4,vec2(t3344,t3354));
t3329 = t3355.x;
t3330 = t3355.y;
t3331 = t3355.z;
vec3 t3356 = vec3(t3355.x,t3355.y,t3355.z);
float t3357 = length(t3356);
float t3358 = (t3357*t3357);
float t3359 = (t3358/float(3.0));
bool t3360 = (t3359<=1);
float t3361;
if(t3360){
t3361 = t3359;
} else {
t3361 = 1;
}
bool t3362 = (t3361>=0);
float t3363;
if(t3362){
t3363 = t3361;
} else {
t3363 = 0;
}
t3332 = t3363;
} else {
t3329 = 0;
t3330 = 0;
t3331 = 0;
t3332 = 0;
}
float t3364 = (1-t3313);
float t3365 = (t3310*t3364);
float t3366 = (t3313+t3365);
float t3367 = (1-t3366);
float t3368 = (t3332*t3367);
float t3369 = (t3329*t3368);
float t3370 = (t3317+t3369);
float t3371 = (t115*t3285);
float t3372 = pow(t3300,float(2.5));
float t3373 = (t3371/t3372);
float t3374 = (t3373*t3283);
float t3375 = (t3282+t3374);
float t3376 = (t3283*u1.u4);
float t3377 = (t3375*t3376);
float t3378 = (t3285+t3377);
float t3379 = (t115*t3291);
float t3380 = (t3379/t3372);
float t3381 = (t3380*t3283);
float t3382 = (t3289+t3381);
float t3383 = (t3382*t3376);
float t3384 = (t3291+t3383);
float t3385 = (t115*t3297);
float t3386 = (t3385/t3372);
float t3387 = (t3386*t3283);
float t3388 = (t3295+t3387);
float t3389 = (t3388*t3376);
float t3390 = (t3297+t3389);
vec3 t3391 = vec3(t3378,t3384,t3390);
float t3392 = length(t3391);
float t3393 = (t3392*t3392);
bool t3394 = (t3393<1);
vec3 t3395 = vec3(t3285,t3291,t3297);
float t3396 = length(t3395);
float t3397 = (t3396*t3396);
bool t3398 = (t3397>1);
bool t3399 = (t3394&&t3398);
float t3400;
float t3401;
float t3402;
float t3403;
if(t3399){
t3400 = 0;
t3401 = 0;
t3402 = 0;
t3403 = 1;
} else {
t3400 = 0;
t3401 = 0;
t3402 = 0;
t3403 = 0;
}
float t3404 = (1-t3366);
float t3405 = (t3332*t3404);
float t3406 = (t3366+t3405);
float t3407 = (1-t3406);
float t3408 = (t3403*t3407);
float t3409 = (t3400*t3408);
float t3410 = (t3370+t3409);
bool t3411 = (t3291>0);
bool t3412 = (t3384>0);
bool t3413 = (!t3412);
bool t3414 = (t3411&&t3413);
bool t3415 = (!t3411);
bool t3416 = (t3412&&t3415);
bool t3417 = (t3414||t3416);
bool t3418 = (t3393<196);
bool t3419 = (t3393>float(6.76));
bool t3420 = (t3418&&t3419);
bool t3421 = (t3417&&t3420);
float t3422;
float t3423;
float t3424;
float t3425;
if(t3421){
float t3426 = (t3384/t3382);
float t3427 = (-t3426);
float t3428 = (t3427*t3375);
float t3429 = (t3378+t3428);
float t3430 = atan(t3429,t3390);
float t3431 = (u1.u0/30);
float t3432 = (t3430+t3431);
float t3433 = (2*3.1415927);
float t3434 = (t3432+t3433);
float t3435 = mod(t3434,2);
float t3436 = (t3435*3.1415927);
float t3437 = (t3436/t3433);
float t3438 = (t3427*t3382);
float t3439 = (t3384+t3438);
float t3440 = (t3427*t3388);
float t3441 = (t3390+t3440);
vec3 t3442 = vec3(t3429,t3439,t3441);
float t3443 = length(t3442);
float t3444 = (t3443*t3443);
float t3445 = sqrt(t3444);
float t3446 = (t3445-float(2.6));
float t3447 = (t3446/float(11.4));
vec4 t3448 = texture(s4,vec2(t3437,t3447));
t3422 = t3448.x;
t3423 = t3448.y;
t3424 = t3448.z;
vec3 t3449 = vec3(t3448.x,t3448.y,t3448.z);
float t3450 = length(t3449);
float t3451 = (t3450*t3450);
float t3452 = (t3451/float(3.0));
bool t3453 = (t3452<=1);
float t3454;
if(t3453){
t3454 = t3452;
} else {
t3454 = 1;
}
bool t3455 = (t3454>=0);
float t3456;
if(t3455){
t3456 = t3454;
} else {
t3456 = 0;
}
t3425 = t3456;
} else {
t3422 = 0;
t3423 = 0;
t3424 = 0;
t3425 = 0;
}
float t3457 = (1-t3406);
float t3458 = (t3403*t3457);
float t3459 = (t3406+t3458);
float t3460 = (1-t3459);
float t3461 = (t3425*t3460);
float t3462 = (t3422*t3461);
float t3463 = (t3410+t3462);
float t3464 = (t115*t3378);
float t3465 = pow(t3393,float(2.5));
float t3466 = (t3464/t3465);
float t3467 = (t3466*t3376);
float t3468 = (t3375+t3467);
float t3469 = (t3376*u1.u4);
float t3470 = (t3468*t3469);
float t3471 = (t3378+t3470);
float t3472 = (t115*t3384);
float t3473 = (t3472/t3465);
float t3474 = (t3473*t3376);
float t3475 = (t3382+t3474);
float t3476 = (t3475*t3469);
float t3477 = (t3384+t3476);
float t3478 = (t115*t3390);
float t3479 = (t3478/t3465);
float t3480 = (t3479*t3376);
float t3481 = (t3388+t3480);
float t3482 = (t3481*t3469);
float t3483 = (t3390+t3482);
vec3 t3484 = vec3(t3471,t3477,t3483);
float t3485 = length(t3484);
float t3486 = (t3485*t3485);
bool t3487 = (t3486<1);
vec3 t3488 = vec3(t3378,t3384,t3390);
float t3489 = length(t3488);
float t3490 = (t3489*t3489);
bool t3491 = (t3490>1);
bool t3492 = (t3487&&t3491);
float t3493;
float t3494;
float t3495;
float t3496;
if(t3492){
t3493 = 0;
t3494 = 0;
t3495 = 0;
t3496 = 1;
} else {
t3493 = 0;
t3494 = 0;
t3495 = 0;
t3496 = 0;
}
float t3497 = (1-t3459);
float t3498 = (t3425*t3497);
float t3499 = (t3459+t3498);
float t3500 = (1-t3499);
float t3501 = (t3496*t3500);
float t3502 = (t3493*t3501);
float t3503 = (t3463+t3502);
bool t3504 = (t3384>0);
bool t3505 = (t3477>0);
bool t3506 = (!t3505);
bool t3507 = (t3504&&t3506);
bool t3508 = (!t3504);
bool t3509 = (t3505&&t3508);
bool t3510 = (t3507||t3509);
bool t3511 = (t3486<196);
bool t3512 = (t3486>float(6.76));
bool t3513 = (t3511&&t3512);
bool t3514 = (t3510&&t3513);
float t3515;
float t3516;
float t3517;
float t3518;
if(t3514){
float t3519 = (t3477/t3475);
float t3520 = (-t3519);
float t3521 = (t3520*t3468);
float t3522 = (t3471+t3521);
float t3523 = atan(t3522,t3483);
float t3524 = (u1.u0/30);
float t3525 = (t3523+t3524);
float t3526 = (2*3.1415927);
float t3527 = (t3525+t3526);
float t3528 = mod(t3527,2);
float t3529 = (t3528*3.1415927);
float t3530 = (t3529/t3526);
float t3531 = (t3520*t3475);
float t3532 = (t3477+t3531);
float t3533 = (t3520*t3481);
float t3534 = (t3483+t3533);
vec3 t3535 = vec3(t3522,t3532,t3534);
float t3536 = length(t3535);
float t3537 = (t3536*t3536);
float t3538 = sqrt(t3537);
float t3539 = (t3538-float(2.6));
float t3540 = (t3539/float(11.4));
vec4 t3541 = texture(s4,vec2(t3530,t3540));
t3515 = t3541.x;
t3516 = t3541.y;
t3517 = t3541.z;
vec3 t3542 = vec3(t3541.x,t3541.y,t3541.z);
float t3543 = length(t3542);
float t3544 = (t3543*t3543);
float t3545 = (t3544/float(3.0));
bool t3546 = (t3545<=1);
float t3547;
if(t3546){
t3547 = t3545;
} else {
t3547 = 1;
}
bool t3548 = (t3547>=0);
float t3549;
if(t3548){
t3549 = t3547;
} else {
t3549 = 0;
}
t3518 = t3549;
} else {
t3515 = 0;
t3516 = 0;
t3517 = 0;
t3518 = 0;
}
float t3550 = (1-t3499);
float t3551 = (t3496*t3550);
float t3552 = (t3499+t3551);
float t3553 = (1-t3552);
float t3554 = (t3518*t3553);
float t3555 = (t3515*t3554);
float t3556 = (t3503+t3555);
float t3557 = (t115*t3471);
float t3558 = pow(t3486,float(2.5));
float t3559 = (t3557/t3558);
float t3560 = (t3559*t3469);
float t3561 = (t3468+t3560);
float t3562 = (t3469*u1.u4);
float t3563 = (t3561*t3562);
float t3564 = (t3471+t3563);
float t3565 = (t115*t3477);
float t3566 = (t3565/t3558);
float t3567 = (t3566*t3469);
float t3568 = (t3475+t3567);
float t3569 = (t3568*t3562);
float t3570 = (t3477+t3569);
float t3571 = (t115*t3483);
float t3572 = (t3571/t3558);
float t3573 = (t3572*t3469);
float t3574 = (t3481+t3573);
float t3575 = (t3574*t3562);
float t3576 = (t3483+t3575);
vec3 t3577 = vec3(t3564,t3570,t3576);
float t3578 = length(t3577);
float t3579 = (t3578*t3578);
bool t3580 = (t3579<1);
vec3 t3581 = vec3(t3471,t3477,t3483);
float t3582 = length(t3581);
float t3583 = (t3582*t3582);
bool t3584 = (t3583>1);
bool t3585 = (t3580&&t3584);
float t3586;
float t3587;
float t3588;
float t3589;
if(t3585){
t3586 = 0;
t3587 = 0;
t3588 = 0;
t3589 = 1;
} else {
t3586 = 0;
t3587 = 0;
t3588 = 0;
t3589 = 0;
}
float t3590 = (1-t3552);
float t3591 = (t3518*t3590);
float t3592 = (t3552+t3591);
float t3593 = (1-t3592);
float t3594 = (t3589*t3593);
float t3595 = (t3586*t3594);
float t3596 = (t3556+t3595);
bool t3597 = (t3477>0);
bool t3598 = (t3570>0);
bool t3599 = (!t3598);
bool t3600 = (t3597&&t3599);
bool t3601 = (!t3597);
bool t3602 = (t3598&&t3601);
bool t3603 = (t3600||t3602);
bool t3604 = (t3579<196);
bool t3605 = (t3579>float(6.76));
bool t3606 = (t3604&&t3605);
bool t3607 = (t3603&&t3606);
float t3608;
float t3609;
float t3610;
float t3611;
if(t3607){
float t3612 = (t3570/t3568);
float t3613 = (-t3612);
float t3614 = (t3613*t3561);
float t3615 = (t3564+t3614);
float t3616 = atan(t3615,t3576);
float t3617 = (u1.u0/30);
float t3618 = (t3616+t3617);
float t3619 = (2*3.1415927);
float t3620 = (t3618+t3619);
float t3621 = mod(t3620,2);
float t3622 = (t3621*3.1415927);
float t3623 = (t3622/t3619);
float t3624 = (t3613*t3568);
float t3625 = (t3570+t3624);
float t3626 = (t3613*t3574);
float t3627 = (t3576+t3626);
vec3 t3628 = vec3(t3615,t3625,t3627);
float t3629 = length(t3628);
float t3630 = (t3629*t3629);
float t3631 = sqrt(t3630);
float t3632 = (t3631-float(2.6));
float t3633 = (t3632/float(11.4));
vec4 t3634 = texture(s4,vec2(t3623,t3633));
t3608 = t3634.x;
t3609 = t3634.y;
t3610 = t3634.z;
vec3 t3635 = vec3(t3634.x,t3634.y,t3634.z);
float t3636 = length(t3635);
float t3637 = (t3636*t3636);
float t3638 = (t3637/float(3.0));
bool t3639 = (t3638<=1);
float t3640;
if(t3639){
t3640 = t3638;
} else {
t3640 = 1;
}
bool t3641 = (t3640>=0);
float t3642;
if(t3641){
t3642 = t3640;
} else {
t3642 = 0;
}
t3611 = t3642;
} else {
t3608 = 0;
t3609 = 0;
t3610 = 0;
t3611 = 0;
}
float t3643 = (1-t3592);
float t3644 = (t3589*t3643);
float t3645 = (t3592+t3644);
float t3646 = (1-t3645);
float t3647 = (t3611*t3646);
float t3648 = (t3608*t3647);
float t3649 = (t3596+t3648);
float t3650 = (t115*t3564);
float t3651 = pow(t3579,float(2.5));
float t3652 = (t3650/t3651);
float t3653 = (t3652*t3562);
float t3654 = (t3561+t3653);
float t3655 = (t3562*u1.u4);
float t3656 = (t3654*t3655);
float t3657 = (t3564+t3656);
float t3658 = (t115*t3570);
float t3659 = (t3658/t3651);
float t3660 = (t3659*t3562);
float t3661 = (t3568+t3660);
float t3662 = (t3661*t3655);
float t3663 = (t3570+t3662);
float t3664 = (t115*t3576);
float t3665 = (t3664/t3651);
float t3666 = (t3665*t3562);
float t3667 = (t3574+t3666);
float t3668 = (t3667*t3655);
float t3669 = (t3576+t3668);
vec3 t3670 = vec3(t3657,t3663,t3669);
float t3671 = length(t3670);
float t3672 = (t3671*t3671);
bool t3673 = (t3672<1);
vec3 t3674 = vec3(t3564,t3570,t3576);
float t3675 = length(t3674);
float t3676 = (t3675*t3675);
bool t3677 = (t3676>1);
bool t3678 = (t3673&&t3677);
float t3679;
float t3680;
float t3681;
float t3682;
if(t3678){
t3679 = 0;
t3680 = 0;
t3681 = 0;
t3682 = 1;
} else {
t3679 = 0;
t3680 = 0;
t3681 = 0;
t3682 = 0;
}
float t3683 = (1-t3645);
float t3684 = (t3611*t3683);
float t3685 = (t3645+t3684);
float t3686 = (1-t3685);
float t3687 = (t3682*t3686);
float t3688 = (t3679*t3687);
float t3689 = (t3649+t3688);
bool t3690 = (t3570>0);
bool t3691 = (t3663>0);
bool t3692 = (!t3691);
bool t3693 = (t3690&&t3692);
bool t3694 = (!t3690);
bool t3695 = (t3691&&t3694);
bool t3696 = (t3693||t3695);
bool t3697 = (t3672<196);
bool t3698 = (t3672>float(6.76));
bool t3699 = (t3697&&t3698);
bool t3700 = (t3696&&t3699);
float t3701;
float t3702;
float t3703;
float t3704;
if(t3700){
float t3705 = (t3663/t3661);
float t3706 = (-t3705);
float t3707 = (t3706*t3654);
float t3708 = (t3657+t3707);
float t3709 = atan(t3708,t3669);
float t3710 = (u1.u0/30);
float t3711 = (t3709+t3710);
float t3712 = (2*3.1415927);
float t3713 = (t3711+t3712);
float t3714 = mod(t3713,2);
float t3715 = (t3714*3.1415927);
float t3716 = (t3715/t3712);
float t3717 = (t3706*t3661);
float t3718 = (t3663+t3717);
float t3719 = (t3706*t3667);
float t3720 = (t3669+t3719);
vec3 t3721 = vec3(t3708,t3718,t3720);
float t3722 = length(t3721);
float t3723 = (t3722*t3722);
float t3724 = sqrt(t3723);
float t3725 = (t3724-float(2.6));
float t3726 = (t3725/float(11.4));
vec4 t3727 = texture(s4,vec2(t3716,t3726));
t3701 = t3727.x;
t3702 = t3727.y;
t3703 = t3727.z;
vec3 t3728 = vec3(t3727.x,t3727.y,t3727.z);
float t3729 = length(t3728);
float t3730 = (t3729*t3729);
float t3731 = (t3730/float(3.0));
bool t3732 = (t3731<=1);
float t3733;
if(t3732){
t3733 = t3731;
} else {
t3733 = 1;
}
bool t3734 = (t3733>=0);
float t3735;
if(t3734){
t3735 = t3733;
} else {
t3735 = 0;
}
t3704 = t3735;
} else {
t3701 = 0;
t3702 = 0;
t3703 = 0;
t3704 = 0;
}
float t3736 = (1-t3685);
float t3737 = (t3682*t3736);
float t3738 = (t3685+t3737);
float t3739 = (1-t3738);
float t3740 = (t3704*t3739);
float t3741 = (t3701*t3740);
float t3742 = (t3689+t3741);
float t3743 = (t115*t3657);
float t3744 = pow(t3672,float(2.5));
float t3745 = (t3743/t3744);
float t3746 = (t3745*t3655);
float t3747 = (t3654+t3746);
float t3748 = (t3655*u1.u4);
float t3749 = (t3747*t3748);
float t3750 = (t3657+t3749);
float t3751 = (t115*t3663);
float t3752 = (t3751/t3744);
float t3753 = (t3752*t3655);
float t3754 = (t3661+t3753);
float t3755 = (t3754*t3748);
float t3756 = (t3663+t3755);
float t3757 = (t115*t3669);
float t3758 = (t3757/t3744);
float t3759 = (t3758*t3655);
float t3760 = (t3667+t3759);
float t3761 = (t3760*t3748);
float t3762 = (t3669+t3761);
vec3 t3763 = vec3(t3750,t3756,t3762);
float t3764 = length(t3763);
float t3765 = (t3764*t3764);
bool t3766 = (t3765<1);
vec3 t3767 = vec3(t3657,t3663,t3669);
float t3768 = length(t3767);
float t3769 = (t3768*t3768);
bool t3770 = (t3769>1);
bool t3771 = (t3766&&t3770);
float t3772;
float t3773;
float t3774;
float t3775;
if(t3771){
t3772 = 0;
t3773 = 0;
t3774 = 0;
t3775 = 1;
} else {
t3772 = 0;
t3773 = 0;
t3774 = 0;
t3775 = 0;
}
float t3776 = (1-t3738);
float t3777 = (t3704*t3776);
float t3778 = (t3738+t3777);
float t3779 = (1-t3778);
float t3780 = (t3775*t3779);
float t3781 = (t3772*t3780);
float t3782 = (t3742+t3781);
bool t3783 = (t3663>0);
bool t3784 = (t3756>0);
bool t3785 = (!t3784);
bool t3786 = (t3783&&t3785);
bool t3787 = (!t3783);
bool t3788 = (t3784&&t3787);
bool t3789 = (t3786||t3788);
bool t3790 = (t3765<196);
bool t3791 = (t3765>float(6.76));
bool t3792 = (t3790&&t3791);
bool t3793 = (t3789&&t3792);
float t3794;
float t3795;
float t3796;
float t3797;
if(t3793){
float t3798 = (t3756/t3754);
float t3799 = (-t3798);
float t3800 = (t3799*t3747);
float t3801 = (t3750+t3800);
float t3802 = atan(t3801,t3762);
float t3803 = (u1.u0/30);
float t3804 = (t3802+t3803);
float t3805 = (2*3.1415927);
float t3806 = (t3804+t3805);
float t3807 = mod(t3806,2);
float t3808 = (t3807*3.1415927);
float t3809 = (t3808/t3805);
float t3810 = (t3799*t3754);
float t3811 = (t3756+t3810);
float t3812 = (t3799*t3760);
float t3813 = (t3762+t3812);
vec3 t3814 = vec3(t3801,t3811,t3813);
float t3815 = length(t3814);
float t3816 = (t3815*t3815);
float t3817 = sqrt(t3816);
float t3818 = (t3817-float(2.6));
float t3819 = (t3818/float(11.4));
vec4 t3820 = texture(s4,vec2(t3809,t3819));
t3794 = t3820.x;
t3795 = t3820.y;
t3796 = t3820.z;
vec3 t3821 = vec3(t3820.x,t3820.y,t3820.z);
float t3822 = length(t3821);
float t3823 = (t3822*t3822);
float t3824 = (t3823/float(3.0));
bool t3825 = (t3824<=1);
float t3826;
if(t3825){
t3826 = t3824;
} else {
t3826 = 1;
}
bool t3827 = (t3826>=0);
float t3828;
if(t3827){
t3828 = t3826;
} else {
t3828 = 0;
}
t3797 = t3828;
} else {
t3794 = 0;
t3795 = 0;
t3796 = 0;
t3797 = 0;
}
float t3829 = (1-t3778);
float t3830 = (t3775*t3829);
float t3831 = (t3778+t3830);
float t3832 = (1-t3831);
float t3833 = (t3797*t3832);
float t3834 = (t3794*t3833);
float t3835 = (t3782+t3834);
float t3836 = (t115*t3750);
float t3837 = pow(t3765,float(2.5));
float t3838 = (t3836/t3837);
float t3839 = (t3838*t3748);
float t3840 = (t3747+t3839);
float t3841 = (t3748*u1.u4);
float t3842 = (t3840*t3841);
float t3843 = (t3750+t3842);
float t3844 = (t115*t3756);
float t3845 = (t3844/t3837);
float t3846 = (t3845*t3748);
float t3847 = (t3754+t3846);
float t3848 = (t3847*t3841);
float t3849 = (t3756+t3848);
float t3850 = (t115*t3762);
float t3851 = (t3850/t3837);
float t3852 = (t3851*t3748);
float t3853 = (t3760+t3852);
float t3854 = (t3853*t3841);
float t3855 = (t3762+t3854);
vec3 t3856 = vec3(t3843,t3849,t3855);
float t3857 = length(t3856);
float t3858 = (t3857*t3857);
bool t3859 = (t3858<1);
vec3 t3860 = vec3(t3750,t3756,t3762);
float t3861 = length(t3860);
float t3862 = (t3861*t3861);
bool t3863 = (t3862>1);
bool t3864 = (t3859&&t3863);
float t3865;
float t3866;
float t3867;
float t3868;
if(t3864){
t3865 = 0;
t3866 = 0;
t3867 = 0;
t3868 = 1;
} else {
t3865 = 0;
t3866 = 0;
t3867 = 0;
t3868 = 0;
}
float t3869 = (1-t3831);
float t3870 = (t3797*t3869);
float t3871 = (t3831+t3870);
float t3872 = (1-t3871);
float t3873 = (t3868*t3872);
float t3874 = (t3865*t3873);
float t3875 = (t3835+t3874);
bool t3876 = (t3756>0);
bool t3877 = (t3849>0);
bool t3878 = (!t3877);
bool t3879 = (t3876&&t3878);
bool t3880 = (!t3876);
bool t3881 = (t3877&&t3880);
bool t3882 = (t3879||t3881);
bool t3883 = (t3858<196);
bool t3884 = (t3858>float(6.76));
bool t3885 = (t3883&&t3884);
bool t3886 = (t3882&&t3885);
float t3887;
float t3888;
float t3889;
float t3890;
if(t3886){
float t3891 = (t3849/t3847);
float t3892 = (-t3891);
float t3893 = (t3892*t3840);
float t3894 = (t3843+t3893);
float t3895 = atan(t3894,t3855);
float t3896 = (u1.u0/30);
float t3897 = (t3895+t3896);
float t3898 = (2*3.1415927);
float t3899 = (t3897+t3898);
float t3900 = mod(t3899,2);
float t3901 = (t3900*3.1415927);
float t3902 = (t3901/t3898);
float t3903 = (t3892*t3847);
float t3904 = (t3849+t3903);
float t3905 = (t3892*t3853);
float t3906 = (t3855+t3905);
vec3 t3907 = vec3(t3894,t3904,t3906);
float t3908 = length(t3907);
float t3909 = (t3908*t3908);
float t3910 = sqrt(t3909);
float t3911 = (t3910-float(2.6));
float t3912 = (t3911/float(11.4));
vec4 t3913 = texture(s4,vec2(t3902,t3912));
t3887 = t3913.x;
t3888 = t3913.y;
t3889 = t3913.z;
vec3 t3914 = vec3(t3913.x,t3913.y,t3913.z);
float t3915 = length(t3914);
float t3916 = (t3915*t3915);
float t3917 = (t3916/float(3.0));
bool t3918 = (t3917<=1);
float t3919;
if(t3918){
t3919 = t3917;
} else {
t3919 = 1;
}
bool t3920 = (t3919>=0);
float t3921;
if(t3920){
t3921 = t3919;
} else {
t3921 = 0;
}
t3890 = t3921;
} else {
t3887 = 0;
t3888 = 0;
t3889 = 0;
t3890 = 0;
}
float t3922 = (1-t3871);
float t3923 = (t3868*t3922);
float t3924 = (t3871+t3923);
float t3925 = (1-t3924);
float t3926 = (t3890*t3925);
float t3927 = (t3887*t3926);
float t3928 = (t3875+t3927);
float t3929 = (t115*t3843);
float t3930 = pow(t3858,float(2.5));
float t3931 = (t3929/t3930);
float t3932 = (t3931*t3841);
float t3933 = (t3840+t3932);
float t3934 = (t3841*u1.u4);
float t3935 = (t3933*t3934);
float t3936 = (t3843+t3935);
float t3937 = (t115*t3849);
float t3938 = (t3937/t3930);
float t3939 = (t3938*t3841);
float t3940 = (t3847+t3939);
float t3941 = (t3940*t3934);
float t3942 = (t3849+t3941);
float t3943 = (t115*t3855);
float t3944 = (t3943/t3930);
float t3945 = (t3944*t3841);
float t3946 = (t3853+t3945);
float t3947 = (t3946*t3934);
float t3948 = (t3855+t3947);
vec3 t3949 = vec3(t3936,t3942,t3948);
float t3950 = length(t3949);
float t3951 = (t3950*t3950);
bool t3952 = (t3951<1);
vec3 t3953 = vec3(t3843,t3849,t3855);
float t3954 = length(t3953);
float t3955 = (t3954*t3954);
bool t3956 = (t3955>1);
bool t3957 = (t3952&&t3956);
float t3958;
float t3959;
float t3960;
float t3961;
if(t3957){
t3958 = 0;
t3959 = 0;
t3960 = 0;
t3961 = 1;
} else {
t3958 = 0;
t3959 = 0;
t3960 = 0;
t3961 = 0;
}
float t3962 = (1-t3924);
float t3963 = (t3890*t3962);
float t3964 = (t3924+t3963);
float t3965 = (1-t3964);
float t3966 = (t3961*t3965);
float t3967 = (t3958*t3966);
float t3968 = (t3928+t3967);
bool t3969 = (t3849>0);
bool t3970 = (t3942>0);
bool t3971 = (!t3970);
bool t3972 = (t3969&&t3971);
bool t3973 = (!t3969);
bool t3974 = (t3970&&t3973);
bool t3975 = (t3972||t3974);
bool t3976 = (t3951<196);
bool t3977 = (t3951>float(6.76));
bool t3978 = (t3976&&t3977);
bool t3979 = (t3975&&t3978);
float t3980;
float t3981;
float t3982;
float t3983;
if(t3979){
float t3984 = (t3942/t3940);
float t3985 = (-t3984);
float t3986 = (t3985*t3933);
float t3987 = (t3936+t3986);
float t3988 = atan(t3987,t3948);
float t3989 = (u1.u0/30);
float t3990 = (t3988+t3989);
float t3991 = (2*3.1415927);
float t3992 = (t3990+t3991);
float t3993 = mod(t3992,2);
float t3994 = (t3993*3.1415927);
float t3995 = (t3994/t3991);
float t3996 = (t3985*t3940);
float t3997 = (t3942+t3996);
float t3998 = (t3985*t3946);
float t3999 = (t3948+t3998);
vec3 t4000 = vec3(t3987,t3997,t3999);
float t4001 = length(t4000);
float t4002 = (t4001*t4001);
float t4003 = sqrt(t4002);
float t4004 = (t4003-float(2.6));
float t4005 = (t4004/float(11.4));
vec4 t4006 = texture(s4,vec2(t3995,t4005));
t3980 = t4006.x;
t3981 = t4006.y;
t3982 = t4006.z;
vec3 t4007 = vec3(t4006.x,t4006.y,t4006.z);
float t4008 = length(t4007);
float t4009 = (t4008*t4008);
float t4010 = (t4009/float(3.0));
bool t4011 = (t4010<=1);
float t4012;
if(t4011){
t4012 = t4010;
} else {
t4012 = 1;
}
bool t4013 = (t4012>=0);
float t4014;
if(t4013){
t4014 = t4012;
} else {
t4014 = 0;
}
t3983 = t4014;
} else {
t3980 = 0;
t3981 = 0;
t3982 = 0;
t3983 = 0;
}
float t4015 = (1-t3964);
float t4016 = (t3961*t4015);
float t4017 = (t3964+t4016);
float t4018 = (1-t4017);
float t4019 = (t3983*t4018);
float t4020 = (t3980*t4019);
float t4021 = (t3968+t4020);
float t4022 = (t115*t3936);
float t4023 = pow(t3951,float(2.5));
float t4024 = (t4022/t4023);
float t4025 = (t4024*t3934);
float t4026 = (t3933+t4025);
float t4027 = (t3934*u1.u4);
float t4028 = (t4026*t4027);
float t4029 = (t3936+t4028);
float t4030 = (t115*t3942);
float t4031 = (t4030/t4023);
float t4032 = (t4031*t3934);
float t4033 = (t3940+t4032);
float t4034 = (t4033*t4027);
float t4035 = (t3942+t4034);
float t4036 = (t115*t3948);
float t4037 = (t4036/t4023);
float t4038 = (t4037*t3934);
float t4039 = (t3946+t4038);
float t4040 = (t4039*t4027);
float t4041 = (t3948+t4040);
vec3 t4042 = vec3(t4029,t4035,t4041);
float t4043 = length(t4042);
float t4044 = (t4043*t4043);
bool t4045 = (t4044<1);
vec3 t4046 = vec3(t3936,t3942,t3948);
float t4047 = length(t4046);
float t4048 = (t4047*t4047);
bool t4049 = (t4048>1);
bool t4050 = (t4045&&t4049);
float t4051;
float t4052;
float t4053;
float t4054;
if(t4050){
t4051 = 0;
t4052 = 0;
t4053 = 0;
t4054 = 1;
} else {
t4051 = 0;
t4052 = 0;
t4053 = 0;
t4054 = 0;
}
float t4055 = (1-t4017);
float t4056 = (t3983*t4055);
float t4057 = (t4017+t4056);
float t4058 = (1-t4057);
float t4059 = (t4054*t4058);
float t4060 = (t4051*t4059);
float t4061 = (t4021+t4060);
bool t4062 = (t3942>0);
bool t4063 = (t4035>0);
bool t4064 = (!t4063);
bool t4065 = (t4062&&t4064);
bool t4066 = (!t4062);
bool t4067 = (t4063&&t4066);
bool t4068 = (t4065||t4067);
bool t4069 = (t4044<196);
bool t4070 = (t4044>float(6.76));
bool t4071 = (t4069&&t4070);
bool t4072 = (t4068&&t4071);
float t4073;
float t4074;
float t4075;
float t4076;
if(t4072){
float t4077 = (t4035/t4033);
float t4078 = (-t4077);
float t4079 = (t4078*t4026);
float t4080 = (t4029+t4079);
float t4081 = atan(t4080,t4041);
float t4082 = (u1.u0/30);
float t4083 = (t4081+t4082);
float t4084 = (2*3.1415927);
float t4085 = (t4083+t4084);
float t4086 = mod(t4085,2);
float t4087 = (t4086*3.1415927);
float t4088 = (t4087/t4084);
float t4089 = (t4078*t4033);
float t4090 = (t4035+t4089);
float t4091 = (t4078*t4039);
float t4092 = (t4041+t4091);
vec3 t4093 = vec3(t4080,t4090,t4092);
float t4094 = length(t4093);
float t4095 = (t4094*t4094);
float t4096 = sqrt(t4095);
float t4097 = (t4096-float(2.6));
float t4098 = (t4097/float(11.4));
vec4 t4099 = texture(s4,vec2(t4088,t4098));
t4073 = t4099.x;
t4074 = t4099.y;
t4075 = t4099.z;
vec3 t4100 = vec3(t4099.x,t4099.y,t4099.z);
float t4101 = length(t4100);
float t4102 = (t4101*t4101);
float t4103 = (t4102/float(3.0));
bool t4104 = (t4103<=1);
float t4105;
if(t4104){
t4105 = t4103;
} else {
t4105 = 1;
}
bool t4106 = (t4105>=0);
float t4107;
if(t4106){
t4107 = t4105;
} else {
t4107 = 0;
}
t4076 = t4107;
} else {
t4073 = 0;
t4074 = 0;
t4075 = 0;
t4076 = 0;
}
float t4108 = (1-t4057);
float t4109 = (t4054*t4108);
float t4110 = (t4057+t4109);
float t4111 = (1-t4110);
float t4112 = (t4076*t4111);
float t4113 = (t4073*t4112);
float t4114 = (t4061+t4113);
float t4115 = (t115*t4029);
float t4116 = pow(t4044,float(2.5));
float t4117 = (t4115/t4116);
float t4118 = (t4117*t4027);
float t4119 = (t4026+t4118);
float t4120 = (t4027*u1.u4);
float t4121 = (t4119*t4120);
float t4122 = (t4029+t4121);
float t4123 = (t115*t4035);
float t4124 = (t4123/t4116);
float t4125 = (t4124*t4027);
float t4126 = (t4033+t4125);
float t4127 = (t4126*t4120);
float t4128 = (t4035+t4127);
float t4129 = (t115*t4041);
float t4130 = (t4129/t4116);
float t4131 = (t4130*t4027);
float t4132 = (t4039+t4131);
float t4133 = (t4132*t4120);
float t4134 = (t4041+t4133);
vec3 t4135 = vec3(t4122,t4128,t4134);
float t4136 = length(t4135);
float t4137 = (t4136*t4136);
bool t4138 = (t4137<1);
vec3 t4139 = vec3(t4029,t4035,t4041);
float t4140 = length(t4139);
float t4141 = (t4140*t4140);
bool t4142 = (t4141>1);
bool t4143 = (t4138&&t4142);
float t4144;
float t4145;
float t4146;
float t4147;
if(t4143){
t4144 = 0;
t4145 = 0;
t4146 = 0;
t4147 = 1;
} else {
t4144 = 0;
t4145 = 0;
t4146 = 0;
t4147 = 0;
}
float t4148 = (1-t4110);
float t4149 = (t4076*t4148);
float t4150 = (t4110+t4149);
float t4151 = (1-t4150);
float t4152 = (t4147*t4151);
float t4153 = (t4144*t4152);
float t4154 = (t4114+t4153);
bool t4155 = (t4035>0);
bool t4156 = (t4128>0);
bool t4157 = (!t4156);
bool t4158 = (t4155&&t4157);
bool t4159 = (!t4155);
bool t4160 = (t4156&&t4159);
bool t4161 = (t4158||t4160);
bool t4162 = (t4137<196);
bool t4163 = (t4137>float(6.76));
bool t4164 = (t4162&&t4163);
bool t4165 = (t4161&&t4164);
float t4166;
float t4167;
float t4168;
float t4169;
if(t4165){
float t4170 = (t4128/t4126);
float t4171 = (-t4170);
float t4172 = (t4171*t4119);
float t4173 = (t4122+t4172);
float t4174 = atan(t4173,t4134);
float t4175 = (u1.u0/30);
float t4176 = (t4174+t4175);
float t4177 = (2*3.1415927);
float t4178 = (t4176+t4177);
float t4179 = mod(t4178,2);
float t4180 = (t4179*3.1415927);
float t4181 = (t4180/t4177);
float t4182 = (t4171*t4126);
float t4183 = (t4128+t4182);
float t4184 = (t4171*t4132);
float t4185 = (t4134+t4184);
vec3 t4186 = vec3(t4173,t4183,t4185);
float t4187 = length(t4186);
float t4188 = (t4187*t4187);
float t4189 = sqrt(t4188);
float t4190 = (t4189-float(2.6));
float t4191 = (t4190/float(11.4));
vec4 t4192 = texture(s4,vec2(t4181,t4191));
t4166 = t4192.x;
t4167 = t4192.y;
t4168 = t4192.z;
vec3 t4193 = vec3(t4192.x,t4192.y,t4192.z);
float t4194 = length(t4193);
float t4195 = (t4194*t4194);
float t4196 = (t4195/float(3.0));
bool t4197 = (t4196<=1);
float t4198;
if(t4197){
t4198 = t4196;
} else {
t4198 = 1;
}
bool t4199 = (t4198>=0);
float t4200;
if(t4199){
t4200 = t4198;
} else {
t4200 = 0;
}
t4169 = t4200;
} else {
t4166 = 0;
t4167 = 0;
t4168 = 0;
t4169 = 0;
}
float t4201 = (1-t4150);
float t4202 = (t4147*t4201);
float t4203 = (t4150+t4202);
float t4204 = (1-t4203);
float t4205 = (t4169*t4204);
float t4206 = (t4166*t4205);
float t4207 = (t4154+t4206);
float t4208 = (t115*t4122);
float t4209 = pow(t4137,float(2.5));
float t4210 = (t4208/t4209);
float t4211 = (t4210*t4120);
float t4212 = (t4119+t4211);
float t4213 = (t4120*u1.u4);
float t4214 = (t4212*t4213);
float t4215 = (t4122+t4214);
float t4216 = (t115*t4128);
float t4217 = (t4216/t4209);
float t4218 = (t4217*t4120);
float t4219 = (t4126+t4218);
float t4220 = (t4219*t4213);
float t4221 = (t4128+t4220);
float t4222 = (t115*t4134);
float t4223 = (t4222/t4209);
float t4224 = (t4223*t4120);
float t4225 = (t4132+t4224);
float t4226 = (t4225*t4213);
float t4227 = (t4134+t4226);
vec3 t4228 = vec3(t4215,t4221,t4227);
float t4229 = length(t4228);
float t4230 = (t4229*t4229);
bool t4231 = (t4230<1);
vec3 t4232 = vec3(t4122,t4128,t4134);
float t4233 = length(t4232);
float t4234 = (t4233*t4233);
bool t4235 = (t4234>1);
bool t4236 = (t4231&&t4235);
float t4237;
float t4238;
float t4239;
float t4240;
if(t4236){
t4237 = 0;
t4238 = 0;
t4239 = 0;
t4240 = 1;
} else {
t4237 = 0;
t4238 = 0;
t4239 = 0;
t4240 = 0;
}
float t4241 = (1-t4203);
float t4242 = (t4169*t4241);
float t4243 = (t4203+t4242);
float t4244 = (1-t4243);
float t4245 = (t4240*t4244);
float t4246 = (t4237*t4245);
float t4247 = (t4207+t4246);
bool t4248 = (t4128>0);
bool t4249 = (t4221>0);
bool t4250 = (!t4249);
bool t4251 = (t4248&&t4250);
bool t4252 = (!t4248);
bool t4253 = (t4249&&t4252);
bool t4254 = (t4251||t4253);
bool t4255 = (t4230<196);
bool t4256 = (t4230>float(6.76));
bool t4257 = (t4255&&t4256);
bool t4258 = (t4254&&t4257);
float t4259;
float t4260;
float t4261;
float t4262;
if(t4258){
float t4263 = (t4221/t4219);
float t4264 = (-t4263);
float t4265 = (t4264*t4212);
float t4266 = (t4215+t4265);
float t4267 = atan(t4266,t4227);
float t4268 = (u1.u0/30);
float t4269 = (t4267+t4268);
float t4270 = (2*3.1415927);
float t4271 = (t4269+t4270);
float t4272 = mod(t4271,2);
float t4273 = (t4272*3.1415927);
float t4274 = (t4273/t4270);
float t4275 = (t4264*t4219);
float t4276 = (t4221+t4275);
float t4277 = (t4264*t4225);
float t4278 = (t4227+t4277);
vec3 t4279 = vec3(t4266,t4276,t4278);
float t4280 = length(t4279);
float t4281 = (t4280*t4280);
float t4282 = sqrt(t4281);
float t4283 = (t4282-float(2.6));
float t4284 = (t4283/float(11.4));
vec4 t4285 = texture(s4,vec2(t4274,t4284));
t4259 = t4285.x;
t4260 = t4285.y;
t4261 = t4285.z;
vec3 t4286 = vec3(t4285.x,t4285.y,t4285.z);
float t4287 = length(t4286);
float t4288 = (t4287*t4287);
float t4289 = (t4288/float(3.0));
bool t4290 = (t4289<=1);
float t4291;
if(t4290){
t4291 = t4289;
} else {
t4291 = 1;
}
bool t4292 = (t4291>=0);
float t4293;
if(t4292){
t4293 = t4291;
} else {
t4293 = 0;
}
t4262 = t4293;
} else {
t4259 = 0;
t4260 = 0;
t4261 = 0;
t4262 = 0;
}
float t4294 = (1-t4243);
float t4295 = (t4240*t4294);
float t4296 = (t4243+t4295);
float t4297 = (1-t4296);
float t4298 = (t4262*t4297);
float t4299 = (t4259*t4298);
float t4300 = (t4247+t4299);
float t4301 = (t115*t4215);
float t4302 = pow(t4230,float(2.5));
float t4303 = (t4301/t4302);
float t4304 = (t4303*t4213);
float t4305 = (t4212+t4304);
float t4306 = (t4213*u1.u4);
float t4307 = (t4305*t4306);
float t4308 = (t4215+t4307);
float t4309 = (t115*t4221);
float t4310 = (t4309/t4302);
float t4311 = (t4310*t4213);
float t4312 = (t4219+t4311);
float t4313 = (t4312*t4306);
float t4314 = (t4221+t4313);
float t4315 = (t115*t4227);
float t4316 = (t4315/t4302);
float t4317 = (t4316*t4213);
float t4318 = (t4225+t4317);
float t4319 = (t4318*t4306);
float t4320 = (t4227+t4319);
vec3 t4321 = vec3(t4308,t4314,t4320);
float t4322 = length(t4321);
float t4323 = (t4322*t4322);
bool t4324 = (t4323<1);
vec3 t4325 = vec3(t4215,t4221,t4227);
float t4326 = length(t4325);
float t4327 = (t4326*t4326);
bool t4328 = (t4327>1);
bool t4329 = (t4324&&t4328);
float t4330;
float t4331;
float t4332;
float t4333;
if(t4329){
t4330 = 0;
t4331 = 0;
t4332 = 0;
t4333 = 1;
} else {
t4330 = 0;
t4331 = 0;
t4332 = 0;
t4333 = 0;
}
float t4334 = (1-t4296);
float t4335 = (t4262*t4334);
float t4336 = (t4296+t4335);
float t4337 = (1-t4336);
float t4338 = (t4333*t4337);
float t4339 = (t4330*t4338);
float t4340 = (t4300+t4339);
bool t4341 = (t4221>0);
bool t4342 = (t4314>0);
bool t4343 = (!t4342);
bool t4344 = (t4341&&t4343);
bool t4345 = (!t4341);
bool t4346 = (t4342&&t4345);
bool t4347 = (t4344||t4346);
bool t4348 = (t4323<196);
bool t4349 = (t4323>float(6.76));
bool t4350 = (t4348&&t4349);
bool t4351 = (t4347&&t4350);
float t4352;
float t4353;
float t4354;
float t4355;
if(t4351){
float t4356 = (t4314/t4312);
float t4357 = (-t4356);
float t4358 = (t4357*t4305);
float t4359 = (t4308+t4358);
float t4360 = atan(t4359,t4320);
float t4361 = (u1.u0/30);
float t4362 = (t4360+t4361);
float t4363 = (2*3.1415927);
float t4364 = (t4362+t4363);
float t4365 = mod(t4364,2);
float t4366 = (t4365*3.1415927);
float t4367 = (t4366/t4363);
float t4368 = (t4357*t4312);
float t4369 = (t4314+t4368);
float t4370 = (t4357*t4318);
float t4371 = (t4320+t4370);
vec3 t4372 = vec3(t4359,t4369,t4371);
float t4373 = length(t4372);
float t4374 = (t4373*t4373);
float t4375 = sqrt(t4374);
float t4376 = (t4375-float(2.6));
float t4377 = (t4376/float(11.4));
vec4 t4378 = texture(s4,vec2(t4367,t4377));
t4352 = t4378.x;
t4353 = t4378.y;
t4354 = t4378.z;
vec3 t4379 = vec3(t4378.x,t4378.y,t4378.z);
float t4380 = length(t4379);
float t4381 = (t4380*t4380);
float t4382 = (t4381/float(3.0));
bool t4383 = (t4382<=1);
float t4384;
if(t4383){
t4384 = t4382;
} else {
t4384 = 1;
}
bool t4385 = (t4384>=0);
float t4386;
if(t4385){
t4386 = t4384;
} else {
t4386 = 0;
}
t4355 = t4386;
} else {
t4352 = 0;
t4353 = 0;
t4354 = 0;
t4355 = 0;
}
float t4387 = (1-t4336);
float t4388 = (t4333*t4387);
float t4389 = (t4336+t4388);
float t4390 = (1-t4389);
float t4391 = (t4355*t4390);
float t4392 = (t4352*t4391);
float t4393 = (t4340+t4392);
float t4394 = (t115*t4308);
float t4395 = pow(t4323,float(2.5));
float t4396 = (t4394/t4395);
float t4397 = (t4396*t4306);
float t4398 = (t4305+t4397);
float t4399 = (t4306*u1.u4);
float t4400 = (t4398*t4399);
float t4401 = (t4308+t4400);
float t4402 = (t115*t4314);
float t4403 = (t4402/t4395);
float t4404 = (t4403*t4306);
float t4405 = (t4312+t4404);
float t4406 = (t4405*t4399);
float t4407 = (t4314+t4406);
float t4408 = (t115*t4320);
float t4409 = (t4408/t4395);
float t4410 = (t4409*t4306);
float t4411 = (t4318+t4410);
float t4412 = (t4411*t4399);
float t4413 = (t4320+t4412);
vec3 t4414 = vec3(t4401,t4407,t4413);
float t4415 = length(t4414);
float t4416 = (t4415*t4415);
bool t4417 = (t4416<1);
vec3 t4418 = vec3(t4308,t4314,t4320);
float t4419 = length(t4418);
float t4420 = (t4419*t4419);
bool t4421 = (t4420>1);
bool t4422 = (t4417&&t4421);
float t4423;
float t4424;
float t4425;
float t4426;
if(t4422){
t4423 = 0;
t4424 = 0;
t4425 = 0;
t4426 = 1;
} else {
t4423 = 0;
t4424 = 0;
t4425 = 0;
t4426 = 0;
}
float t4427 = (1-t4389);
float t4428 = (t4355*t4427);
float t4429 = (t4389+t4428);
float t4430 = (1-t4429);
float t4431 = (t4426*t4430);
float t4432 = (t4423*t4431);
float t4433 = (t4393+t4432);
bool t4434 = (t4314>0);
bool t4435 = (t4407>0);
bool t4436 = (!t4435);
bool t4437 = (t4434&&t4436);
bool t4438 = (!t4434);
bool t4439 = (t4435&&t4438);
bool t4440 = (t4437||t4439);
bool t4441 = (t4416<196);
bool t4442 = (t4416>float(6.76));
bool t4443 = (t4441&&t4442);
bool t4444 = (t4440&&t4443);
float t4445;
float t4446;
float t4447;
float t4448;
if(t4444){
float t4449 = (t4407/t4405);
float t4450 = (-t4449);
float t4451 = (t4450*t4398);
float t4452 = (t4401+t4451);
float t4453 = atan(t4452,t4413);
float t4454 = (u1.u0/30);
float t4455 = (t4453+t4454);
float t4456 = (2*3.1415927);
float t4457 = (t4455+t4456);
float t4458 = mod(t4457,2);
float t4459 = (t4458*3.1415927);
float t4460 = (t4459/t4456);
float t4461 = (t4450*t4405);
float t4462 = (t4407+t4461);
float t4463 = (t4450*t4411);
float t4464 = (t4413+t4463);
vec3 t4465 = vec3(t4452,t4462,t4464);
float t4466 = length(t4465);
float t4467 = (t4466*t4466);
float t4468 = sqrt(t4467);
float t4469 = (t4468-float(2.6));
float t4470 = (t4469/float(11.4));
vec4 t4471 = texture(s4,vec2(t4460,t4470));
t4445 = t4471.x;
t4446 = t4471.y;
t4447 = t4471.z;
vec3 t4472 = vec3(t4471.x,t4471.y,t4471.z);
float t4473 = length(t4472);
float t4474 = (t4473*t4473);
float t4475 = (t4474/float(3.0));
bool t4476 = (t4475<=1);
float t4477;
if(t4476){
t4477 = t4475;
} else {
t4477 = 1;
}
bool t4478 = (t4477>=0);
float t4479;
if(t4478){
t4479 = t4477;
} else {
t4479 = 0;
}
t4448 = t4479;
} else {
t4445 = 0;
t4446 = 0;
t4447 = 0;
t4448 = 0;
}
float t4480 = (1-t4429);
float t4481 = (t4426*t4480);
float t4482 = (t4429+t4481);
float t4483 = (1-t4482);
float t4484 = (t4448*t4483);
float t4485 = (t4445*t4484);
float t4486 = (t4433+t4485);
float t4487 = (t115*t4401);
float t4488 = pow(t4416,float(2.5));
float t4489 = (t4487/t4488);
float t4490 = (t4489*t4399);
float t4491 = (t4398+t4490);
float t4492 = (t4399*u1.u4);
float t4493 = (t4491*t4492);
float t4494 = (t4401+t4493);
float t4495 = (t115*t4407);
float t4496 = (t4495/t4488);
float t4497 = (t4496*t4399);
float t4498 = (t4405+t4497);
float t4499 = (t4498*t4492);
float t4500 = (t4407+t4499);
float t4501 = (t115*t4413);
float t4502 = (t4501/t4488);
float t4503 = (t4502*t4399);
float t4504 = (t4411+t4503);
float t4505 = (t4504*t4492);
float t4506 = (t4413+t4505);
vec3 t4507 = vec3(t4494,t4500,t4506);
float t4508 = length(t4507);
float t4509 = (t4508*t4508);
bool t4510 = (t4509<1);
vec3 t4511 = vec3(t4401,t4407,t4413);
float t4512 = length(t4511);
float t4513 = (t4512*t4512);
bool t4514 = (t4513>1);
bool t4515 = (t4510&&t4514);
float t4516;
float t4517;
float t4518;
float t4519;
if(t4515){
t4516 = 0;
t4517 = 0;
t4518 = 0;
t4519 = 1;
} else {
t4516 = 0;
t4517 = 0;
t4518 = 0;
t4519 = 0;
}
float t4520 = (1-t4482);
float t4521 = (t4448*t4520);
float t4522 = (t4482+t4521);
float t4523 = (1-t4522);
float t4524 = (t4519*t4523);
float t4525 = (t4516*t4524);
float t4526 = (t4486+t4525);
bool t4527 = (t4407>0);
bool t4528 = (t4500>0);
bool t4529 = (!t4528);
bool t4530 = (t4527&&t4529);
bool t4531 = (!t4527);
bool t4532 = (t4528&&t4531);
bool t4533 = (t4530||t4532);
bool t4534 = (t4509<196);
bool t4535 = (t4509>float(6.76));
bool t4536 = (t4534&&t4535);
bool t4537 = (t4533&&t4536);
float t4538;
float t4539;
float t4540;
float t4541;
if(t4537){
float t4542 = (t4500/t4498);
float t4543 = (-t4542);
float t4544 = (t4543*t4491);
float t4545 = (t4494+t4544);
float t4546 = atan(t4545,t4506);
float t4547 = (u1.u0/30);
float t4548 = (t4546+t4547);
float t4549 = (2*3.1415927);
float t4550 = (t4548+t4549);
float t4551 = mod(t4550,2);
float t4552 = (t4551*3.1415927);
float t4553 = (t4552/t4549);
float t4554 = (t4543*t4498);
float t4555 = (t4500+t4554);
float t4556 = (t4543*t4504);
float t4557 = (t4506+t4556);
vec3 t4558 = vec3(t4545,t4555,t4557);
float t4559 = length(t4558);
float t4560 = (t4559*t4559);
float t4561 = sqrt(t4560);
float t4562 = (t4561-float(2.6));
float t4563 = (t4562/float(11.4));
vec4 t4564 = texture(s4,vec2(t4553,t4563));
t4538 = t4564.x;
t4539 = t4564.y;
t4540 = t4564.z;
vec3 t4565 = vec3(t4564.x,t4564.y,t4564.z);
float t4566 = length(t4565);
float t4567 = (t4566*t4566);
float t4568 = (t4567/float(3.0));
bool t4569 = (t4568<=1);
float t4570;
if(t4569){
t4570 = t4568;
} else {
t4570 = 1;
}
bool t4571 = (t4570>=0);
float t4572;
if(t4571){
t4572 = t4570;
} else {
t4572 = 0;
}
t4541 = t4572;
} else {
t4538 = 0;
t4539 = 0;
t4540 = 0;
t4541 = 0;
}
float t4573 = (1-t4522);
float t4574 = (t4519*t4573);
float t4575 = (t4522+t4574);
float t4576 = (1-t4575);
float t4577 = (t4541*t4576);
float t4578 = (t4538*t4577);
float t4579 = (t4526+t4578);
float t4580 = (t115*t4494);
float t4581 = pow(t4509,float(2.5));
float t4582 = (t4580/t4581);
float t4583 = (t4582*t4492);
float t4584 = (t4491+t4583);
float t4585 = (t4492*u1.u4);
float t4586 = (t4584*t4585);
float t4587 = (t4494+t4586);
float t4588 = (t115*t4500);
float t4589 = (t4588/t4581);
float t4590 = (t4589*t4492);
float t4591 = (t4498+t4590);
float t4592 = (t4591*t4585);
float t4593 = (t4500+t4592);
float t4594 = (t115*t4506);
float t4595 = (t4594/t4581);
float t4596 = (t4595*t4492);
float t4597 = (t4504+t4596);
float t4598 = (t4597*t4585);
float t4599 = (t4506+t4598);
vec3 t4600 = vec3(t4587,t4593,t4599);
float t4601 = length(t4600);
float t4602 = (t4601*t4601);
bool t4603 = (t4602<1);
vec3 t4604 = vec3(t4494,t4500,t4506);
float t4605 = length(t4604);
float t4606 = (t4605*t4605);
bool t4607 = (t4606>1);
bool t4608 = (t4603&&t4607);
float t4609;
float t4610;
float t4611;
float t4612;
if(t4608){
t4609 = 0;
t4610 = 0;
t4611 = 0;
t4612 = 1;
} else {
t4609 = 0;
t4610 = 0;
t4611 = 0;
t4612 = 0;
}
float t4613 = (1-t4575);
float t4614 = (t4541*t4613);
float t4615 = (t4575+t4614);
float t4616 = (1-t4615);
float t4617 = (t4612*t4616);
float t4618 = (t4609*t4617);
float t4619 = (t4579+t4618);
bool t4620 = (t4500>0);
bool t4621 = (t4593>0);
bool t4622 = (!t4621);
bool t4623 = (t4620&&t4622);
bool t4624 = (!t4620);
bool t4625 = (t4621&&t4624);
bool t4626 = (t4623||t4625);
bool t4627 = (t4602<196);
bool t4628 = (t4602>float(6.76));
bool t4629 = (t4627&&t4628);
bool t4630 = (t4626&&t4629);
float t4631;
float t4632;
float t4633;
float t4634;
if(t4630){
float t4635 = (t4593/t4591);
float t4636 = (-t4635);
float t4637 = (t4636*t4584);
float t4638 = (t4587+t4637);
float t4639 = atan(t4638,t4599);
float t4640 = (u1.u0/30);
float t4641 = (t4639+t4640);
float t4642 = (2*3.1415927);
float t4643 = (t4641+t4642);
float t4644 = mod(t4643,2);
float t4645 = (t4644*3.1415927);
float t4646 = (t4645/t4642);
float t4647 = (t4636*t4591);
float t4648 = (t4593+t4647);
float t4649 = (t4636*t4597);
float t4650 = (t4599+t4649);
vec3 t4651 = vec3(t4638,t4648,t4650);
float t4652 = length(t4651);
float t4653 = (t4652*t4652);
float t4654 = sqrt(t4653);
float t4655 = (t4654-float(2.6));
float t4656 = (t4655/float(11.4));
vec4 t4657 = texture(s4,vec2(t4646,t4656));
t4631 = t4657.x;
t4632 = t4657.y;
t4633 = t4657.z;
vec3 t4658 = vec3(t4657.x,t4657.y,t4657.z);
float t4659 = length(t4658);
float t4660 = (t4659*t4659);
float t4661 = (t4660/float(3.0));
bool t4662 = (t4661<=1);
float t4663;
if(t4662){
t4663 = t4661;
} else {
t4663 = 1;
}
bool t4664 = (t4663>=0);
float t4665;
if(t4664){
t4665 = t4663;
} else {
t4665 = 0;
}
t4634 = t4665;
} else {
t4631 = 0;
t4632 = 0;
t4633 = 0;
t4634 = 0;
}
float t4666 = (1-t4615);
float t4667 = (t4612*t4666);
float t4668 = (t4615+t4667);
float t4669 = (1-t4668);
float t4670 = (t4634*t4669);
float t4671 = (t4631*t4670);
float t4672 = (t4619+t4671);
float t4673 = (t115*t4587);
float t4674 = pow(t4602,float(2.5));
float t4675 = (t4673/t4674);
float t4676 = (t4675*t4585);
float t4677 = (t4584+t4676);
float t4678 = (t4585*u1.u4);
float t4679 = (t4677*t4678);
float t4680 = (t4587+t4679);
float t4681 = (t115*t4593);
float t4682 = (t4681/t4674);
float t4683 = (t4682*t4585);
float t4684 = (t4591+t4683);
float t4685 = (t4684*t4678);
float t4686 = (t4593+t4685);
float t4687 = (t115*t4599);
float t4688 = (t4687/t4674);
float t4689 = (t4688*t4585);
float t4690 = (t4597+t4689);
float t4691 = (t4690*t4678);
float t4692 = (t4599+t4691);
vec3 t4693 = vec3(t4680,t4686,t4692);
float t4694 = length(t4693);
float t4695 = (t4694*t4694);
bool t4696 = (t4695<1);
vec3 t4697 = vec3(t4587,t4593,t4599);
float t4698 = length(t4697);
float t4699 = (t4698*t4698);
bool t4700 = (t4699>1);
bool t4701 = (t4696&&t4700);
float t4702;
float t4703;
float t4704;
float t4705;
if(t4701){
t4702 = 0;
t4703 = 0;
t4704 = 0;
t4705 = 1;
} else {
t4702 = 0;
t4703 = 0;
t4704 = 0;
t4705 = 0;
}
float t4706 = (1-t4668);
float t4707 = (t4634*t4706);
float t4708 = (t4668+t4707);
float t4709 = (1-t4708);
float t4710 = (t4705*t4709);
float t4711 = (t4702*t4710);
float t4712 = (t4672+t4711);
bool t4713 = (t4593>0);
bool t4714 = (t4686>0);
bool t4715 = (!t4714);
bool t4716 = (t4713&&t4715);
bool t4717 = (!t4713);
bool t4718 = (t4714&&t4717);
bool t4719 = (t4716||t4718);
bool t4720 = (t4695<196);
bool t4721 = (t4695>float(6.76));
bool t4722 = (t4720&&t4721);
bool t4723 = (t4719&&t4722);
float t4724;
float t4725;
float t4726;
float t4727;
if(t4723){
float t4728 = (t4686/t4684);
float t4729 = (-t4728);
float t4730 = (t4729*t4677);
float t4731 = (t4680+t4730);
float t4732 = atan(t4731,t4692);
float t4733 = (u1.u0/30);
float t4734 = (t4732+t4733);
float t4735 = (2*3.1415927);
float t4736 = (t4734+t4735);
float t4737 = mod(t4736,2);
float t4738 = (t4737*3.1415927);
float t4739 = (t4738/t4735);
float t4740 = (t4729*t4684);
float t4741 = (t4686+t4740);
float t4742 = (t4729*t4690);
float t4743 = (t4692+t4742);
vec3 t4744 = vec3(t4731,t4741,t4743);
float t4745 = length(t4744);
float t4746 = (t4745*t4745);
float t4747 = sqrt(t4746);
float t4748 = (t4747-float(2.6));
float t4749 = (t4748/float(11.4));
vec4 t4750 = texture(s4,vec2(t4739,t4749));
t4724 = t4750.x;
t4725 = t4750.y;
t4726 = t4750.z;
vec3 t4751 = vec3(t4750.x,t4750.y,t4750.z);
float t4752 = length(t4751);
float t4753 = (t4752*t4752);
float t4754 = (t4753/float(3.0));
bool t4755 = (t4754<=1);
float t4756;
if(t4755){
t4756 = t4754;
} else {
t4756 = 1;
}
bool t4757 = (t4756>=0);
float t4758;
if(t4757){
t4758 = t4756;
} else {
t4758 = 0;
}
t4727 = t4758;
} else {
t4724 = 0;
t4725 = 0;
t4726 = 0;
t4727 = 0;
}
float t4759 = (1-t4708);
float t4760 = (t4705*t4759);
float t4761 = (t4708+t4760);
float t4762 = (1-t4761);
float t4763 = (t4727*t4762);
float t4764 = (t4724*t4763);
float t4765 = (t4712+t4764);
float t4766 = (t115*t4680);
float t4767 = pow(t4695,float(2.5));
float t4768 = (t4766/t4767);
float t4769 = (t4768*t4678);
float t4770 = (t4677+t4769);
float t4771 = (t4678*u1.u4);
float t4772 = (t4770*t4771);
float t4773 = (t4680+t4772);
float t4774 = (t115*t4686);
float t4775 = (t4774/t4767);
float t4776 = (t4775*t4678);
float t4777 = (t4684+t4776);
float t4778 = (t4777*t4771);
float t4779 = (t4686+t4778);
float t4780 = (t115*t4692);
float t4781 = (t4780/t4767);
float t4782 = (t4781*t4678);
float t4783 = (t4690+t4782);
float t4784 = (t4783*t4771);
float t4785 = (t4692+t4784);
vec3 t4786 = vec3(t4773,t4779,t4785);
float t4787 = length(t4786);
float t4788 = (t4787*t4787);
bool t4789 = (t4788<1);
vec3 t4790 = vec3(t4680,t4686,t4692);
float t4791 = length(t4790);
float t4792 = (t4791*t4791);
bool t4793 = (t4792>1);
bool t4794 = (t4789&&t4793);
float t4795;
float t4796;
float t4797;
float t4798;
if(t4794){
t4795 = 0;
t4796 = 0;
t4797 = 0;
t4798 = 1;
} else {
t4795 = 0;
t4796 = 0;
t4797 = 0;
t4798 = 0;
}
float t4799 = (1-t4761);
float t4800 = (t4727*t4799);
float t4801 = (t4761+t4800);
float t4802 = (1-t4801);
float t4803 = (t4798*t4802);
float t4804 = (t4795*t4803);
float t4805 = (t4765+t4804);
bool t4806 = (t4686>0);
bool t4807 = (t4779>0);
bool t4808 = (!t4807);
bool t4809 = (t4806&&t4808);
bool t4810 = (!t4806);
bool t4811 = (t4807&&t4810);
bool t4812 = (t4809||t4811);
bool t4813 = (t4788<196);
bool t4814 = (t4788>float(6.76));
bool t4815 = (t4813&&t4814);
bool t4816 = (t4812&&t4815);
float t4817;
float t4818;
float t4819;
float t4820;
if(t4816){
float t4821 = (t4779/t4777);
float t4822 = (-t4821);
float t4823 = (t4822*t4770);
float t4824 = (t4773+t4823);
float t4825 = atan(t4824,t4785);
float t4826 = (u1.u0/30);
float t4827 = (t4825+t4826);
float t4828 = (2*3.1415927);
float t4829 = (t4827+t4828);
float t4830 = mod(t4829,2);
float t4831 = (t4830*3.1415927);
float t4832 = (t4831/t4828);
float t4833 = (t4822*t4777);
float t4834 = (t4779+t4833);
float t4835 = (t4822*t4783);
float t4836 = (t4785+t4835);
vec3 t4837 = vec3(t4824,t4834,t4836);
float t4838 = length(t4837);
float t4839 = (t4838*t4838);
float t4840 = sqrt(t4839);
float t4841 = (t4840-float(2.6));
float t4842 = (t4841/float(11.4));
vec4 t4843 = texture(s4,vec2(t4832,t4842));
t4817 = t4843.x;
t4818 = t4843.y;
t4819 = t4843.z;
vec3 t4844 = vec3(t4843.x,t4843.y,t4843.z);
float t4845 = length(t4844);
float t4846 = (t4845*t4845);
float t4847 = (t4846/float(3.0));
bool t4848 = (t4847<=1);
float t4849;
if(t4848){
t4849 = t4847;
} else {
t4849 = 1;
}
bool t4850 = (t4849>=0);
float t4851;
if(t4850){
t4851 = t4849;
} else {
t4851 = 0;
}
t4820 = t4851;
} else {
t4817 = 0;
t4818 = 0;
t4819 = 0;
t4820 = 0;
}
float t4852 = (1-t4801);
float t4853 = (t4798*t4852);
float t4854 = (t4801+t4853);
float t4855 = (1-t4854);
float t4856 = (t4820*t4855);
float t4857 = (t4817*t4856);
float t4858 = (t4805+t4857);
float t4859 = (t115*t4773);
float t4860 = pow(t4788,float(2.5));
float t4861 = (t4859/t4860);
float t4862 = (t4861*t4771);
float t4863 = (t4770+t4862);
float t4864 = (t4771*u1.u4);
float t4865 = (t4863*t4864);
float t4866 = (t4773+t4865);
float t4867 = (t115*t4779);
float t4868 = (t4867/t4860);
float t4869 = (t4868*t4771);
float t4870 = (t4777+t4869);
float t4871 = (t4870*t4864);
float t4872 = (t4779+t4871);
float t4873 = (t115*t4785);
float t4874 = (t4873/t4860);
float t4875 = (t4874*t4771);
float t4876 = (t4783+t4875);
float t4877 = (t4876*t4864);
float t4878 = (t4785+t4877);
vec3 t4879 = vec3(t4866,t4872,t4878);
float t4880 = length(t4879);
float t4881 = (t4880*t4880);
bool t4882 = (t4881<1);
vec3 t4883 = vec3(t4773,t4779,t4785);
float t4884 = length(t4883);
float t4885 = (t4884*t4884);
bool t4886 = (t4885>1);
bool t4887 = (t4882&&t4886);
float t4888;
float t4889;
float t4890;
float t4891;
if(t4887){
t4888 = 0;
t4889 = 0;
t4890 = 0;
t4891 = 1;
} else {
t4888 = 0;
t4889 = 0;
t4890 = 0;
t4891 = 0;
}
float t4892 = (1-t4854);
float t4893 = (t4820*t4892);
float t4894 = (t4854+t4893);
float t4895 = (1-t4894);
float t4896 = (t4891*t4895);
float t4897 = (t4888*t4896);
float t4898 = (t4858+t4897);
bool t4899 = (t4779>0);
bool t4900 = (t4872>0);
bool t4901 = (!t4900);
bool t4902 = (t4899&&t4901);
bool t4903 = (!t4899);
bool t4904 = (t4900&&t4903);
bool t4905 = (t4902||t4904);
bool t4906 = (t4881<196);
bool t4907 = (t4881>float(6.76));
bool t4908 = (t4906&&t4907);
bool t4909 = (t4905&&t4908);
float t4910;
float t4911;
float t4912;
float t4913;
if(t4909){
float t4914 = (t4872/t4870);
float t4915 = (-t4914);
float t4916 = (t4915*t4863);
float t4917 = (t4866+t4916);
float t4918 = atan(t4917,t4878);
float t4919 = (u1.u0/30);
float t4920 = (t4918+t4919);
float t4921 = (2*3.1415927);
float t4922 = (t4920+t4921);
float t4923 = mod(t4922,2);
float t4924 = (t4923*3.1415927);
float t4925 = (t4924/t4921);
float t4926 = (t4915*t4870);
float t4927 = (t4872+t4926);
float t4928 = (t4915*t4876);
float t4929 = (t4878+t4928);
vec3 t4930 = vec3(t4917,t4927,t4929);
float t4931 = length(t4930);
float t4932 = (t4931*t4931);
float t4933 = sqrt(t4932);
float t4934 = (t4933-float(2.6));
float t4935 = (t4934/float(11.4));
vec4 t4936 = texture(s4,vec2(t4925,t4935));
t4910 = t4936.x;
t4911 = t4936.y;
t4912 = t4936.z;
vec3 t4937 = vec3(t4936.x,t4936.y,t4936.z);
float t4938 = length(t4937);
float t4939 = (t4938*t4938);
float t4940 = (t4939/float(3.0));
bool t4941 = (t4940<=1);
float t4942;
if(t4941){
t4942 = t4940;
} else {
t4942 = 1;
}
bool t4943 = (t4942>=0);
float t4944;
if(t4943){
t4944 = t4942;
} else {
t4944 = 0;
}
t4913 = t4944;
} else {
t4910 = 0;
t4911 = 0;
t4912 = 0;
t4913 = 0;
}
float t4945 = (1-t4894);
float t4946 = (t4891*t4945);
float t4947 = (t4894+t4946);
float t4948 = (1-t4947);
float t4949 = (t4913*t4948);
float t4950 = (t4910*t4949);
float t4951 = (t4898+t4950);
float t4952 = (t115*t4866);
float t4953 = pow(t4881,float(2.5));
float t4954 = (t4952/t4953);
float t4955 = (t4954*t4864);
float t4956 = (t4863+t4955);
float t4957 = (t4864*u1.u4);
float t4958 = (t4956*t4957);
float t4959 = (t4866+t4958);
float t4960 = (t115*t4872);
float t4961 = (t4960/t4953);
float t4962 = (t4961*t4864);
float t4963 = (t4870+t4962);
float t4964 = (t4963*t4957);
float t4965 = (t4872+t4964);
float t4966 = (t115*t4878);
float t4967 = (t4966/t4953);
float t4968 = (t4967*t4864);
float t4969 = (t4876+t4968);
float t4970 = (t4969*t4957);
float t4971 = (t4878+t4970);
vec3 t4972 = vec3(t4959,t4965,t4971);
float t4973 = length(t4972);
float t4974 = (t4973*t4973);
bool t4975 = (t4974<1);
vec3 t4976 = vec3(t4866,t4872,t4878);
float t4977 = length(t4976);
float t4978 = (t4977*t4977);
bool t4979 = (t4978>1);
bool t4980 = (t4975&&t4979);
float t4981;
float t4982;
float t4983;
float t4984;
if(t4980){
t4981 = 0;
t4982 = 0;
t4983 = 0;
t4984 = 1;
} else {
t4981 = 0;
t4982 = 0;
t4983 = 0;
t4984 = 0;
}
float t4985 = (1-t4947);
float t4986 = (t4913*t4985);
float t4987 = (t4947+t4986);
float t4988 = (1-t4987);
float t4989 = (t4984*t4988);
float t4990 = (t4981*t4989);
float t4991 = (t4951+t4990);
bool t4992 = (t4872>0);
bool t4993 = (t4965>0);
bool t4994 = (!t4993);
bool t4995 = (t4992&&t4994);
bool t4996 = (!t4992);
bool t4997 = (t4993&&t4996);
bool t4998 = (t4995||t4997);
bool t4999 = (t4974<196);
bool t5000 = (t4974>float(6.76));
bool t5001 = (t4999&&t5000);
bool t5002 = (t4998&&t5001);
float t5003;
float t5004;
float t5005;
float t5006;
if(t5002){
float t5007 = (t4965/t4963);
float t5008 = (-t5007);
float t5009 = (t5008*t4956);
float t5010 = (t4959+t5009);
float t5011 = atan(t5010,t4971);
float t5012 = (u1.u0/30);
float t5013 = (t5011+t5012);
float t5014 = (2*3.1415927);
float t5015 = (t5013+t5014);
float t5016 = mod(t5015,2);
float t5017 = (t5016*3.1415927);
float t5018 = (t5017/t5014);
float t5019 = (t5008*t4963);
float t5020 = (t4965+t5019);
float t5021 = (t5008*t4969);
float t5022 = (t4971+t5021);
vec3 t5023 = vec3(t5010,t5020,t5022);
float t5024 = length(t5023);
float t5025 = (t5024*t5024);
float t5026 = sqrt(t5025);
float t5027 = (t5026-float(2.6));
float t5028 = (t5027/float(11.4));
vec4 t5029 = texture(s4,vec2(t5018,t5028));
t5003 = t5029.x;
t5004 = t5029.y;
t5005 = t5029.z;
vec3 t5030 = vec3(t5029.x,t5029.y,t5029.z);
float t5031 = length(t5030);
float t5032 = (t5031*t5031);
float t5033 = (t5032/float(3.0));
bool t5034 = (t5033<=1);
float t5035;
if(t5034){
t5035 = t5033;
} else {
t5035 = 1;
}
bool t5036 = (t5035>=0);
float t5037;
if(t5036){
t5037 = t5035;
} else {
t5037 = 0;
}
t5006 = t5037;
} else {
t5003 = 0;
t5004 = 0;
t5005 = 0;
t5006 = 0;
}
float t5038 = (1-t4987);
float t5039 = (t4984*t5038);
float t5040 = (t4987+t5039);
float t5041 = (1-t5040);
float t5042 = (t5006*t5041);
float t5043 = (t5003*t5042);
float t5044 = (t4991+t5043);
float t5045 = (t115*t4959);
float t5046 = pow(t4974,float(2.5));
float t5047 = (t5045/t5046);
float t5048 = (t5047*t4957);
float t5049 = (t4956+t5048);
float t5050 = (t4957*u1.u4);
float t5051 = (t5049*t5050);
float t5052 = (t4959+t5051);
float t5053 = (t115*t4965);
float t5054 = (t5053/t5046);
float t5055 = (t5054*t4957);
float t5056 = (t4963+t5055);
float t5057 = (t5056*t5050);
float t5058 = (t4965+t5057);
float t5059 = (t115*t4971);
float t5060 = (t5059/t5046);
float t5061 = (t5060*t4957);
float t5062 = (t4969+t5061);
float t5063 = (t5062*t5050);
float t5064 = (t4971+t5063);
vec3 t5065 = vec3(t5052,t5058,t5064);
float t5066 = length(t5065);
float t5067 = (t5066*t5066);
bool t5068 = (t5067<1);
vec3 t5069 = vec3(t4959,t4965,t4971);
float t5070 = length(t5069);
float t5071 = (t5070*t5070);
bool t5072 = (t5071>1);
bool t5073 = (t5068&&t5072);
float t5074;
float t5075;
float t5076;
float t5077;
if(t5073){
t5074 = 0;
t5075 = 0;
t5076 = 0;
t5077 = 1;
} else {
t5074 = 0;
t5075 = 0;
t5076 = 0;
t5077 = 0;
}
float t5078 = (1-t5040);
float t5079 = (t5006*t5078);
float t5080 = (t5040+t5079);
float t5081 = (1-t5080);
float t5082 = (t5077*t5081);
float t5083 = (t5074*t5082);
float t5084 = (t5044+t5083);
bool t5085 = (t4965>0);
bool t5086 = (t5058>0);
bool t5087 = (!t5086);
bool t5088 = (t5085&&t5087);
bool t5089 = (!t5085);
bool t5090 = (t5086&&t5089);
bool t5091 = (t5088||t5090);
bool t5092 = (t5067<196);
bool t5093 = (t5067>float(6.76));
bool t5094 = (t5092&&t5093);
bool t5095 = (t5091&&t5094);
float t5096;
float t5097;
float t5098;
float t5099;
if(t5095){
float t5100 = (t5058/t5056);
float t5101 = (-t5100);
float t5102 = (t5101*t5049);
float t5103 = (t5052+t5102);
float t5104 = atan(t5103,t5064);
float t5105 = (u1.u0/30);
float t5106 = (t5104+t5105);
float t5107 = (2*3.1415927);
float t5108 = (t5106+t5107);
float t5109 = mod(t5108,2);
float t5110 = (t5109*3.1415927);
float t5111 = (t5110/t5107);
float t5112 = (t5101*t5056);
float t5113 = (t5058+t5112);
float t5114 = (t5101*t5062);
float t5115 = (t5064+t5114);
vec3 t5116 = vec3(t5103,t5113,t5115);
float t5117 = length(t5116);
float t5118 = (t5117*t5117);
float t5119 = sqrt(t5118);
float t5120 = (t5119-float(2.6));
float t5121 = (t5120/float(11.4));
vec4 t5122 = texture(s4,vec2(t5111,t5121));
t5096 = t5122.x;
t5097 = t5122.y;
t5098 = t5122.z;
vec3 t5123 = vec3(t5122.x,t5122.y,t5122.z);
float t5124 = length(t5123);
float t5125 = (t5124*t5124);
float t5126 = (t5125/float(3.0));
bool t5127 = (t5126<=1);
float t5128;
if(t5127){
t5128 = t5126;
} else {
t5128 = 1;
}
bool t5129 = (t5128>=0);
float t5130;
if(t5129){
t5130 = t5128;
} else {
t5130 = 0;
}
t5099 = t5130;
} else {
t5096 = 0;
t5097 = 0;
t5098 = 0;
t5099 = 0;
}
float t5131 = (1-t5080);
float t5132 = (t5077*t5131);
float t5133 = (t5080+t5132);
float t5134 = (1-t5133);
float t5135 = (t5099*t5134);
float t5136 = (t5096*t5135);
float t5137 = (t5084+t5136);
float t5138 = (t115*t5052);
float t5139 = pow(t5067,float(2.5));
float t5140 = (t5138/t5139);
float t5141 = (t5140*t5050);
float t5142 = (t5049+t5141);
float t5143 = (t5050*u1.u4);
float t5144 = (t5142*t5143);
float t5145 = (t5052+t5144);
float t5146 = (t115*t5058);
float t5147 = (t5146/t5139);
float t5148 = (t5147*t5050);
float t5149 = (t5056+t5148);
float t5150 = (t5149*t5143);
float t5151 = (t5058+t5150);
float t5152 = (t115*t5064);
float t5153 = (t5152/t5139);
float t5154 = (t5153*t5050);
float t5155 = (t5062+t5154);
float t5156 = (t5155*t5143);
float t5157 = (t5064+t5156);
vec3 t5158 = vec3(t5145,t5151,t5157);
float t5159 = length(t5158);
float t5160 = (t5159*t5159);
bool t5161 = (t5160<1);
vec3 t5162 = vec3(t5052,t5058,t5064);
float t5163 = length(t5162);
float t5164 = (t5163*t5163);
bool t5165 = (t5164>1);
bool t5166 = (t5161&&t5165);
float t5167;
float t5168;
float t5169;
float t5170;
if(t5166){
t5167 = 0;
t5168 = 0;
t5169 = 0;
t5170 = 1;
} else {
t5167 = 0;
t5168 = 0;
t5169 = 0;
t5170 = 0;
}
float t5171 = (1-t5133);
float t5172 = (t5099*t5171);
float t5173 = (t5133+t5172);
float t5174 = (1-t5173);
float t5175 = (t5170*t5174);
float t5176 = (t5167*t5175);
float t5177 = (t5137+t5176);
bool t5178 = (t5058>0);
bool t5179 = (t5151>0);
bool t5180 = (!t5179);
bool t5181 = (t5178&&t5180);
bool t5182 = (!t5178);
bool t5183 = (t5179&&t5182);
bool t5184 = (t5181||t5183);
bool t5185 = (t5160<196);
bool t5186 = (t5160>float(6.76));
bool t5187 = (t5185&&t5186);
bool t5188 = (t5184&&t5187);
float t5189;
float t5190;
float t5191;
float t5192;
if(t5188){
float t5193 = (t5151/t5149);
float t5194 = (-t5193);
float t5195 = (t5194*t5142);
float t5196 = (t5145+t5195);
float t5197 = atan(t5196,t5157);
float t5198 = (u1.u0/30);
float t5199 = (t5197+t5198);
float t5200 = (2*3.1415927);
float t5201 = (t5199+t5200);
float t5202 = mod(t5201,2);
float t5203 = (t5202*3.1415927);
float t5204 = (t5203/t5200);
float t5205 = (t5194*t5149);
float t5206 = (t5151+t5205);
float t5207 = (t5194*t5155);
float t5208 = (t5157+t5207);
vec3 t5209 = vec3(t5196,t5206,t5208);
float t5210 = length(t5209);
float t5211 = (t5210*t5210);
float t5212 = sqrt(t5211);
float t5213 = (t5212-float(2.6));
float t5214 = (t5213/float(11.4));
vec4 t5215 = texture(s4,vec2(t5204,t5214));
t5189 = t5215.x;
t5190 = t5215.y;
t5191 = t5215.z;
vec3 t5216 = vec3(t5215.x,t5215.y,t5215.z);
float t5217 = length(t5216);
float t5218 = (t5217*t5217);
float t5219 = (t5218/float(3.0));
bool t5220 = (t5219<=1);
float t5221;
if(t5220){
t5221 = t5219;
} else {
t5221 = 1;
}
bool t5222 = (t5221>=0);
float t5223;
if(t5222){
t5223 = t5221;
} else {
t5223 = 0;
}
t5192 = t5223;
} else {
t5189 = 0;
t5190 = 0;
t5191 = 0;
t5192 = 0;
}
float t5224 = (1-t5173);
float t5225 = (t5170*t5224);
float t5226 = (t5173+t5225);
float t5227 = (1-t5226);
float t5228 = (t5192*t5227);
float t5229 = (t5189*t5228);
float t5230 = (t5177+t5229);
float t5231 = (t115*t5145);
float t5232 = pow(t5160,float(2.5));
float t5233 = (t5231/t5232);
float t5234 = (t5233*t5143);
float t5235 = (t5142+t5234);
float t5236 = (t5143*u1.u4);
float t5237 = (t5235*t5236);
float t5238 = (t5145+t5237);
float t5239 = (t115*t5151);
float t5240 = (t5239/t5232);
float t5241 = (t5240*t5143);
float t5242 = (t5149+t5241);
float t5243 = (t5242*t5236);
float t5244 = (t5151+t5243);
float t5245 = (t115*t5157);
float t5246 = (t5245/t5232);
float t5247 = (t5246*t5143);
float t5248 = (t5155+t5247);
float t5249 = (t5248*t5236);
float t5250 = (t5157+t5249);
vec3 t5251 = vec3(t5238,t5244,t5250);
float t5252 = length(t5251);
float t5253 = (t5252*t5252);
bool t5254 = (t5253<1);
vec3 t5255 = vec3(t5145,t5151,t5157);
float t5256 = length(t5255);
float t5257 = (t5256*t5256);
bool t5258 = (t5257>1);
bool t5259 = (t5254&&t5258);
float t5260;
float t5261;
float t5262;
float t5263;
if(t5259){
t5260 = 0;
t5261 = 0;
t5262 = 0;
t5263 = 1;
} else {
t5260 = 0;
t5261 = 0;
t5262 = 0;
t5263 = 0;
}
float t5264 = (1-t5226);
float t5265 = (t5192*t5264);
float t5266 = (t5226+t5265);
float t5267 = (1-t5266);
float t5268 = (t5263*t5267);
float t5269 = (t5260*t5268);
float t5270 = (t5230+t5269);
bool t5271 = (t5151>0);
bool t5272 = (t5244>0);
bool t5273 = (!t5272);
bool t5274 = (t5271&&t5273);
bool t5275 = (!t5271);
bool t5276 = (t5272&&t5275);
bool t5277 = (t5274||t5276);
bool t5278 = (t5253<196);
bool t5279 = (t5253>float(6.76));
bool t5280 = (t5278&&t5279);
bool t5281 = (t5277&&t5280);
float t5282;
float t5283;
float t5284;
float t5285;
if(t5281){
float t5286 = (t5244/t5242);
float t5287 = (-t5286);
float t5288 = (t5287*t5235);
float t5289 = (t5238+t5288);
float t5290 = atan(t5289,t5250);
float t5291 = (u1.u0/30);
float t5292 = (t5290+t5291);
float t5293 = (2*3.1415927);
float t5294 = (t5292+t5293);
float t5295 = mod(t5294,2);
float t5296 = (t5295*3.1415927);
float t5297 = (t5296/t5293);
float t5298 = (t5287*t5242);
float t5299 = (t5244+t5298);
float t5300 = (t5287*t5248);
float t5301 = (t5250+t5300);
vec3 t5302 = vec3(t5289,t5299,t5301);
float t5303 = length(t5302);
float t5304 = (t5303*t5303);
float t5305 = sqrt(t5304);
float t5306 = (t5305-float(2.6));
float t5307 = (t5306/float(11.4));
vec4 t5308 = texture(s4,vec2(t5297,t5307));
t5282 = t5308.x;
t5283 = t5308.y;
t5284 = t5308.z;
vec3 t5309 = vec3(t5308.x,t5308.y,t5308.z);
float t5310 = length(t5309);
float t5311 = (t5310*t5310);
float t5312 = (t5311/float(3.0));
bool t5313 = (t5312<=1);
float t5314;
if(t5313){
t5314 = t5312;
} else {
t5314 = 1;
}
bool t5315 = (t5314>=0);
float t5316;
if(t5315){
t5316 = t5314;
} else {
t5316 = 0;
}
t5285 = t5316;
} else {
t5282 = 0;
t5283 = 0;
t5284 = 0;
t5285 = 0;
}
float t5317 = (1-t5266);
float t5318 = (t5263*t5317);
float t5319 = (t5266+t5318);
float t5320 = (1-t5319);
float t5321 = (t5285*t5320);
float t5322 = (t5282*t5321);
float t5323 = (t5270+t5322);
float t5324 = (t115*t5238);
float t5325 = pow(t5253,float(2.5));
float t5326 = (t5324/t5325);
float t5327 = (t5326*t5236);
float t5328 = (t5235+t5327);
float t5329 = (t5236*u1.u4);
float t5330 = (t5328*t5329);
float t5331 = (t5238+t5330);
float t5332 = (t115*t5244);
float t5333 = (t5332/t5325);
float t5334 = (t5333*t5236);
float t5335 = (t5242+t5334);
float t5336 = (t5335*t5329);
float t5337 = (t5244+t5336);
float t5338 = (t115*t5250);
float t5339 = (t5338/t5325);
float t5340 = (t5339*t5236);
float t5341 = (t5248+t5340);
float t5342 = (t5341*t5329);
float t5343 = (t5250+t5342);
vec3 t5344 = vec3(t5331,t5337,t5343);
float t5345 = length(t5344);
float t5346 = (t5345*t5345);
bool t5347 = (t5346<1);
vec3 t5348 = vec3(t5238,t5244,t5250);
float t5349 = length(t5348);
float t5350 = (t5349*t5349);
bool t5351 = (t5350>1);
bool t5352 = (t5347&&t5351);
float t5353;
float t5354;
float t5355;
float t5356;
if(t5352){
t5353 = 0;
t5354 = 0;
t5355 = 0;
t5356 = 1;
} else {
t5353 = 0;
t5354 = 0;
t5355 = 0;
t5356 = 0;
}
float t5357 = (1-t5319);
float t5358 = (t5285*t5357);
float t5359 = (t5319+t5358);
float t5360 = (1-t5359);
float t5361 = (t5356*t5360);
float t5362 = (t5353*t5361);
float t5363 = (t5323+t5362);
bool t5364 = (t5244>0);
bool t5365 = (t5337>0);
bool t5366 = (!t5365);
bool t5367 = (t5364&&t5366);
bool t5368 = (!t5364);
bool t5369 = (t5365&&t5368);
bool t5370 = (t5367||t5369);
bool t5371 = (t5346<196);
bool t5372 = (t5346>float(6.76));
bool t5373 = (t5371&&t5372);
bool t5374 = (t5370&&t5373);
float t5375;
float t5376;
float t5377;
float t5378;
if(t5374){
float t5379 = (t5337/t5335);
float t5380 = (-t5379);
float t5381 = (t5380*t5328);
float t5382 = (t5331+t5381);
float t5383 = atan(t5382,t5343);
float t5384 = (u1.u0/30);
float t5385 = (t5383+t5384);
float t5386 = (2*3.1415927);
float t5387 = (t5385+t5386);
float t5388 = mod(t5387,2);
float t5389 = (t5388*3.1415927);
float t5390 = (t5389/t5386);
float t5391 = (t5380*t5335);
float t5392 = (t5337+t5391);
float t5393 = (t5380*t5341);
float t5394 = (t5343+t5393);
vec3 t5395 = vec3(t5382,t5392,t5394);
float t5396 = length(t5395);
float t5397 = (t5396*t5396);
float t5398 = sqrt(t5397);
float t5399 = (t5398-float(2.6));
float t5400 = (t5399/float(11.4));
vec4 t5401 = texture(s4,vec2(t5390,t5400));
t5375 = t5401.x;
t5376 = t5401.y;
t5377 = t5401.z;
vec3 t5402 = vec3(t5401.x,t5401.y,t5401.z);
float t5403 = length(t5402);
float t5404 = (t5403*t5403);
float t5405 = (t5404/float(3.0));
bool t5406 = (t5405<=1);
float t5407;
if(t5406){
t5407 = t5405;
} else {
t5407 = 1;
}
bool t5408 = (t5407>=0);
float t5409;
if(t5408){
t5409 = t5407;
} else {
t5409 = 0;
}
t5378 = t5409;
} else {
t5375 = 0;
t5376 = 0;
t5377 = 0;
t5378 = 0;
}
float t5410 = (1-t5359);
float t5411 = (t5356*t5410);
float t5412 = (t5359+t5411);
float t5413 = (1-t5412);
float t5414 = (t5378*t5413);
float t5415 = (t5375*t5414);
float t5416 = (t5363+t5415);
float t5417 = (t115*t5331);
float t5418 = pow(t5346,float(2.5));
float t5419 = (t5417/t5418);
float t5420 = (t5419*t5329);
float t5421 = (t5328+t5420);
float t5422 = (t5329*u1.u4);
float t5423 = (t5421*t5422);
float t5424 = (t5331+t5423);
float t5425 = (t115*t5337);
float t5426 = (t5425/t5418);
float t5427 = (t5426*t5329);
float t5428 = (t5335+t5427);
float t5429 = (t5428*t5422);
float t5430 = (t5337+t5429);
float t5431 = (t115*t5343);
float t5432 = (t5431/t5418);
float t5433 = (t5432*t5329);
float t5434 = (t5341+t5433);
float t5435 = (t5434*t5422);
float t5436 = (t5343+t5435);
vec3 t5437 = vec3(t5424,t5430,t5436);
float t5438 = length(t5437);
float t5439 = (t5438*t5438);
bool t5440 = (t5439<1);
vec3 t5441 = vec3(t5331,t5337,t5343);
float t5442 = length(t5441);
float t5443 = (t5442*t5442);
bool t5444 = (t5443>1);
bool t5445 = (t5440&&t5444);
float t5446;
float t5447;
float t5448;
float t5449;
if(t5445){
t5446 = 0;
t5447 = 0;
t5448 = 0;
t5449 = 1;
} else {
t5446 = 0;
t5447 = 0;
t5448 = 0;
t5449 = 0;
}
float t5450 = (1-t5412);
float t5451 = (t5378*t5450);
float t5452 = (t5412+t5451);
float t5453 = (1-t5452);
float t5454 = (t5449*t5453);
float t5455 = (t5446*t5454);
float t5456 = (t5416+t5455);
bool t5457 = (t5337>0);
bool t5458 = (t5430>0);
bool t5459 = (!t5458);
bool t5460 = (t5457&&t5459);
bool t5461 = (!t5457);
bool t5462 = (t5458&&t5461);
bool t5463 = (t5460||t5462);
bool t5464 = (t5439<196);
bool t5465 = (t5439>float(6.76));
bool t5466 = (t5464&&t5465);
bool t5467 = (t5463&&t5466);
float t5468;
float t5469;
float t5470;
float t5471;
if(t5467){
float t5472 = (t5430/t5428);
float t5473 = (-t5472);
float t5474 = (t5473*t5421);
float t5475 = (t5424+t5474);
float t5476 = atan(t5475,t5436);
float t5477 = (u1.u0/30);
float t5478 = (t5476+t5477);
float t5479 = (2*3.1415927);
float t5480 = (t5478+t5479);
float t5481 = mod(t5480,2);
float t5482 = (t5481*3.1415927);
float t5483 = (t5482/t5479);
float t5484 = (t5473*t5428);
float t5485 = (t5430+t5484);
float t5486 = (t5473*t5434);
float t5487 = (t5436+t5486);
vec3 t5488 = vec3(t5475,t5485,t5487);
float t5489 = length(t5488);
float t5490 = (t5489*t5489);
float t5491 = sqrt(t5490);
float t5492 = (t5491-float(2.6));
float t5493 = (t5492/float(11.4));
vec4 t5494 = texture(s4,vec2(t5483,t5493));
t5468 = t5494.x;
t5469 = t5494.y;
t5470 = t5494.z;
vec3 t5495 = vec3(t5494.x,t5494.y,t5494.z);
float t5496 = length(t5495);
float t5497 = (t5496*t5496);
float t5498 = (t5497/float(3.0));
bool t5499 = (t5498<=1);
float t5500;
if(t5499){
t5500 = t5498;
} else {
t5500 = 1;
}
bool t5501 = (t5500>=0);
float t5502;
if(t5501){
t5502 = t5500;
} else {
t5502 = 0;
}
t5471 = t5502;
} else {
t5468 = 0;
t5469 = 0;
t5470 = 0;
t5471 = 0;
}
float t5503 = (1-t5452);
float t5504 = (t5449*t5503);
float t5505 = (t5452+t5504);
float t5506 = (1-t5505);
float t5507 = (t5471*t5506);
float t5508 = (t5468*t5507);
float t5509 = (t5456+t5508);
float t5510 = (t115*t5424);
float t5511 = pow(t5439,float(2.5));
float t5512 = (t5510/t5511);
float t5513 = (t5512*t5422);
float t5514 = (t5421+t5513);
float t5515 = (t5422*u1.u4);
float t5516 = (t5514*t5515);
float t5517 = (t5424+t5516);
float t5518 = (t115*t5430);
float t5519 = (t5518/t5511);
float t5520 = (t5519*t5422);
float t5521 = (t5428+t5520);
float t5522 = (t5521*t5515);
float t5523 = (t5430+t5522);
float t5524 = (t115*t5436);
float t5525 = (t5524/t5511);
float t5526 = (t5525*t5422);
float t5527 = (t5434+t5526);
float t5528 = (t5527*t5515);
float t5529 = (t5436+t5528);
vec3 t5530 = vec3(t5517,t5523,t5529);
float t5531 = length(t5530);
float t5532 = (t5531*t5531);
bool t5533 = (t5532<1);
vec3 t5534 = vec3(t5424,t5430,t5436);
float t5535 = length(t5534);
float t5536 = (t5535*t5535);
bool t5537 = (t5536>1);
bool t5538 = (t5533&&t5537);
float t5539;
float t5540;
float t5541;
float t5542;
if(t5538){
t5539 = 0;
t5540 = 0;
t5541 = 0;
t5542 = 1;
} else {
t5539 = 0;
t5540 = 0;
t5541 = 0;
t5542 = 0;
}
float t5543 = (1-t5505);
float t5544 = (t5471*t5543);
float t5545 = (t5505+t5544);
float t5546 = (1-t5545);
float t5547 = (t5542*t5546);
float t5548 = (t5539*t5547);
float t5549 = (t5509+t5548);
bool t5550 = (t5430>0);
bool t5551 = (t5523>0);
bool t5552 = (!t5551);
bool t5553 = (t5550&&t5552);
bool t5554 = (!t5550);
bool t5555 = (t5551&&t5554);
bool t5556 = (t5553||t5555);
bool t5557 = (t5532<196);
bool t5558 = (t5532>float(6.76));
bool t5559 = (t5557&&t5558);
bool t5560 = (t5556&&t5559);
float t5561;
float t5562;
float t5563;
float t5564;
if(t5560){
float t5565 = (t5523/t5521);
float t5566 = (-t5565);
float t5567 = (t5566*t5514);
float t5568 = (t5517+t5567);
float t5569 = atan(t5568,t5529);
float t5570 = (u1.u0/30);
float t5571 = (t5569+t5570);
float t5572 = (2*3.1415927);
float t5573 = (t5571+t5572);
float t5574 = mod(t5573,2);
float t5575 = (t5574*3.1415927);
float t5576 = (t5575/t5572);
float t5577 = (t5566*t5521);
float t5578 = (t5523+t5577);
float t5579 = (t5566*t5527);
float t5580 = (t5529+t5579);
vec3 t5581 = vec3(t5568,t5578,t5580);
float t5582 = length(t5581);
float t5583 = (t5582*t5582);
float t5584 = sqrt(t5583);
float t5585 = (t5584-float(2.6));
float t5586 = (t5585/float(11.4));
vec4 t5587 = texture(s4,vec2(t5576,t5586));
t5561 = t5587.x;
t5562 = t5587.y;
t5563 = t5587.z;
vec3 t5588 = vec3(t5587.x,t5587.y,t5587.z);
float t5589 = length(t5588);
float t5590 = (t5589*t5589);
float t5591 = (t5590/float(3.0));
bool t5592 = (t5591<=1);
float t5593;
if(t5592){
t5593 = t5591;
} else {
t5593 = 1;
}
bool t5594 = (t5593>=0);
float t5595;
if(t5594){
t5595 = t5593;
} else {
t5595 = 0;
}
t5564 = t5595;
} else {
t5561 = 0;
t5562 = 0;
t5563 = 0;
t5564 = 0;
}
float t5596 = (1-t5545);
float t5597 = (t5542*t5596);
float t5598 = (t5545+t5597);
float t5599 = (1-t5598);
float t5600 = (t5564*t5599);
float t5601 = (t5561*t5600);
float t5602 = (t5549+t5601);
float t5603 = (t115*t5517);
float t5604 = pow(t5532,float(2.5));
float t5605 = (t5603/t5604);
float t5606 = (t5605*t5515);
float t5607 = (t5514+t5606);
float t5608 = (t5515*u1.u4);
float t5609 = (t5607*t5608);
float t5610 = (t5517+t5609);
float t5611 = (t115*t5523);
float t5612 = (t5611/t5604);
float t5613 = (t5612*t5515);
float t5614 = (t5521+t5613);
float t5615 = (t5614*t5608);
float t5616 = (t5523+t5615);
float t5617 = (t115*t5529);
float t5618 = (t5617/t5604);
float t5619 = (t5618*t5515);
float t5620 = (t5527+t5619);
float t5621 = (t5620*t5608);
float t5622 = (t5529+t5621);
vec3 t5623 = vec3(t5610,t5616,t5622);
float t5624 = length(t5623);
float t5625 = (t5624*t5624);
bool t5626 = (t5625<1);
vec3 t5627 = vec3(t5517,t5523,t5529);
float t5628 = length(t5627);
float t5629 = (t5628*t5628);
bool t5630 = (t5629>1);
bool t5631 = (t5626&&t5630);
float t5632;
float t5633;
float t5634;
float t5635;
if(t5631){
t5632 = 0;
t5633 = 0;
t5634 = 0;
t5635 = 1;
} else {
t5632 = 0;
t5633 = 0;
t5634 = 0;
t5635 = 0;
}
float t5636 = (1-t5598);
float t5637 = (t5564*t5636);
float t5638 = (t5598+t5637);
float t5639 = (1-t5638);
float t5640 = (t5635*t5639);
float t5641 = (t5632*t5640);
float t5642 = (t5602+t5641);
bool t5643 = (t5523>0);
bool t5644 = (t5616>0);
bool t5645 = (!t5644);
bool t5646 = (t5643&&t5645);
bool t5647 = (!t5643);
bool t5648 = (t5644&&t5647);
bool t5649 = (t5646||t5648);
bool t5650 = (t5625<196);
bool t5651 = (t5625>float(6.76));
bool t5652 = (t5650&&t5651);
bool t5653 = (t5649&&t5652);
float t5654;
float t5655;
float t5656;
float t5657;
if(t5653){
float t5658 = (t5616/t5614);
float t5659 = (-t5658);
float t5660 = (t5659*t5607);
float t5661 = (t5610+t5660);
float t5662 = atan(t5661,t5622);
float t5663 = (u1.u0/30);
float t5664 = (t5662+t5663);
float t5665 = (2*3.1415927);
float t5666 = (t5664+t5665);
float t5667 = mod(t5666,2);
float t5668 = (t5667*3.1415927);
float t5669 = (t5668/t5665);
float t5670 = (t5659*t5614);
float t5671 = (t5616+t5670);
float t5672 = (t5659*t5620);
float t5673 = (t5622+t5672);
vec3 t5674 = vec3(t5661,t5671,t5673);
float t5675 = length(t5674);
float t5676 = (t5675*t5675);
float t5677 = sqrt(t5676);
float t5678 = (t5677-float(2.6));
float t5679 = (t5678/float(11.4));
vec4 t5680 = texture(s4,vec2(t5669,t5679));
t5654 = t5680.x;
t5655 = t5680.y;
t5656 = t5680.z;
vec3 t5681 = vec3(t5680.x,t5680.y,t5680.z);
float t5682 = length(t5681);
float t5683 = (t5682*t5682);
float t5684 = (t5683/float(3.0));
bool t5685 = (t5684<=1);
float t5686;
if(t5685){
t5686 = t5684;
} else {
t5686 = 1;
}
bool t5687 = (t5686>=0);
float t5688;
if(t5687){
t5688 = t5686;
} else {
t5688 = 0;
}
t5657 = t5688;
} else {
t5654 = 0;
t5655 = 0;
t5656 = 0;
t5657 = 0;
}
float t5689 = (1-t5638);
float t5690 = (t5635*t5689);
float t5691 = (t5638+t5690);
float t5692 = (1-t5691);
float t5693 = (t5657*t5692);
float t5694 = (t5654*t5693);
float t5695 = (t5642+t5694);
float t5696 = (t115*t5610);
float t5697 = pow(t5625,float(2.5));
float t5698 = (t5696/t5697);
float t5699 = (t5698*t5608);
float t5700 = (t5607+t5699);
float t5701 = (t5608*u1.u4);
float t5702 = (t5700*t5701);
float t5703 = (t5610+t5702);
float t5704 = (t115*t5616);
float t5705 = (t5704/t5697);
float t5706 = (t5705*t5608);
float t5707 = (t5614+t5706);
float t5708 = (t5707*t5701);
float t5709 = (t5616+t5708);
float t5710 = (t115*t5622);
float t5711 = (t5710/t5697);
float t5712 = (t5711*t5608);
float t5713 = (t5620+t5712);
float t5714 = (t5713*t5701);
float t5715 = (t5622+t5714);
vec3 t5716 = vec3(t5703,t5709,t5715);
float t5717 = length(t5716);
float t5718 = (t5717*t5717);
bool t5719 = (t5718<1);
vec3 t5720 = vec3(t5610,t5616,t5622);
float t5721 = length(t5720);
float t5722 = (t5721*t5721);
bool t5723 = (t5722>1);
bool t5724 = (t5719&&t5723);
float t5725;
float t5726;
float t5727;
float t5728;
if(t5724){
t5725 = 0;
t5726 = 0;
t5727 = 0;
t5728 = 1;
} else {
t5725 = 0;
t5726 = 0;
t5727 = 0;
t5728 = 0;
}
float t5729 = (1-t5691);
float t5730 = (t5657*t5729);
float t5731 = (t5691+t5730);
float t5732 = (1-t5731);
float t5733 = (t5728*t5732);
float t5734 = (t5725*t5733);
float t5735 = (t5695+t5734);
bool t5736 = (t5616>0);
bool t5737 = (t5709>0);
bool t5738 = (!t5737);
bool t5739 = (t5736&&t5738);
bool t5740 = (!t5736);
bool t5741 = (t5737&&t5740);
bool t5742 = (t5739||t5741);
bool t5743 = (t5718<196);
bool t5744 = (t5718>float(6.76));
bool t5745 = (t5743&&t5744);
bool t5746 = (t5742&&t5745);
float t5747;
float t5748;
float t5749;
float t5750;
if(t5746){
float t5751 = (t5709/t5707);
float t5752 = (-t5751);
float t5753 = (t5752*t5700);
float t5754 = (t5703+t5753);
float t5755 = atan(t5754,t5715);
float t5756 = (u1.u0/30);
float t5757 = (t5755+t5756);
float t5758 = (2*3.1415927);
float t5759 = (t5757+t5758);
float t5760 = mod(t5759,2);
float t5761 = (t5760*3.1415927);
float t5762 = (t5761/t5758);
float t5763 = (t5752*t5707);
float t5764 = (t5709+t5763);
float t5765 = (t5752*t5713);
float t5766 = (t5715+t5765);
vec3 t5767 = vec3(t5754,t5764,t5766);
float t5768 = length(t5767);
float t5769 = (t5768*t5768);
float t5770 = sqrt(t5769);
float t5771 = (t5770-float(2.6));
float t5772 = (t5771/float(11.4));
vec4 t5773 = texture(s4,vec2(t5762,t5772));
t5747 = t5773.x;
t5748 = t5773.y;
t5749 = t5773.z;
vec3 t5774 = vec3(t5773.x,t5773.y,t5773.z);
float t5775 = length(t5774);
float t5776 = (t5775*t5775);
float t5777 = (t5776/float(3.0));
bool t5778 = (t5777<=1);
float t5779;
if(t5778){
t5779 = t5777;
} else {
t5779 = 1;
}
bool t5780 = (t5779>=0);
float t5781;
if(t5780){
t5781 = t5779;
} else {
t5781 = 0;
}
t5750 = t5781;
} else {
t5747 = 0;
t5748 = 0;
t5749 = 0;
t5750 = 0;
}
float t5782 = (1-t5731);
float t5783 = (t5728*t5782);
float t5784 = (t5731+t5783);
float t5785 = (1-t5784);
float t5786 = (t5750*t5785);
float t5787 = (t5747*t5786);
float t5788 = (t5735+t5787);
float t5789 = (t115*t5703);
float t5790 = pow(t5718,float(2.5));
float t5791 = (t5789/t5790);
float t5792 = (t5791*t5701);
float t5793 = (t5700+t5792);
float t5794 = (t5701*u1.u4);
float t5795 = (t5793*t5794);
float t5796 = (t5703+t5795);
float t5797 = (t115*t5709);
float t5798 = (t5797/t5790);
float t5799 = (t5798*t5701);
float t5800 = (t5707+t5799);
float t5801 = (t5800*t5794);
float t5802 = (t5709+t5801);
float t5803 = (t115*t5715);
float t5804 = (t5803/t5790);
float t5805 = (t5804*t5701);
float t5806 = (t5713+t5805);
float t5807 = (t5806*t5794);
float t5808 = (t5715+t5807);
vec3 t5809 = vec3(t5796,t5802,t5808);
float t5810 = length(t5809);
float t5811 = (t5810*t5810);
bool t5812 = (t5811<1);
vec3 t5813 = vec3(t5703,t5709,t5715);
float t5814 = length(t5813);
float t5815 = (t5814*t5814);
bool t5816 = (t5815>1);
bool t5817 = (t5812&&t5816);
float t5818;
float t5819;
float t5820;
float t5821;
if(t5817){
t5818 = 0;
t5819 = 0;
t5820 = 0;
t5821 = 1;
} else {
t5818 = 0;
t5819 = 0;
t5820 = 0;
t5821 = 0;
}
float t5822 = (1-t5784);
float t5823 = (t5750*t5822);
float t5824 = (t5784+t5823);
float t5825 = (1-t5824);
float t5826 = (t5821*t5825);
float t5827 = (t5818*t5826);
float t5828 = (t5788+t5827);
bool t5829 = (t5709>0);
bool t5830 = (t5802>0);
bool t5831 = (!t5830);
bool t5832 = (t5829&&t5831);
bool t5833 = (!t5829);
bool t5834 = (t5830&&t5833);
bool t5835 = (t5832||t5834);
bool t5836 = (t5811<196);
bool t5837 = (t5811>float(6.76));
bool t5838 = (t5836&&t5837);
bool t5839 = (t5835&&t5838);
float t5840;
float t5841;
float t5842;
float t5843;
if(t5839){
float t5844 = (t5802/t5800);
float t5845 = (-t5844);
float t5846 = (t5845*t5793);
float t5847 = (t5796+t5846);
float t5848 = atan(t5847,t5808);
float t5849 = (u1.u0/30);
float t5850 = (t5848+t5849);
float t5851 = (2*3.1415927);
float t5852 = (t5850+t5851);
float t5853 = mod(t5852,2);
float t5854 = (t5853*3.1415927);
float t5855 = (t5854/t5851);
float t5856 = (t5845*t5800);
float t5857 = (t5802+t5856);
float t5858 = (t5845*t5806);
float t5859 = (t5808+t5858);
vec3 t5860 = vec3(t5847,t5857,t5859);
float t5861 = length(t5860);
float t5862 = (t5861*t5861);
float t5863 = sqrt(t5862);
float t5864 = (t5863-float(2.6));
float t5865 = (t5864/float(11.4));
vec4 t5866 = texture(s4,vec2(t5855,t5865));
t5840 = t5866.x;
t5841 = t5866.y;
t5842 = t5866.z;
vec3 t5867 = vec3(t5866.x,t5866.y,t5866.z);
float t5868 = length(t5867);
float t5869 = (t5868*t5868);
float t5870 = (t5869/float(3.0));
bool t5871 = (t5870<=1);
float t5872;
if(t5871){
t5872 = t5870;
} else {
t5872 = 1;
}
bool t5873 = (t5872>=0);
float t5874;
if(t5873){
t5874 = t5872;
} else {
t5874 = 0;
}
t5843 = t5874;
} else {
t5840 = 0;
t5841 = 0;
t5842 = 0;
t5843 = 0;
}
float t5875 = (1-t5824);
float t5876 = (t5821*t5875);
float t5877 = (t5824+t5876);
float t5878 = (1-t5877);
float t5879 = (t5843*t5878);
float t5880 = (t5840*t5879);
float t5881 = (t5828+t5880);
float t5882 = (t115*t5796);
float t5883 = pow(t5811,float(2.5));
float t5884 = (t5882/t5883);
float t5885 = (t5884*t5794);
float t5886 = (t5793+t5885);
float t5887 = (t5794*u1.u4);
float t5888 = (t5886*t5887);
float t5889 = (t5796+t5888);
float t5890 = (t115*t5802);
float t5891 = (t5890/t5883);
float t5892 = (t5891*t5794);
float t5893 = (t5800+t5892);
float t5894 = (t5893*t5887);
float t5895 = (t5802+t5894);
float t5896 = (t115*t5808);
float t5897 = (t5896/t5883);
float t5898 = (t5897*t5794);
float t5899 = (t5806+t5898);
float t5900 = (t5899*t5887);
float t5901 = (t5808+t5900);
vec3 t5902 = vec3(t5889,t5895,t5901);
float t5903 = length(t5902);
float t5904 = (t5903*t5903);
bool t5905 = (t5904<1);
vec3 t5906 = vec3(t5796,t5802,t5808);
float t5907 = length(t5906);
float t5908 = (t5907*t5907);
bool t5909 = (t5908>1);
bool t5910 = (t5905&&t5909);
float t5911;
float t5912;
float t5913;
float t5914;
if(t5910){
t5911 = 0;
t5912 = 0;
t5913 = 0;
t5914 = 1;
} else {
t5911 = 0;
t5912 = 0;
t5913 = 0;
t5914 = 0;
}
float t5915 = (1-t5877);
float t5916 = (t5843*t5915);
float t5917 = (t5877+t5916);
float t5918 = (1-t5917);
float t5919 = (t5914*t5918);
float t5920 = (t5911*t5919);
float t5921 = (t5881+t5920);
bool t5922 = (t5802>0);
bool t5923 = (t5895>0);
bool t5924 = (!t5923);
bool t5925 = (t5922&&t5924);
bool t5926 = (!t5922);
bool t5927 = (t5923&&t5926);
bool t5928 = (t5925||t5927);
bool t5929 = (t5904<196);
bool t5930 = (t5904>float(6.76));
bool t5931 = (t5929&&t5930);
bool t5932 = (t5928&&t5931);
float t5933;
float t5934;
float t5935;
float t5936;
if(t5932){
float t5937 = (t5895/t5893);
float t5938 = (-t5937);
float t5939 = (t5938*t5886);
float t5940 = (t5889+t5939);
float t5941 = atan(t5940,t5901);
float t5942 = (u1.u0/30);
float t5943 = (t5941+t5942);
float t5944 = (2*3.1415927);
float t5945 = (t5943+t5944);
float t5946 = mod(t5945,2);
float t5947 = (t5946*3.1415927);
float t5948 = (t5947/t5944);
float t5949 = (t5938*t5893);
float t5950 = (t5895+t5949);
float t5951 = (t5938*t5899);
float t5952 = (t5901+t5951);
vec3 t5953 = vec3(t5940,t5950,t5952);
float t5954 = length(t5953);
float t5955 = (t5954*t5954);
float t5956 = sqrt(t5955);
float t5957 = (t5956-float(2.6));
float t5958 = (t5957/float(11.4));
vec4 t5959 = texture(s4,vec2(t5948,t5958));
t5933 = t5959.x;
t5934 = t5959.y;
t5935 = t5959.z;
vec3 t5960 = vec3(t5959.x,t5959.y,t5959.z);
float t5961 = length(t5960);
float t5962 = (t5961*t5961);
float t5963 = (t5962/float(3.0));
bool t5964 = (t5963<=1);
float t5965;
if(t5964){
t5965 = t5963;
} else {
t5965 = 1;
}
bool t5966 = (t5965>=0);
float t5967;
if(t5966){
t5967 = t5965;
} else {
t5967 = 0;
}
t5936 = t5967;
} else {
t5933 = 0;
t5934 = 0;
t5935 = 0;
t5936 = 0;
}
float t5968 = (1-t5917);
float t5969 = (t5914*t5968);
float t5970 = (t5917+t5969);
float t5971 = (1-t5970);
float t5972 = (t5936*t5971);
float t5973 = (t5933*t5972);
float t5974 = (t5921+t5973);
float t5975 = (t115*t5889);
float t5976 = pow(t5904,float(2.5));
float t5977 = (t5975/t5976);
float t5978 = (t5977*t5887);
float t5979 = (t5886+t5978);
float t5980 = (t5887*u1.u4);
float t5981 = (t5979*t5980);
float t5982 = (t5889+t5981);
float t5983 = (t115*t5895);
float t5984 = (t5983/t5976);
float t5985 = (t5984*t5887);
float t5986 = (t5893+t5985);
float t5987 = (t5986*t5980);
float t5988 = (t5895+t5987);
float t5989 = (t115*t5901);
float t5990 = (t5989/t5976);
float t5991 = (t5990*t5887);
float t5992 = (t5899+t5991);
float t5993 = (t5992*t5980);
float t5994 = (t5901+t5993);
vec3 t5995 = vec3(t5982,t5988,t5994);
float t5996 = length(t5995);
float t5997 = (t5996*t5996);
bool t5998 = (t5997<1);
vec3 t5999 = vec3(t5889,t5895,t5901);
float t6000 = length(t5999);
float t6001 = (t6000*t6000);
bool t6002 = (t6001>1);
bool t6003 = (t5998&&t6002);
float t6004;
float t6005;
float t6006;
float t6007;
if(t6003){
t6004 = 0;
t6005 = 0;
t6006 = 0;
t6007 = 1;
} else {
t6004 = 0;
t6005 = 0;
t6006 = 0;
t6007 = 0;
}
float t6008 = (1-t5970);
float t6009 = (t5936*t6008);
float t6010 = (t5970+t6009);
float t6011 = (1-t6010);
float t6012 = (t6007*t6011);
float t6013 = (t6004*t6012);
float t6014 = (t5974+t6013);
bool t6015 = (t5895>0);
bool t6016 = (t5988>0);
bool t6017 = (!t6016);
bool t6018 = (t6015&&t6017);
bool t6019 = (!t6015);
bool t6020 = (t6016&&t6019);
bool t6021 = (t6018||t6020);
bool t6022 = (t5997<196);
bool t6023 = (t5997>float(6.76));
bool t6024 = (t6022&&t6023);
bool t6025 = (t6021&&t6024);
float t6026;
float t6027;
float t6028;
float t6029;
if(t6025){
float t6030 = (t5988/t5986);
float t6031 = (-t6030);
float t6032 = (t6031*t5979);
float t6033 = (t5982+t6032);
float t6034 = atan(t6033,t5994);
float t6035 = (u1.u0/30);
float t6036 = (t6034+t6035);
float t6037 = (2*3.1415927);
float t6038 = (t6036+t6037);
float t6039 = mod(t6038,2);
float t6040 = (t6039*3.1415927);
float t6041 = (t6040/t6037);
float t6042 = (t6031*t5986);
float t6043 = (t5988+t6042);
float t6044 = (t6031*t5992);
float t6045 = (t5994+t6044);
vec3 t6046 = vec3(t6033,t6043,t6045);
float t6047 = length(t6046);
float t6048 = (t6047*t6047);
float t6049 = sqrt(t6048);
float t6050 = (t6049-float(2.6));
float t6051 = (t6050/float(11.4));
vec4 t6052 = texture(s4,vec2(t6041,t6051));
t6026 = t6052.x;
t6027 = t6052.y;
t6028 = t6052.z;
vec3 t6053 = vec3(t6052.x,t6052.y,t6052.z);
float t6054 = length(t6053);
float t6055 = (t6054*t6054);
float t6056 = (t6055/float(3.0));
bool t6057 = (t6056<=1);
float t6058;
if(t6057){
t6058 = t6056;
} else {
t6058 = 1;
}
bool t6059 = (t6058>=0);
float t6060;
if(t6059){
t6060 = t6058;
} else {
t6060 = 0;
}
t6029 = t6060;
} else {
t6026 = 0;
t6027 = 0;
t6028 = 0;
t6029 = 0;
}
float t6061 = (1-t6010);
float t6062 = (t6007*t6061);
float t6063 = (t6010+t6062);
float t6064 = (1-t6063);
float t6065 = (t6029*t6064);
float t6066 = (t6026*t6065);
float t6067 = (t6014+t6066);
float t6068 = (t115*t5982);
float t6069 = pow(t5997,float(2.5));
float t6070 = (t6068/t6069);
float t6071 = (t6070*t5980);
float t6072 = (t5979+t6071);
float t6073 = (t5980*u1.u4);
float t6074 = (t6072*t6073);
float t6075 = (t5982+t6074);
float t6076 = (t115*t5988);
float t6077 = (t6076/t6069);
float t6078 = (t6077*t5980);
float t6079 = (t5986+t6078);
float t6080 = (t6079*t6073);
float t6081 = (t5988+t6080);
float t6082 = (t115*t5994);
float t6083 = (t6082/t6069);
float t6084 = (t6083*t5980);
float t6085 = (t5992+t6084);
float t6086 = (t6085*t6073);
float t6087 = (t5994+t6086);
vec3 t6088 = vec3(t6075,t6081,t6087);
float t6089 = length(t6088);
float t6090 = (t6089*t6089);
bool t6091 = (t6090<1);
vec3 t6092 = vec3(t5982,t5988,t5994);
float t6093 = length(t6092);
float t6094 = (t6093*t6093);
bool t6095 = (t6094>1);
bool t6096 = (t6091&&t6095);
float t6097;
float t6098;
float t6099;
float t6100;
if(t6096){
t6097 = 0;
t6098 = 0;
t6099 = 0;
t6100 = 1;
} else {
t6097 = 0;
t6098 = 0;
t6099 = 0;
t6100 = 0;
}
float t6101 = (1-t6063);
float t6102 = (t6029*t6101);
float t6103 = (t6063+t6102);
float t6104 = (1-t6103);
float t6105 = (t6100*t6104);
float t6106 = (t6097*t6105);
float t6107 = (t6067+t6106);
bool t6108 = (t5988>0);
bool t6109 = (t6081>0);
bool t6110 = (!t6109);
bool t6111 = (t6108&&t6110);
bool t6112 = (!t6108);
bool t6113 = (t6109&&t6112);
bool t6114 = (t6111||t6113);
bool t6115 = (t6090<196);
bool t6116 = (t6090>float(6.76));
bool t6117 = (t6115&&t6116);
bool t6118 = (t6114&&t6117);
float t6119;
float t6120;
float t6121;
float t6122;
if(t6118){
float t6123 = (t6081/t6079);
float t6124 = (-t6123);
float t6125 = (t6124*t6072);
float t6126 = (t6075+t6125);
float t6127 = atan(t6126,t6087);
float t6128 = (u1.u0/30);
float t6129 = (t6127+t6128);
float t6130 = (2*3.1415927);
float t6131 = (t6129+t6130);
float t6132 = mod(t6131,2);
float t6133 = (t6132*3.1415927);
float t6134 = (t6133/t6130);
float t6135 = (t6124*t6079);
float t6136 = (t6081+t6135);
float t6137 = (t6124*t6085);
float t6138 = (t6087+t6137);
vec3 t6139 = vec3(t6126,t6136,t6138);
float t6140 = length(t6139);
float t6141 = (t6140*t6140);
float t6142 = sqrt(t6141);
float t6143 = (t6142-float(2.6));
float t6144 = (t6143/float(11.4));
vec4 t6145 = texture(s4,vec2(t6134,t6144));
t6119 = t6145.x;
t6120 = t6145.y;
t6121 = t6145.z;
vec3 t6146 = vec3(t6145.x,t6145.y,t6145.z);
float t6147 = length(t6146);
float t6148 = (t6147*t6147);
float t6149 = (t6148/float(3.0));
bool t6150 = (t6149<=1);
float t6151;
if(t6150){
t6151 = t6149;
} else {
t6151 = 1;
}
bool t6152 = (t6151>=0);
float t6153;
if(t6152){
t6153 = t6151;
} else {
t6153 = 0;
}
t6122 = t6153;
} else {
t6119 = 0;
t6120 = 0;
t6121 = 0;
t6122 = 0;
}
float t6154 = (1-t6103);
float t6155 = (t6100*t6154);
float t6156 = (t6103+t6155);
float t6157 = (1-t6156);
float t6158 = (t6122*t6157);
float t6159 = (t6119*t6158);
float t6160 = (t6107+t6159);
float t6161 = (t115*t6075);
float t6162 = pow(t6090,float(2.5));
float t6163 = (t6161/t6162);
float t6164 = (t6163*t6073);
float t6165 = (t6072+t6164);
float t6166 = (t6073*u1.u4);
float t6167 = (t6165*t6166);
float t6168 = (t6075+t6167);
float t6169 = (t115*t6081);
float t6170 = (t6169/t6162);
float t6171 = (t6170*t6073);
float t6172 = (t6079+t6171);
float t6173 = (t6172*t6166);
float t6174 = (t6081+t6173);
float t6175 = (t115*t6087);
float t6176 = (t6175/t6162);
float t6177 = (t6176*t6073);
float t6178 = (t6085+t6177);
float t6179 = (t6178*t6166);
float t6180 = (t6087+t6179);
vec3 t6181 = vec3(t6168,t6174,t6180);
float t6182 = length(t6181);
float t6183 = (t6182*t6182);
bool t6184 = (t6183<1);
vec3 t6185 = vec3(t6075,t6081,t6087);
float t6186 = length(t6185);
float t6187 = (t6186*t6186);
bool t6188 = (t6187>1);
bool t6189 = (t6184&&t6188);
float t6190;
float t6191;
float t6192;
float t6193;
if(t6189){
t6190 = 0;
t6191 = 0;
t6192 = 0;
t6193 = 1;
} else {
t6190 = 0;
t6191 = 0;
t6192 = 0;
t6193 = 0;
}
float t6194 = (1-t6156);
float t6195 = (t6122*t6194);
float t6196 = (t6156+t6195);
float t6197 = (1-t6196);
float t6198 = (t6193*t6197);
float t6199 = (t6190*t6198);
float t6200 = (t6160+t6199);
bool t6201 = (t6081>0);
bool t6202 = (t6174>0);
bool t6203 = (!t6202);
bool t6204 = (t6201&&t6203);
bool t6205 = (!t6201);
bool t6206 = (t6202&&t6205);
bool t6207 = (t6204||t6206);
bool t6208 = (t6183<196);
bool t6209 = (t6183>float(6.76));
bool t6210 = (t6208&&t6209);
bool t6211 = (t6207&&t6210);
float t6212;
float t6213;
float t6214;
float t6215;
if(t6211){
float t6216 = (t6174/t6172);
float t6217 = (-t6216);
float t6218 = (t6217*t6165);
float t6219 = (t6168+t6218);
float t6220 = atan(t6219,t6180);
float t6221 = (u1.u0/30);
float t6222 = (t6220+t6221);
float t6223 = (2*3.1415927);
float t6224 = (t6222+t6223);
float t6225 = mod(t6224,2);
float t6226 = (t6225*3.1415927);
float t6227 = (t6226/t6223);
float t6228 = (t6217*t6172);
float t6229 = (t6174+t6228);
float t6230 = (t6217*t6178);
float t6231 = (t6180+t6230);
vec3 t6232 = vec3(t6219,t6229,t6231);
float t6233 = length(t6232);
float t6234 = (t6233*t6233);
float t6235 = sqrt(t6234);
float t6236 = (t6235-float(2.6));
float t6237 = (t6236/float(11.4));
vec4 t6238 = texture(s4,vec2(t6227,t6237));
t6212 = t6238.x;
t6213 = t6238.y;
t6214 = t6238.z;
vec3 t6239 = vec3(t6238.x,t6238.y,t6238.z);
float t6240 = length(t6239);
float t6241 = (t6240*t6240);
float t6242 = (t6241/float(3.0));
bool t6243 = (t6242<=1);
float t6244;
if(t6243){
t6244 = t6242;
} else {
t6244 = 1;
}
bool t6245 = (t6244>=0);
float t6246;
if(t6245){
t6246 = t6244;
} else {
t6246 = 0;
}
t6215 = t6246;
} else {
t6212 = 0;
t6213 = 0;
t6214 = 0;
t6215 = 0;
}
float t6247 = (1-t6196);
float t6248 = (t6193*t6247);
float t6249 = (t6196+t6248);
float t6250 = (1-t6249);
float t6251 = (t6215*t6250);
float t6252 = (t6212*t6251);
float t6253 = (t6200+t6252);
float t6254 = (t115*t6168);
float t6255 = pow(t6183,float(2.5));
float t6256 = (t6254/t6255);
float t6257 = (t6256*t6166);
float t6258 = (t6165+t6257);
float t6259 = (t6166*u1.u4);
float t6260 = (t6258*t6259);
float t6261 = (t6168+t6260);
float t6262 = (t115*t6174);
float t6263 = (t6262/t6255);
float t6264 = (t6263*t6166);
float t6265 = (t6172+t6264);
float t6266 = (t6265*t6259);
float t6267 = (t6174+t6266);
float t6268 = (t115*t6180);
float t6269 = (t6268/t6255);
float t6270 = (t6269*t6166);
float t6271 = (t6178+t6270);
float t6272 = (t6271*t6259);
float t6273 = (t6180+t6272);
vec3 t6274 = vec3(t6261,t6267,t6273);
float t6275 = length(t6274);
float t6276 = (t6275*t6275);
bool t6277 = (t6276<1);
vec3 t6278 = vec3(t6168,t6174,t6180);
float t6279 = length(t6278);
float t6280 = (t6279*t6279);
bool t6281 = (t6280>1);
bool t6282 = (t6277&&t6281);
float t6283;
float t6284;
float t6285;
float t6286;
if(t6282){
t6283 = 0;
t6284 = 0;
t6285 = 0;
t6286 = 1;
} else {
t6283 = 0;
t6284 = 0;
t6285 = 0;
t6286 = 0;
}
float t6287 = (1-t6249);
float t6288 = (t6215*t6287);
float t6289 = (t6249+t6288);
float t6290 = (1-t6289);
float t6291 = (t6286*t6290);
float t6292 = (t6283*t6291);
float t6293 = (t6253+t6292);
bool t6294 = (t6174>0);
bool t6295 = (t6267>0);
bool t6296 = (!t6295);
bool t6297 = (t6294&&t6296);
bool t6298 = (!t6294);
bool t6299 = (t6295&&t6298);
bool t6300 = (t6297||t6299);
bool t6301 = (t6276<196);
bool t6302 = (t6276>float(6.76));
bool t6303 = (t6301&&t6302);
bool t6304 = (t6300&&t6303);
float t6305;
float t6306;
float t6307;
float t6308;
if(t6304){
float t6309 = (t6267/t6265);
float t6310 = (-t6309);
float t6311 = (t6310*t6258);
float t6312 = (t6261+t6311);
float t6313 = atan(t6312,t6273);
float t6314 = (u1.u0/30);
float t6315 = (t6313+t6314);
float t6316 = (2*3.1415927);
float t6317 = (t6315+t6316);
float t6318 = mod(t6317,2);
float t6319 = (t6318*3.1415927);
float t6320 = (t6319/t6316);
float t6321 = (t6310*t6265);
float t6322 = (t6267+t6321);
float t6323 = (t6310*t6271);
float t6324 = (t6273+t6323);
vec3 t6325 = vec3(t6312,t6322,t6324);
float t6326 = length(t6325);
float t6327 = (t6326*t6326);
float t6328 = sqrt(t6327);
float t6329 = (t6328-float(2.6));
float t6330 = (t6329/float(11.4));
vec4 t6331 = texture(s4,vec2(t6320,t6330));
t6305 = t6331.x;
t6306 = t6331.y;
t6307 = t6331.z;
vec3 t6332 = vec3(t6331.x,t6331.y,t6331.z);
float t6333 = length(t6332);
float t6334 = (t6333*t6333);
float t6335 = (t6334/float(3.0));
bool t6336 = (t6335<=1);
float t6337;
if(t6336){
t6337 = t6335;
} else {
t6337 = 1;
}
bool t6338 = (t6337>=0);
float t6339;
if(t6338){
t6339 = t6337;
} else {
t6339 = 0;
}
t6308 = t6339;
} else {
t6305 = 0;
t6306 = 0;
t6307 = 0;
t6308 = 0;
}
float t6340 = (1-t6289);
float t6341 = (t6286*t6340);
float t6342 = (t6289+t6341);
float t6343 = (1-t6342);
float t6344 = (t6308*t6343);
float t6345 = (t6305*t6344);
float t6346 = (t6293+t6345);
float t6347 = (t115*t6261);
float t6348 = pow(t6276,float(2.5));
float t6349 = (t6347/t6348);
float t6350 = (t6349*t6259);
float t6351 = (t6258+t6350);
float t6352 = (t6259*u1.u4);
float t6353 = (t6351*t6352);
float t6354 = (t6261+t6353);
float t6355 = (t115*t6267);
float t6356 = (t6355/t6348);
float t6357 = (t6356*t6259);
float t6358 = (t6265+t6357);
float t6359 = (t6358*t6352);
float t6360 = (t6267+t6359);
float t6361 = (t115*t6273);
float t6362 = (t6361/t6348);
float t6363 = (t6362*t6259);
float t6364 = (t6271+t6363);
float t6365 = (t6364*t6352);
float t6366 = (t6273+t6365);
vec3 t6367 = vec3(t6354,t6360,t6366);
float t6368 = length(t6367);
float t6369 = (t6368*t6368);
bool t6370 = (t6369<1);
vec3 t6371 = vec3(t6261,t6267,t6273);
float t6372 = length(t6371);
float t6373 = (t6372*t6372);
bool t6374 = (t6373>1);
bool t6375 = (t6370&&t6374);
float t6376;
float t6377;
float t6378;
float t6379;
if(t6375){
t6376 = 0;
t6377 = 0;
t6378 = 0;
t6379 = 1;
} else {
t6376 = 0;
t6377 = 0;
t6378 = 0;
t6379 = 0;
}
float t6380 = (1-t6342);
float t6381 = (t6308*t6380);
float t6382 = (t6342+t6381);
float t6383 = (1-t6382);
float t6384 = (t6379*t6383);
float t6385 = (t6376*t6384);
float t6386 = (t6346+t6385);
bool t6387 = (t6267>0);
bool t6388 = (t6360>0);
bool t6389 = (!t6388);
bool t6390 = (t6387&&t6389);
bool t6391 = (!t6387);
bool t6392 = (t6388&&t6391);
bool t6393 = (t6390||t6392);
bool t6394 = (t6369<196);
bool t6395 = (t6369>float(6.76));
bool t6396 = (t6394&&t6395);
bool t6397 = (t6393&&t6396);
float t6398;
float t6399;
float t6400;
float t6401;
if(t6397){
float t6402 = (t6360/t6358);
float t6403 = (-t6402);
float t6404 = (t6403*t6351);
float t6405 = (t6354+t6404);
float t6406 = atan(t6405,t6366);
float t6407 = (u1.u0/30);
float t6408 = (t6406+t6407);
float t6409 = (2*3.1415927);
float t6410 = (t6408+t6409);
float t6411 = mod(t6410,2);
float t6412 = (t6411*3.1415927);
float t6413 = (t6412/t6409);
float t6414 = (t6403*t6358);
float t6415 = (t6360+t6414);
float t6416 = (t6403*t6364);
float t6417 = (t6366+t6416);
vec3 t6418 = vec3(t6405,t6415,t6417);
float t6419 = length(t6418);
float t6420 = (t6419*t6419);
float t6421 = sqrt(t6420);
float t6422 = (t6421-float(2.6));
float t6423 = (t6422/float(11.4));
vec4 t6424 = texture(s4,vec2(t6413,t6423));
t6398 = t6424.x;
t6399 = t6424.y;
t6400 = t6424.z;
vec3 t6425 = vec3(t6424.x,t6424.y,t6424.z);
float t6426 = length(t6425);
float t6427 = (t6426*t6426);
float t6428 = (t6427/float(3.0));
bool t6429 = (t6428<=1);
float t6430;
if(t6429){
t6430 = t6428;
} else {
t6430 = 1;
}
bool t6431 = (t6430>=0);
float t6432;
if(t6431){
t6432 = t6430;
} else {
t6432 = 0;
}
t6401 = t6432;
} else {
t6398 = 0;
t6399 = 0;
t6400 = 0;
t6401 = 0;
}
float t6433 = (1-t6382);
float t6434 = (t6379*t6433);
float t6435 = (t6382+t6434);
float t6436 = (1-t6435);
float t6437 = (t6401*t6436);
float t6438 = (t6398*t6437);
float t6439 = (t6386+t6438);
float t6440 = (t115*t6354);
float t6441 = pow(t6369,float(2.5));
float t6442 = (t6440/t6441);
float t6443 = (t6442*t6352);
float t6444 = (t6351+t6443);
float t6445 = (t6352*u1.u4);
float t6446 = (t6444*t6445);
float t6447 = (t6354+t6446);
float t6448 = (t115*t6360);
float t6449 = (t6448/t6441);
float t6450 = (t6449*t6352);
float t6451 = (t6358+t6450);
float t6452 = (t6451*t6445);
float t6453 = (t6360+t6452);
float t6454 = (t115*t6366);
float t6455 = (t6454/t6441);
float t6456 = (t6455*t6352);
float t6457 = (t6364+t6456);
float t6458 = (t6457*t6445);
float t6459 = (t6366+t6458);
vec3 t6460 = vec3(t6447,t6453,t6459);
float t6461 = length(t6460);
float t6462 = (t6461*t6461);
bool t6463 = (t6462<1);
vec3 t6464 = vec3(t6354,t6360,t6366);
float t6465 = length(t6464);
float t6466 = (t6465*t6465);
bool t6467 = (t6466>1);
bool t6468 = (t6463&&t6467);
float t6469;
float t6470;
float t6471;
float t6472;
if(t6468){
t6469 = 0;
t6470 = 0;
t6471 = 0;
t6472 = 1;
} else {
t6469 = 0;
t6470 = 0;
t6471 = 0;
t6472 = 0;
}
float t6473 = (1-t6435);
float t6474 = (t6401*t6473);
float t6475 = (t6435+t6474);
float t6476 = (1-t6475);
float t6477 = (t6472*t6476);
float t6478 = (t6469*t6477);
float t6479 = (t6439+t6478);
bool t6480 = (t6360>0);
bool t6481 = (t6453>0);
bool t6482 = (!t6481);
bool t6483 = (t6480&&t6482);
bool t6484 = (!t6480);
bool t6485 = (t6481&&t6484);
bool t6486 = (t6483||t6485);
bool t6487 = (t6462<196);
bool t6488 = (t6462>float(6.76));
bool t6489 = (t6487&&t6488);
bool t6490 = (t6486&&t6489);
float t6491;
float t6492;
float t6493;
float t6494;
if(t6490){
float t6495 = (t6453/t6451);
float t6496 = (-t6495);
float t6497 = (t6496*t6444);
float t6498 = (t6447+t6497);
float t6499 = atan(t6498,t6459);
float t6500 = (u1.u0/30);
float t6501 = (t6499+t6500);
float t6502 = (2*3.1415927);
float t6503 = (t6501+t6502);
float t6504 = mod(t6503,2);
float t6505 = (t6504*3.1415927);
float t6506 = (t6505/t6502);
float t6507 = (t6496*t6451);
float t6508 = (t6453+t6507);
float t6509 = (t6496*t6457);
float t6510 = (t6459+t6509);
vec3 t6511 = vec3(t6498,t6508,t6510);
float t6512 = length(t6511);
float t6513 = (t6512*t6512);
float t6514 = sqrt(t6513);
float t6515 = (t6514-float(2.6));
float t6516 = (t6515/float(11.4));
vec4 t6517 = texture(s4,vec2(t6506,t6516));
t6491 = t6517.x;
t6492 = t6517.y;
t6493 = t6517.z;
vec3 t6518 = vec3(t6517.x,t6517.y,t6517.z);
float t6519 = length(t6518);
float t6520 = (t6519*t6519);
float t6521 = (t6520/float(3.0));
bool t6522 = (t6521<=1);
float t6523;
if(t6522){
t6523 = t6521;
} else {
t6523 = 1;
}
bool t6524 = (t6523>=0);
float t6525;
if(t6524){
t6525 = t6523;
} else {
t6525 = 0;
}
t6494 = t6525;
} else {
t6491 = 0;
t6492 = 0;
t6493 = 0;
t6494 = 0;
}
float t6526 = (1-t6475);
float t6527 = (t6472*t6526);
float t6528 = (t6475+t6527);
float t6529 = (1-t6528);
float t6530 = (t6494*t6529);
float t6531 = (t6491*t6530);
float t6532 = (t6479+t6531);
float t6533 = (t115*t6447);
float t6534 = pow(t6462,float(2.5));
float t6535 = (t6533/t6534);
float t6536 = (t6535*t6445);
float t6537 = (t6444+t6536);
float t6538 = (t6445*u1.u4);
float t6539 = (t6537*t6538);
float t6540 = (t6447+t6539);
float t6541 = (t115*t6453);
float t6542 = (t6541/t6534);
float t6543 = (t6542*t6445);
float t6544 = (t6451+t6543);
float t6545 = (t6544*t6538);
float t6546 = (t6453+t6545);
float t6547 = (t115*t6459);
float t6548 = (t6547/t6534);
float t6549 = (t6548*t6445);
float t6550 = (t6457+t6549);
float t6551 = (t6550*t6538);
float t6552 = (t6459+t6551);
vec3 t6553 = vec3(t6540,t6546,t6552);
float t6554 = length(t6553);
float t6555 = (t6554*t6554);
bool t6556 = (t6555<1);
vec3 t6557 = vec3(t6447,t6453,t6459);
float t6558 = length(t6557);
float t6559 = (t6558*t6558);
bool t6560 = (t6559>1);
bool t6561 = (t6556&&t6560);
float t6562;
float t6563;
float t6564;
float t6565;
if(t6561){
t6562 = 0;
t6563 = 0;
t6564 = 0;
t6565 = 1;
} else {
t6562 = 0;
t6563 = 0;
t6564 = 0;
t6565 = 0;
}
float t6566 = (1-t6528);
float t6567 = (t6494*t6566);
float t6568 = (t6528+t6567);
float t6569 = (1-t6568);
float t6570 = (t6565*t6569);
float t6571 = (t6562*t6570);
float t6572 = (t6532+t6571);
bool t6573 = (t6453>0);
bool t6574 = (t6546>0);
bool t6575 = (!t6574);
bool t6576 = (t6573&&t6575);
bool t6577 = (!t6573);
bool t6578 = (t6574&&t6577);
bool t6579 = (t6576||t6578);
bool t6580 = (t6555<196);
bool t6581 = (t6555>float(6.76));
bool t6582 = (t6580&&t6581);
bool t6583 = (t6579&&t6582);
float t6584;
float t6585;
float t6586;
float t6587;
if(t6583){
float t6588 = (t6546/t6544);
float t6589 = (-t6588);
float t6590 = (t6589*t6537);
float t6591 = (t6540+t6590);
float t6592 = atan(t6591,t6552);
float t6593 = (u1.u0/30);
float t6594 = (t6592+t6593);
float t6595 = (2*3.1415927);
float t6596 = (t6594+t6595);
float t6597 = mod(t6596,2);
float t6598 = (t6597*3.1415927);
float t6599 = (t6598/t6595);
float t6600 = (t6589*t6544);
float t6601 = (t6546+t6600);
float t6602 = (t6589*t6550);
float t6603 = (t6552+t6602);
vec3 t6604 = vec3(t6591,t6601,t6603);
float t6605 = length(t6604);
float t6606 = (t6605*t6605);
float t6607 = sqrt(t6606);
float t6608 = (t6607-float(2.6));
float t6609 = (t6608/float(11.4));
vec4 t6610 = texture(s4,vec2(t6599,t6609));
t6584 = t6610.x;
t6585 = t6610.y;
t6586 = t6610.z;
vec3 t6611 = vec3(t6610.x,t6610.y,t6610.z);
float t6612 = length(t6611);
float t6613 = (t6612*t6612);
float t6614 = (t6613/float(3.0));
bool t6615 = (t6614<=1);
float t6616;
if(t6615){
t6616 = t6614;
} else {
t6616 = 1;
}
bool t6617 = (t6616>=0);
float t6618;
if(t6617){
t6618 = t6616;
} else {
t6618 = 0;
}
t6587 = t6618;
} else {
t6584 = 0;
t6585 = 0;
t6586 = 0;
t6587 = 0;
}
float t6619 = (1-t6568);
float t6620 = (t6565*t6619);
float t6621 = (t6568+t6620);
float t6622 = (1-t6621);
float t6623 = (t6587*t6622);
float t6624 = (t6584*t6623);
float t6625 = (t6572+t6624);
float t6626 = (t115*t6540);
float t6627 = pow(t6555,float(2.5));
float t6628 = (t6626/t6627);
float t6629 = (t6628*t6538);
float t6630 = (t6537+t6629);
float t6631 = (t6538*u1.u4);
float t6632 = (t6630*t6631);
float t6633 = (t6540+t6632);
float t6634 = (t115*t6546);
float t6635 = (t6634/t6627);
float t6636 = (t6635*t6538);
float t6637 = (t6544+t6636);
float t6638 = (t6637*t6631);
float t6639 = (t6546+t6638);
float t6640 = (t115*t6552);
float t6641 = (t6640/t6627);
float t6642 = (t6641*t6538);
float t6643 = (t6550+t6642);
float t6644 = (t6643*t6631);
float t6645 = (t6552+t6644);
vec3 t6646 = vec3(t6633,t6639,t6645);
float t6647 = length(t6646);
float t6648 = (t6647*t6647);
bool t6649 = (t6648<1);
vec3 t6650 = vec3(t6540,t6546,t6552);
float t6651 = length(t6650);
float t6652 = (t6651*t6651);
bool t6653 = (t6652>1);
bool t6654 = (t6649&&t6653);
float t6655;
float t6656;
float t6657;
float t6658;
if(t6654){
t6655 = 0;
t6656 = 0;
t6657 = 0;
t6658 = 1;
} else {
t6655 = 0;
t6656 = 0;
t6657 = 0;
t6658 = 0;
}
float t6659 = (1-t6621);
float t6660 = (t6587*t6659);
float t6661 = (t6621+t6660);
float t6662 = (1-t6661);
float t6663 = (t6658*t6662);
float t6664 = (t6655*t6663);
float t6665 = (t6625+t6664);
bool t6666 = (t6546>0);
bool t6667 = (t6639>0);
bool t6668 = (!t6667);
bool t6669 = (t6666&&t6668);
bool t6670 = (!t6666);
bool t6671 = (t6667&&t6670);
bool t6672 = (t6669||t6671);
bool t6673 = (t6648<196);
bool t6674 = (t6648>float(6.76));
bool t6675 = (t6673&&t6674);
bool t6676 = (t6672&&t6675);
float t6677;
float t6678;
float t6679;
float t6680;
if(t6676){
float t6681 = (t6639/t6637);
float t6682 = (-t6681);
float t6683 = (t6682*t6630);
float t6684 = (t6633+t6683);
float t6685 = atan(t6684,t6645);
float t6686 = (u1.u0/30);
float t6687 = (t6685+t6686);
float t6688 = (2*3.1415927);
float t6689 = (t6687+t6688);
float t6690 = mod(t6689,2);
float t6691 = (t6690*3.1415927);
float t6692 = (t6691/t6688);
float t6693 = (t6682*t6637);
float t6694 = (t6639+t6693);
float t6695 = (t6682*t6643);
float t6696 = (t6645+t6695);
vec3 t6697 = vec3(t6684,t6694,t6696);
float t6698 = length(t6697);
float t6699 = (t6698*t6698);
float t6700 = sqrt(t6699);
float t6701 = (t6700-float(2.6));
float t6702 = (t6701/float(11.4));
vec4 t6703 = texture(s4,vec2(t6692,t6702));
t6677 = t6703.x;
t6678 = t6703.y;
t6679 = t6703.z;
vec3 t6704 = vec3(t6703.x,t6703.y,t6703.z);
float t6705 = length(t6704);
float t6706 = (t6705*t6705);
float t6707 = (t6706/float(3.0));
bool t6708 = (t6707<=1);
float t6709;
if(t6708){
t6709 = t6707;
} else {
t6709 = 1;
}
bool t6710 = (t6709>=0);
float t6711;
if(t6710){
t6711 = t6709;
} else {
t6711 = 0;
}
t6680 = t6711;
} else {
t6677 = 0;
t6678 = 0;
t6679 = 0;
t6680 = 0;
}
float t6712 = (1-t6661);
float t6713 = (t6658*t6712);
float t6714 = (t6661+t6713);
float t6715 = (1-t6714);
float t6716 = (t6680*t6715);
float t6717 = (t6677*t6716);
float t6718 = (t6665+t6717);
float t6719 = (t115*t6633);
float t6720 = pow(t6648,float(2.5));
float t6721 = (t6719/t6720);
float t6722 = (t6721*t6631);
float t6723 = (t6630+t6722);
float t6724 = (t6631*u1.u4);
float t6725 = (t6723*t6724);
float t6726 = (t6633+t6725);
float t6727 = (t115*t6639);
float t6728 = (t6727/t6720);
float t6729 = (t6728*t6631);
float t6730 = (t6637+t6729);
float t6731 = (t6730*t6724);
float t6732 = (t6639+t6731);
float t6733 = (t115*t6645);
float t6734 = (t6733/t6720);
float t6735 = (t6734*t6631);
float t6736 = (t6643+t6735);
float t6737 = (t6736*t6724);
float t6738 = (t6645+t6737);
vec3 t6739 = vec3(t6726,t6732,t6738);
float t6740 = length(t6739);
float t6741 = (t6740*t6740);
bool t6742 = (t6741<1);
vec3 t6743 = vec3(t6633,t6639,t6645);
float t6744 = length(t6743);
float t6745 = (t6744*t6744);
bool t6746 = (t6745>1);
bool t6747 = (t6742&&t6746);
float t6748;
float t6749;
float t6750;
float t6751;
if(t6747){
t6748 = 0;
t6749 = 0;
t6750 = 0;
t6751 = 1;
} else {
t6748 = 0;
t6749 = 0;
t6750 = 0;
t6751 = 0;
}
float t6752 = (1-t6714);
float t6753 = (t6680*t6752);
float t6754 = (t6714+t6753);
float t6755 = (1-t6754);
float t6756 = (t6751*t6755);
float t6757 = (t6748*t6756);
float t6758 = (t6718+t6757);
bool t6759 = (t6639>0);
bool t6760 = (t6732>0);
bool t6761 = (!t6760);
bool t6762 = (t6759&&t6761);
bool t6763 = (!t6759);
bool t6764 = (t6760&&t6763);
bool t6765 = (t6762||t6764);
bool t6766 = (t6741<196);
bool t6767 = (t6741>float(6.76));
bool t6768 = (t6766&&t6767);
bool t6769 = (t6765&&t6768);
float t6770;
float t6771;
float t6772;
float t6773;
if(t6769){
float t6774 = (t6732/t6730);
float t6775 = (-t6774);
float t6776 = (t6775*t6723);
float t6777 = (t6726+t6776);
float t6778 = atan(t6777,t6738);
float t6779 = (u1.u0/30);
float t6780 = (t6778+t6779);
float t6781 = (2*3.1415927);
float t6782 = (t6780+t6781);
float t6783 = mod(t6782,2);
float t6784 = (t6783*3.1415927);
float t6785 = (t6784/t6781);
float t6786 = (t6775*t6730);
float t6787 = (t6732+t6786);
float t6788 = (t6775*t6736);
float t6789 = (t6738+t6788);
vec3 t6790 = vec3(t6777,t6787,t6789);
float t6791 = length(t6790);
float t6792 = (t6791*t6791);
float t6793 = sqrt(t6792);
float t6794 = (t6793-float(2.6));
float t6795 = (t6794/float(11.4));
vec4 t6796 = texture(s4,vec2(t6785,t6795));
t6770 = t6796.x;
t6771 = t6796.y;
t6772 = t6796.z;
vec3 t6797 = vec3(t6796.x,t6796.y,t6796.z);
float t6798 = length(t6797);
float t6799 = (t6798*t6798);
float t6800 = (t6799/float(3.0));
bool t6801 = (t6800<=1);
float t6802;
if(t6801){
t6802 = t6800;
} else {
t6802 = 1;
}
bool t6803 = (t6802>=0);
float t6804;
if(t6803){
t6804 = t6802;
} else {
t6804 = 0;
}
t6773 = t6804;
} else {
t6770 = 0;
t6771 = 0;
t6772 = 0;
t6773 = 0;
}
float t6805 = (1-t6754);
float t6806 = (t6751*t6805);
float t6807 = (t6754+t6806);
float t6808 = (1-t6807);
float t6809 = (t6773*t6808);
float t6810 = (t6770*t6809);
float t6811 = (t6758+t6810);
float t6812 = (t115*t6726);
float t6813 = pow(t6741,float(2.5));
float t6814 = (t6812/t6813);
float t6815 = (t6814*t6724);
float t6816 = (t6723+t6815);
float t6817 = (t6724*u1.u4);
float t6818 = (t6816*t6817);
float t6819 = (t6726+t6818);
float t6820 = (t115*t6732);
float t6821 = (t6820/t6813);
float t6822 = (t6821*t6724);
float t6823 = (t6730+t6822);
float t6824 = (t6823*t6817);
float t6825 = (t6732+t6824);
float t6826 = (t115*t6738);
float t6827 = (t6826/t6813);
float t6828 = (t6827*t6724);
float t6829 = (t6736+t6828);
float t6830 = (t6829*t6817);
float t6831 = (t6738+t6830);
vec3 t6832 = vec3(t6819,t6825,t6831);
float t6833 = length(t6832);
float t6834 = (t6833*t6833);
bool t6835 = (t6834<1);
vec3 t6836 = vec3(t6726,t6732,t6738);
float t6837 = length(t6836);
float t6838 = (t6837*t6837);
bool t6839 = (t6838>1);
bool t6840 = (t6835&&t6839);
float t6841;
float t6842;
float t6843;
float t6844;
if(t6840){
t6841 = 0;
t6842 = 0;
t6843 = 0;
t6844 = 1;
} else {
t6841 = 0;
t6842 = 0;
t6843 = 0;
t6844 = 0;
}
float t6845 = (1-t6807);
float t6846 = (t6773*t6845);
float t6847 = (t6807+t6846);
float t6848 = (1-t6847);
float t6849 = (t6844*t6848);
float t6850 = (t6841*t6849);
float t6851 = (t6811+t6850);
bool t6852 = (t6732>0);
bool t6853 = (t6825>0);
bool t6854 = (!t6853);
bool t6855 = (t6852&&t6854);
bool t6856 = (!t6852);
bool t6857 = (t6853&&t6856);
bool t6858 = (t6855||t6857);
bool t6859 = (t6834<196);
bool t6860 = (t6834>float(6.76));
bool t6861 = (t6859&&t6860);
bool t6862 = (t6858&&t6861);
float t6863;
float t6864;
float t6865;
float t6866;
if(t6862){
float t6867 = (t6825/t6823);
float t6868 = (-t6867);
float t6869 = (t6868*t6816);
float t6870 = (t6819+t6869);
float t6871 = atan(t6870,t6831);
float t6872 = (u1.u0/30);
float t6873 = (t6871+t6872);
float t6874 = (2*3.1415927);
float t6875 = (t6873+t6874);
float t6876 = mod(t6875,2);
float t6877 = (t6876*3.1415927);
float t6878 = (t6877/t6874);
float t6879 = (t6868*t6823);
float t6880 = (t6825+t6879);
float t6881 = (t6868*t6829);
float t6882 = (t6831+t6881);
vec3 t6883 = vec3(t6870,t6880,t6882);
float t6884 = length(t6883);
float t6885 = (t6884*t6884);
float t6886 = sqrt(t6885);
float t6887 = (t6886-float(2.6));
float t6888 = (t6887/float(11.4));
vec4 t6889 = texture(s4,vec2(t6878,t6888));
t6863 = t6889.x;
t6864 = t6889.y;
t6865 = t6889.z;
vec3 t6890 = vec3(t6889.x,t6889.y,t6889.z);
float t6891 = length(t6890);
float t6892 = (t6891*t6891);
float t6893 = (t6892/float(3.0));
bool t6894 = (t6893<=1);
float t6895;
if(t6894){
t6895 = t6893;
} else {
t6895 = 1;
}
bool t6896 = (t6895>=0);
float t6897;
if(t6896){
t6897 = t6895;
} else {
t6897 = 0;
}
t6866 = t6897;
} else {
t6863 = 0;
t6864 = 0;
t6865 = 0;
t6866 = 0;
}
float t6898 = (1-t6847);
float t6899 = (t6844*t6898);
float t6900 = (t6847+t6899);
float t6901 = (1-t6900);
float t6902 = (t6866*t6901);
float t6903 = (t6863*t6902);
float t6904 = (t6851+t6903);
float t6905 = (t115*t6819);
float t6906 = pow(t6834,float(2.5));
float t6907 = (t6905/t6906);
float t6908 = (t6907*t6817);
float t6909 = (t6816+t6908);
float t6910 = (t6817*u1.u4);
float t6911 = (t6909*t6910);
float t6912 = (t6819+t6911);
float t6913 = (t115*t6825);
float t6914 = (t6913/t6906);
float t6915 = (t6914*t6817);
float t6916 = (t6823+t6915);
float t6917 = (t6916*t6910);
float t6918 = (t6825+t6917);
float t6919 = (t115*t6831);
float t6920 = (t6919/t6906);
float t6921 = (t6920*t6817);
float t6922 = (t6829+t6921);
float t6923 = (t6922*t6910);
float t6924 = (t6831+t6923);
vec3 t6925 = vec3(t6912,t6918,t6924);
float t6926 = length(t6925);
float t6927 = (t6926*t6926);
bool t6928 = (t6927<1);
vec3 t6929 = vec3(t6819,t6825,t6831);
float t6930 = length(t6929);
float t6931 = (t6930*t6930);
bool t6932 = (t6931>1);
bool t6933 = (t6928&&t6932);
float t6934;
float t6935;
float t6936;
float t6937;
if(t6933){
t6934 = 0;
t6935 = 0;
t6936 = 0;
t6937 = 1;
} else {
t6934 = 0;
t6935 = 0;
t6936 = 0;
t6937 = 0;
}
float t6938 = (1-t6900);
float t6939 = (t6866*t6938);
float t6940 = (t6900+t6939);
float t6941 = (1-t6940);
float t6942 = (t6937*t6941);
float t6943 = (t6934*t6942);
float t6944 = (t6904+t6943);
bool t6945 = (t6825>0);
bool t6946 = (t6918>0);
bool t6947 = (!t6946);
bool t6948 = (t6945&&t6947);
bool t6949 = (!t6945);
bool t6950 = (t6946&&t6949);
bool t6951 = (t6948||t6950);
bool t6952 = (t6927<196);
bool t6953 = (t6927>float(6.76));
bool t6954 = (t6952&&t6953);
bool t6955 = (t6951&&t6954);
float t6956;
float t6957;
float t6958;
float t6959;
if(t6955){
float t6960 = (t6918/t6916);
float t6961 = (-t6960);
float t6962 = (t6961*t6909);
float t6963 = (t6912+t6962);
float t6964 = atan(t6963,t6924);
float t6965 = (u1.u0/30);
float t6966 = (t6964+t6965);
float t6967 = (2*3.1415927);
float t6968 = (t6966+t6967);
float t6969 = mod(t6968,2);
float t6970 = (t6969*3.1415927);
float t6971 = (t6970/t6967);
float t6972 = (t6961*t6916);
float t6973 = (t6918+t6972);
float t6974 = (t6961*t6922);
float t6975 = (t6924+t6974);
vec3 t6976 = vec3(t6963,t6973,t6975);
float t6977 = length(t6976);
float t6978 = (t6977*t6977);
float t6979 = sqrt(t6978);
float t6980 = (t6979-float(2.6));
float t6981 = (t6980/float(11.4));
vec4 t6982 = texture(s4,vec2(t6971,t6981));
t6956 = t6982.x;
t6957 = t6982.y;
t6958 = t6982.z;
vec3 t6983 = vec3(t6982.x,t6982.y,t6982.z);
float t6984 = length(t6983);
float t6985 = (t6984*t6984);
float t6986 = (t6985/float(3.0));
bool t6987 = (t6986<=1);
float t6988;
if(t6987){
t6988 = t6986;
} else {
t6988 = 1;
}
bool t6989 = (t6988>=0);
float t6990;
if(t6989){
t6990 = t6988;
} else {
t6990 = 0;
}
t6959 = t6990;
} else {
t6956 = 0;
t6957 = 0;
t6958 = 0;
t6959 = 0;
}
float t6991 = (1-t6940);
float t6992 = (t6937*t6991);
float t6993 = (t6940+t6992);
float t6994 = (1-t6993);
float t6995 = (t6959*t6994);
float t6996 = (t6956*t6995);
float t6997 = (t6944+t6996);
float t6998 = (t115*t6912);
float t6999 = pow(t6927,float(2.5));
float t7000 = (t6998/t6999);
float t7001 = (t7000*t6910);
float t7002 = (t6909+t7001);
float t7003 = (t6910*u1.u4);
float t7004 = (t7002*t7003);
float t7005 = (t6912+t7004);
float t7006 = (t115*t6918);
float t7007 = (t7006/t6999);
float t7008 = (t7007*t6910);
float t7009 = (t6916+t7008);
float t7010 = (t7009*t7003);
float t7011 = (t6918+t7010);
float t7012 = (t115*t6924);
float t7013 = (t7012/t6999);
float t7014 = (t7013*t6910);
float t7015 = (t6922+t7014);
float t7016 = (t7015*t7003);
float t7017 = (t6924+t7016);
vec3 t7018 = vec3(t7005,t7011,t7017);
float t7019 = length(t7018);
float t7020 = (t7019*t7019);
bool t7021 = (t7020<1);
vec3 t7022 = vec3(t6912,t6918,t6924);
float t7023 = length(t7022);
float t7024 = (t7023*t7023);
bool t7025 = (t7024>1);
bool t7026 = (t7021&&t7025);
float t7027;
float t7028;
float t7029;
float t7030;
if(t7026){
t7027 = 0;
t7028 = 0;
t7029 = 0;
t7030 = 1;
} else {
t7027 = 0;
t7028 = 0;
t7029 = 0;
t7030 = 0;
}
float t7031 = (1-t6993);
float t7032 = (t6959*t7031);
float t7033 = (t6993+t7032);
float t7034 = (1-t7033);
float t7035 = (t7030*t7034);
float t7036 = (t7027*t7035);
float t7037 = (t6997+t7036);
bool t7038 = (t6918>0);
bool t7039 = (t7011>0);
bool t7040 = (!t7039);
bool t7041 = (t7038&&t7040);
bool t7042 = (!t7038);
bool t7043 = (t7039&&t7042);
bool t7044 = (t7041||t7043);
bool t7045 = (t7020<196);
bool t7046 = (t7020>float(6.76));
bool t7047 = (t7045&&t7046);
bool t7048 = (t7044&&t7047);
float t7049;
float t7050;
float t7051;
float t7052;
if(t7048){
float t7053 = (t7011/t7009);
float t7054 = (-t7053);
float t7055 = (t7054*t7002);
float t7056 = (t7005+t7055);
float t7057 = atan(t7056,t7017);
float t7058 = (u1.u0/30);
float t7059 = (t7057+t7058);
float t7060 = (2*3.1415927);
float t7061 = (t7059+t7060);
float t7062 = mod(t7061,2);
float t7063 = (t7062*3.1415927);
float t7064 = (t7063/t7060);
float t7065 = (t7054*t7009);
float t7066 = (t7011+t7065);
float t7067 = (t7054*t7015);
float t7068 = (t7017+t7067);
vec3 t7069 = vec3(t7056,t7066,t7068);
float t7070 = length(t7069);
float t7071 = (t7070*t7070);
float t7072 = sqrt(t7071);
float t7073 = (t7072-float(2.6));
float t7074 = (t7073/float(11.4));
vec4 t7075 = texture(s4,vec2(t7064,t7074));
t7049 = t7075.x;
t7050 = t7075.y;
t7051 = t7075.z;
vec3 t7076 = vec3(t7075.x,t7075.y,t7075.z);
float t7077 = length(t7076);
float t7078 = (t7077*t7077);
float t7079 = (t7078/float(3.0));
bool t7080 = (t7079<=1);
float t7081;
if(t7080){
t7081 = t7079;
} else {
t7081 = 1;
}
bool t7082 = (t7081>=0);
float t7083;
if(t7082){
t7083 = t7081;
} else {
t7083 = 0;
}
t7052 = t7083;
} else {
t7049 = 0;
t7050 = 0;
t7051 = 0;
t7052 = 0;
}
float t7084 = (1-t7033);
float t7085 = (t7030*t7084);
float t7086 = (t7033+t7085);
float t7087 = (1-t7086);
float t7088 = (t7052*t7087);
float t7089 = (t7049*t7088);
float t7090 = (t7037+t7089);
float t7091 = (t115*t7005);
float t7092 = pow(t7020,float(2.5));
float t7093 = (t7091/t7092);
float t7094 = (t7093*t7003);
float t7095 = (t7002+t7094);
float t7096 = (t7003*u1.u4);
float t7097 = (t7095*t7096);
float t7098 = (t7005+t7097);
float t7099 = (t115*t7011);
float t7100 = (t7099/t7092);
float t7101 = (t7100*t7003);
float t7102 = (t7009+t7101);
float t7103 = (t7102*t7096);
float t7104 = (t7011+t7103);
float t7105 = (t115*t7017);
float t7106 = (t7105/t7092);
float t7107 = (t7106*t7003);
float t7108 = (t7015+t7107);
float t7109 = (t7108*t7096);
float t7110 = (t7017+t7109);
vec3 t7111 = vec3(t7098,t7104,t7110);
float t7112 = length(t7111);
float t7113 = (t7112*t7112);
bool t7114 = (t7113<1);
vec3 t7115 = vec3(t7005,t7011,t7017);
float t7116 = length(t7115);
float t7117 = (t7116*t7116);
bool t7118 = (t7117>1);
bool t7119 = (t7114&&t7118);
float t7120;
float t7121;
float t7122;
float t7123;
if(t7119){
t7120 = 0;
t7121 = 0;
t7122 = 0;
t7123 = 1;
} else {
t7120 = 0;
t7121 = 0;
t7122 = 0;
t7123 = 0;
}
float t7124 = (1-t7086);
float t7125 = (t7052*t7124);
float t7126 = (t7086+t7125);
float t7127 = (1-t7126);
float t7128 = (t7123*t7127);
float t7129 = (t7120*t7128);
float t7130 = (t7090+t7129);
bool t7131 = (t7011>0);
bool t7132 = (t7104>0);
bool t7133 = (!t7132);
bool t7134 = (t7131&&t7133);
bool t7135 = (!t7131);
bool t7136 = (t7132&&t7135);
bool t7137 = (t7134||t7136);
bool t7138 = (t7113<196);
bool t7139 = (t7113>float(6.76));
bool t7140 = (t7138&&t7139);
bool t7141 = (t7137&&t7140);
float t7142;
float t7143;
float t7144;
float t7145;
if(t7141){
float t7146 = (t7104/t7102);
float t7147 = (-t7146);
float t7148 = (t7147*t7095);
float t7149 = (t7098+t7148);
float t7150 = atan(t7149,t7110);
float t7151 = (u1.u0/30);
float t7152 = (t7150+t7151);
float t7153 = (2*3.1415927);
float t7154 = (t7152+t7153);
float t7155 = mod(t7154,2);
float t7156 = (t7155*3.1415927);
float t7157 = (t7156/t7153);
float t7158 = (t7147*t7102);
float t7159 = (t7104+t7158);
float t7160 = (t7147*t7108);
float t7161 = (t7110+t7160);
vec3 t7162 = vec3(t7149,t7159,t7161);
float t7163 = length(t7162);
float t7164 = (t7163*t7163);
float t7165 = sqrt(t7164);
float t7166 = (t7165-float(2.6));
float t7167 = (t7166/float(11.4));
vec4 t7168 = texture(s4,vec2(t7157,t7167));
t7142 = t7168.x;
t7143 = t7168.y;
t7144 = t7168.z;
vec3 t7169 = vec3(t7168.x,t7168.y,t7168.z);
float t7170 = length(t7169);
float t7171 = (t7170*t7170);
float t7172 = (t7171/float(3.0));
bool t7173 = (t7172<=1);
float t7174;
if(t7173){
t7174 = t7172;
} else {
t7174 = 1;
}
bool t7175 = (t7174>=0);
float t7176;
if(t7175){
t7176 = t7174;
} else {
t7176 = 0;
}
t7145 = t7176;
} else {
t7142 = 0;
t7143 = 0;
t7144 = 0;
t7145 = 0;
}
float t7177 = (1-t7126);
float t7178 = (t7123*t7177);
float t7179 = (t7126+t7178);
float t7180 = (1-t7179);
float t7181 = (t7145*t7180);
float t7182 = (t7142*t7181);
float t7183 = (t7130+t7182);
float t7184 = (t115*t7098);
float t7185 = pow(t7113,float(2.5));
float t7186 = (t7184/t7185);
float t7187 = (t7186*t7096);
float t7188 = (t7095+t7187);
float t7189 = (t7096*u1.u4);
float t7190 = (t7188*t7189);
float t7191 = (t7098+t7190);
float t7192 = (t115*t7104);
float t7193 = (t7192/t7185);
float t7194 = (t7193*t7096);
float t7195 = (t7102+t7194);
float t7196 = (t7195*t7189);
float t7197 = (t7104+t7196);
float t7198 = (t115*t7110);
float t7199 = (t7198/t7185);
float t7200 = (t7199*t7096);
float t7201 = (t7108+t7200);
float t7202 = (t7201*t7189);
float t7203 = (t7110+t7202);
vec3 t7204 = vec3(t7191,t7197,t7203);
float t7205 = length(t7204);
float t7206 = (t7205*t7205);
bool t7207 = (t7206<1);
vec3 t7208 = vec3(t7098,t7104,t7110);
float t7209 = length(t7208);
float t7210 = (t7209*t7209);
bool t7211 = (t7210>1);
bool t7212 = (t7207&&t7211);
float t7213;
float t7214;
float t7215;
float t7216;
if(t7212){
t7213 = 0;
t7214 = 0;
t7215 = 0;
t7216 = 1;
} else {
t7213 = 0;
t7214 = 0;
t7215 = 0;
t7216 = 0;
}
float t7217 = (1-t7179);
float t7218 = (t7145*t7217);
float t7219 = (t7179+t7218);
float t7220 = (1-t7219);
float t7221 = (t7216*t7220);
float t7222 = (t7213*t7221);
float t7223 = (t7183+t7222);
bool t7224 = (t7104>0);
bool t7225 = (t7197>0);
bool t7226 = (!t7225);
bool t7227 = (t7224&&t7226);
bool t7228 = (!t7224);
bool t7229 = (t7225&&t7228);
bool t7230 = (t7227||t7229);
bool t7231 = (t7206<196);
bool t7232 = (t7206>float(6.76));
bool t7233 = (t7231&&t7232);
bool t7234 = (t7230&&t7233);
float t7235;
float t7236;
float t7237;
float t7238;
if(t7234){
float t7239 = (t7197/t7195);
float t7240 = (-t7239);
float t7241 = (t7240*t7188);
float t7242 = (t7191+t7241);
float t7243 = atan(t7242,t7203);
float t7244 = (u1.u0/30);
float t7245 = (t7243+t7244);
float t7246 = (2*3.1415927);
float t7247 = (t7245+t7246);
float t7248 = mod(t7247,2);
float t7249 = (t7248*3.1415927);
float t7250 = (t7249/t7246);
float t7251 = (t7240*t7195);
float t7252 = (t7197+t7251);
float t7253 = (t7240*t7201);
float t7254 = (t7203+t7253);
vec3 t7255 = vec3(t7242,t7252,t7254);
float t7256 = length(t7255);
float t7257 = (t7256*t7256);
float t7258 = sqrt(t7257);
float t7259 = (t7258-float(2.6));
float t7260 = (t7259/float(11.4));
vec4 t7261 = texture(s4,vec2(t7250,t7260));
t7235 = t7261.x;
t7236 = t7261.y;
t7237 = t7261.z;
vec3 t7262 = vec3(t7261.x,t7261.y,t7261.z);
float t7263 = length(t7262);
float t7264 = (t7263*t7263);
float t7265 = (t7264/float(3.0));
bool t7266 = (t7265<=1);
float t7267;
if(t7266){
t7267 = t7265;
} else {
t7267 = 1;
}
bool t7268 = (t7267>=0);
float t7269;
if(t7268){
t7269 = t7267;
} else {
t7269 = 0;
}
t7238 = t7269;
} else {
t7235 = 0;
t7236 = 0;
t7237 = 0;
t7238 = 0;
}
float t7270 = (1-t7219);
float t7271 = (t7216*t7270);
float t7272 = (t7219+t7271);
float t7273 = (1-t7272);
float t7274 = (t7238*t7273);
float t7275 = (t7235*t7274);
float t7276 = (t7223+t7275);
float t7277 = (t115*t7191);
float t7278 = pow(t7206,float(2.5));
float t7279 = (t7277/t7278);
float t7280 = (t7279*t7189);
float t7281 = (t7188+t7280);
float t7282 = (t7189*u1.u4);
float t7283 = (t7281*t7282);
float t7284 = (t7191+t7283);
float t7285 = (t115*t7197);
float t7286 = (t7285/t7278);
float t7287 = (t7286*t7189);
float t7288 = (t7195+t7287);
float t7289 = (t7288*t7282);
float t7290 = (t7197+t7289);
float t7291 = (t115*t7203);
float t7292 = (t7291/t7278);
float t7293 = (t7292*t7189);
float t7294 = (t7201+t7293);
float t7295 = (t7294*t7282);
float t7296 = (t7203+t7295);
vec3 t7297 = vec3(t7284,t7290,t7296);
float t7298 = length(t7297);
float t7299 = (t7298*t7298);
bool t7300 = (t7299<1);
vec3 t7301 = vec3(t7191,t7197,t7203);
float t7302 = length(t7301);
float t7303 = (t7302*t7302);
bool t7304 = (t7303>1);
bool t7305 = (t7300&&t7304);
float t7306;
float t7307;
float t7308;
float t7309;
if(t7305){
t7306 = 0;
t7307 = 0;
t7308 = 0;
t7309 = 1;
} else {
t7306 = 0;
t7307 = 0;
t7308 = 0;
t7309 = 0;
}
float t7310 = (1-t7272);
float t7311 = (t7238*t7310);
float t7312 = (t7272+t7311);
float t7313 = (1-t7312);
float t7314 = (t7309*t7313);
float t7315 = (t7306*t7314);
float t7316 = (t7276+t7315);
bool t7317 = (t7197>0);
bool t7318 = (t7290>0);
bool t7319 = (!t7318);
bool t7320 = (t7317&&t7319);
bool t7321 = (!t7317);
bool t7322 = (t7318&&t7321);
bool t7323 = (t7320||t7322);
bool t7324 = (t7299<196);
bool t7325 = (t7299>float(6.76));
bool t7326 = (t7324&&t7325);
bool t7327 = (t7323&&t7326);
float t7328;
float t7329;
float t7330;
float t7331;
if(t7327){
float t7332 = (t7290/t7288);
float t7333 = (-t7332);
float t7334 = (t7333*t7281);
float t7335 = (t7284+t7334);
float t7336 = atan(t7335,t7296);
float t7337 = (u1.u0/30);
float t7338 = (t7336+t7337);
float t7339 = (2*3.1415927);
float t7340 = (t7338+t7339);
float t7341 = mod(t7340,2);
float t7342 = (t7341*3.1415927);
float t7343 = (t7342/t7339);
float t7344 = (t7333*t7288);
float t7345 = (t7290+t7344);
float t7346 = (t7333*t7294);
float t7347 = (t7296+t7346);
vec3 t7348 = vec3(t7335,t7345,t7347);
float t7349 = length(t7348);
float t7350 = (t7349*t7349);
float t7351 = sqrt(t7350);
float t7352 = (t7351-float(2.6));
float t7353 = (t7352/float(11.4));
vec4 t7354 = texture(s4,vec2(t7343,t7353));
t7328 = t7354.x;
t7329 = t7354.y;
t7330 = t7354.z;
vec3 t7355 = vec3(t7354.x,t7354.y,t7354.z);
float t7356 = length(t7355);
float t7357 = (t7356*t7356);
float t7358 = (t7357/float(3.0));
bool t7359 = (t7358<=1);
float t7360;
if(t7359){
t7360 = t7358;
} else {
t7360 = 1;
}
bool t7361 = (t7360>=0);
float t7362;
if(t7361){
t7362 = t7360;
} else {
t7362 = 0;
}
t7331 = t7362;
} else {
t7328 = 0;
t7329 = 0;
t7330 = 0;
t7331 = 0;
}
float t7363 = (1-t7312);
float t7364 = (t7309*t7363);
float t7365 = (t7312+t7364);
float t7366 = (1-t7365);
float t7367 = (t7331*t7366);
float t7368 = (t7328*t7367);
float t7369 = (t7316+t7368);
float t7370 = (t115*t7284);
float t7371 = pow(t7299,float(2.5));
float t7372 = (t7370/t7371);
float t7373 = (t7372*t7282);
float t7374 = (t7281+t7373);
float t7375 = (t7282*u1.u4);
float t7376 = (t7374*t7375);
float t7377 = (t7284+t7376);
float t7378 = (t115*t7290);
float t7379 = (t7378/t7371);
float t7380 = (t7379*t7282);
float t7381 = (t7288+t7380);
float t7382 = (t7381*t7375);
float t7383 = (t7290+t7382);
float t7384 = (t115*t7296);
float t7385 = (t7384/t7371);
float t7386 = (t7385*t7282);
float t7387 = (t7294+t7386);
float t7388 = (t7387*t7375);
float t7389 = (t7296+t7388);
vec3 t7390 = vec3(t7377,t7383,t7389);
float t7391 = length(t7390);
float t7392 = (t7391*t7391);
bool t7393 = (t7392<1);
vec3 t7394 = vec3(t7284,t7290,t7296);
float t7395 = length(t7394);
float t7396 = (t7395*t7395);
bool t7397 = (t7396>1);
bool t7398 = (t7393&&t7397);
float t7399;
float t7400;
float t7401;
float t7402;
if(t7398){
t7399 = 0;
t7400 = 0;
t7401 = 0;
t7402 = 1;
} else {
t7399 = 0;
t7400 = 0;
t7401 = 0;
t7402 = 0;
}
float t7403 = (1-t7365);
float t7404 = (t7331*t7403);
float t7405 = (t7365+t7404);
float t7406 = (1-t7405);
float t7407 = (t7402*t7406);
float t7408 = (t7399*t7407);
float t7409 = (t7369+t7408);
bool t7410 = (t7290>0);
bool t7411 = (t7383>0);
bool t7412 = (!t7411);
bool t7413 = (t7410&&t7412);
bool t7414 = (!t7410);
bool t7415 = (t7411&&t7414);
bool t7416 = (t7413||t7415);
bool t7417 = (t7392<196);
bool t7418 = (t7392>float(6.76));
bool t7419 = (t7417&&t7418);
bool t7420 = (t7416&&t7419);
float t7421;
float t7422;
float t7423;
float t7424;
if(t7420){
float t7425 = (t7383/t7381);
float t7426 = (-t7425);
float t7427 = (t7426*t7374);
float t7428 = (t7377+t7427);
float t7429 = atan(t7428,t7389);
float t7430 = (u1.u0/30);
float t7431 = (t7429+t7430);
float t7432 = (2*3.1415927);
float t7433 = (t7431+t7432);
float t7434 = mod(t7433,2);
float t7435 = (t7434*3.1415927);
float t7436 = (t7435/t7432);
float t7437 = (t7426*t7381);
float t7438 = (t7383+t7437);
float t7439 = (t7426*t7387);
float t7440 = (t7389+t7439);
vec3 t7441 = vec3(t7428,t7438,t7440);
float t7442 = length(t7441);
float t7443 = (t7442*t7442);
float t7444 = sqrt(t7443);
float t7445 = (t7444-float(2.6));
float t7446 = (t7445/float(11.4));
vec4 t7447 = texture(s4,vec2(t7436,t7446));
t7421 = t7447.x;
t7422 = t7447.y;
t7423 = t7447.z;
vec3 t7448 = vec3(t7447.x,t7447.y,t7447.z);
float t7449 = length(t7448);
float t7450 = (t7449*t7449);
float t7451 = (t7450/float(3.0));
bool t7452 = (t7451<=1);
float t7453;
if(t7452){
t7453 = t7451;
} else {
t7453 = 1;
}
bool t7454 = (t7453>=0);
float t7455;
if(t7454){
t7455 = t7453;
} else {
t7455 = 0;
}
t7424 = t7455;
} else {
t7421 = 0;
t7422 = 0;
t7423 = 0;
t7424 = 0;
}
float t7456 = (1-t7405);
float t7457 = (t7402*t7456);
float t7458 = (t7405+t7457);
float t7459 = (1-t7458);
float t7460 = (t7424*t7459);
float t7461 = (t7421*t7460);
float t7462 = (t7409+t7461);
float t7463 = (t115*t7377);
float t7464 = pow(t7392,float(2.5));
float t7465 = (t7463/t7464);
float t7466 = (t7465*t7375);
float t7467 = (t7374+t7466);
float t7468 = (t7375*u1.u4);
float t7469 = (t7467*t7468);
float t7470 = (t7377+t7469);
float t7471 = (t115*t7383);
float t7472 = (t7471/t7464);
float t7473 = (t7472*t7375);
float t7474 = (t7381+t7473);
float t7475 = (t7474*t7468);
float t7476 = (t7383+t7475);
float t7477 = (t115*t7389);
float t7478 = (t7477/t7464);
float t7479 = (t7478*t7375);
float t7480 = (t7387+t7479);
float t7481 = (t7480*t7468);
float t7482 = (t7389+t7481);
vec3 t7483 = vec3(t7470,t7476,t7482);
float t7484 = length(t7483);
float t7485 = (t7484*t7484);
bool t7486 = (t7485<1);
vec3 t7487 = vec3(t7377,t7383,t7389);
float t7488 = length(t7487);
float t7489 = (t7488*t7488);
bool t7490 = (t7489>1);
bool t7491 = (t7486&&t7490);
float t7492;
float t7493;
float t7494;
float t7495;
if(t7491){
t7492 = 0;
t7493 = 0;
t7494 = 0;
t7495 = 1;
} else {
t7492 = 0;
t7493 = 0;
t7494 = 0;
t7495 = 0;
}
float t7496 = (1-t7458);
float t7497 = (t7424*t7496);
float t7498 = (t7458+t7497);
float t7499 = (1-t7498);
float t7500 = (t7495*t7499);
float t7501 = (t7492*t7500);
float t7502 = (t7462+t7501);
bool t7503 = (t7383>0);
bool t7504 = (t7476>0);
bool t7505 = (!t7504);
bool t7506 = (t7503&&t7505);
bool t7507 = (!t7503);
bool t7508 = (t7504&&t7507);
bool t7509 = (t7506||t7508);
bool t7510 = (t7485<196);
bool t7511 = (t7485>float(6.76));
bool t7512 = (t7510&&t7511);
bool t7513 = (t7509&&t7512);
float t7514;
float t7515;
float t7516;
float t7517;
if(t7513){
float t7518 = (t7476/t7474);
float t7519 = (-t7518);
float t7520 = (t7519*t7467);
float t7521 = (t7470+t7520);
float t7522 = atan(t7521,t7482);
float t7523 = (u1.u0/30);
float t7524 = (t7522+t7523);
float t7525 = (2*3.1415927);
float t7526 = (t7524+t7525);
float t7527 = mod(t7526,2);
float t7528 = (t7527*3.1415927);
float t7529 = (t7528/t7525);
float t7530 = (t7519*t7474);
float t7531 = (t7476+t7530);
float t7532 = (t7519*t7480);
float t7533 = (t7482+t7532);
vec3 t7534 = vec3(t7521,t7531,t7533);
float t7535 = length(t7534);
float t7536 = (t7535*t7535);
float t7537 = sqrt(t7536);
float t7538 = (t7537-float(2.6));
float t7539 = (t7538/float(11.4));
vec4 t7540 = texture(s4,vec2(t7529,t7539));
t7514 = t7540.x;
t7515 = t7540.y;
t7516 = t7540.z;
vec3 t7541 = vec3(t7540.x,t7540.y,t7540.z);
float t7542 = length(t7541);
float t7543 = (t7542*t7542);
float t7544 = (t7543/float(3.0));
bool t7545 = (t7544<=1);
float t7546;
if(t7545){
t7546 = t7544;
} else {
t7546 = 1;
}
bool t7547 = (t7546>=0);
float t7548;
if(t7547){
t7548 = t7546;
} else {
t7548 = 0;
}
t7517 = t7548;
} else {
t7514 = 0;
t7515 = 0;
t7516 = 0;
t7517 = 0;
}
float t7549 = (1-t7498);
float t7550 = (t7495*t7549);
float t7551 = (t7498+t7550);
float t7552 = (1-t7551);
float t7553 = (t7517*t7552);
float t7554 = (t7514*t7553);
float t7555 = (t7502+t7554);
float t7556 = (t115*t7470);
float t7557 = pow(t7485,float(2.5));
float t7558 = (t7556/t7557);
float t7559 = (t7558*t7468);
float t7560 = (t7467+t7559);
float t7561 = (t7468*u1.u4);
float t7562 = (t7560*t7561);
float t7563 = (t7470+t7562);
float t7564 = (t115*t7476);
float t7565 = (t7564/t7557);
float t7566 = (t7565*t7468);
float t7567 = (t7474+t7566);
float t7568 = (t7567*t7561);
float t7569 = (t7476+t7568);
float t7570 = (t115*t7482);
float t7571 = (t7570/t7557);
float t7572 = (t7571*t7468);
float t7573 = (t7480+t7572);
float t7574 = (t7573*t7561);
float t7575 = (t7482+t7574);
vec3 t7576 = vec3(t7563,t7569,t7575);
float t7577 = length(t7576);
float t7578 = (t7577*t7577);
bool t7579 = (t7578<1);
vec3 t7580 = vec3(t7470,t7476,t7482);
float t7581 = length(t7580);
float t7582 = (t7581*t7581);
bool t7583 = (t7582>1);
bool t7584 = (t7579&&t7583);
float t7585;
float t7586;
float t7587;
float t7588;
if(t7584){
t7585 = 0;
t7586 = 0;
t7587 = 0;
t7588 = 1;
} else {
t7585 = 0;
t7586 = 0;
t7587 = 0;
t7588 = 0;
}
float t7589 = (1-t7551);
float t7590 = (t7517*t7589);
float t7591 = (t7551+t7590);
float t7592 = (1-t7591);
float t7593 = (t7588*t7592);
float t7594 = (t7585*t7593);
float t7595 = (t7555+t7594);
bool t7596 = (t7476>0);
bool t7597 = (t7569>0);
bool t7598 = (!t7597);
bool t7599 = (t7596&&t7598);
bool t7600 = (!t7596);
bool t7601 = (t7597&&t7600);
bool t7602 = (t7599||t7601);
bool t7603 = (t7578<196);
bool t7604 = (t7578>float(6.76));
bool t7605 = (t7603&&t7604);
bool t7606 = (t7602&&t7605);
float t7607;
float t7608;
float t7609;
float t7610;
if(t7606){
float t7611 = (t7569/t7567);
float t7612 = (-t7611);
float t7613 = (t7612*t7560);
float t7614 = (t7563+t7613);
float t7615 = atan(t7614,t7575);
float t7616 = (u1.u0/30);
float t7617 = (t7615+t7616);
float t7618 = (2*3.1415927);
float t7619 = (t7617+t7618);
float t7620 = mod(t7619,2);
float t7621 = (t7620*3.1415927);
float t7622 = (t7621/t7618);
float t7623 = (t7612*t7567);
float t7624 = (t7569+t7623);
float t7625 = (t7612*t7573);
float t7626 = (t7575+t7625);
vec3 t7627 = vec3(t7614,t7624,t7626);
float t7628 = length(t7627);
float t7629 = (t7628*t7628);
float t7630 = sqrt(t7629);
float t7631 = (t7630-float(2.6));
float t7632 = (t7631/float(11.4));
vec4 t7633 = texture(s4,vec2(t7622,t7632));
t7607 = t7633.x;
t7608 = t7633.y;
t7609 = t7633.z;
vec3 t7634 = vec3(t7633.x,t7633.y,t7633.z);
float t7635 = length(t7634);
float t7636 = (t7635*t7635);
float t7637 = (t7636/float(3.0));
bool t7638 = (t7637<=1);
float t7639;
if(t7638){
t7639 = t7637;
} else {
t7639 = 1;
}
bool t7640 = (t7639>=0);
float t7641;
if(t7640){
t7641 = t7639;
} else {
t7641 = 0;
}
t7610 = t7641;
} else {
t7607 = 0;
t7608 = 0;
t7609 = 0;
t7610 = 0;
}
float t7642 = (1-t7591);
float t7643 = (t7588*t7642);
float t7644 = (t7591+t7643);
float t7645 = (1-t7644);
float t7646 = (t7610*t7645);
float t7647 = (t7607*t7646);
float t7648 = (t7595+t7647);
float t7649 = (t115*t7563);
float t7650 = pow(t7578,float(2.5));
float t7651 = (t7649/t7650);
float t7652 = (t7651*t7561);
float t7653 = (t7560+t7652);
float t7654 = (t7561*u1.u4);
float t7655 = (t7653*t7654);
float t7656 = (t7563+t7655);
float t7657 = (t115*t7569);
float t7658 = (t7657/t7650);
float t7659 = (t7658*t7561);
float t7660 = (t7567+t7659);
float t7661 = (t7660*t7654);
float t7662 = (t7569+t7661);
float t7663 = (t115*t7575);
float t7664 = (t7663/t7650);
float t7665 = (t7664*t7561);
float t7666 = (t7573+t7665);
float t7667 = (t7666*t7654);
float t7668 = (t7575+t7667);
vec3 t7669 = vec3(t7656,t7662,t7668);
float t7670 = length(t7669);
float t7671 = (t7670*t7670);
bool t7672 = (t7671<1);
vec3 t7673 = vec3(t7563,t7569,t7575);
float t7674 = length(t7673);
float t7675 = (t7674*t7674);
bool t7676 = (t7675>1);
bool t7677 = (t7672&&t7676);
float t7678;
float t7679;
float t7680;
float t7681;
if(t7677){
t7678 = 0;
t7679 = 0;
t7680 = 0;
t7681 = 1;
} else {
t7678 = 0;
t7679 = 0;
t7680 = 0;
t7681 = 0;
}
float t7682 = (1-t7644);
float t7683 = (t7610*t7682);
float t7684 = (t7644+t7683);
float t7685 = (1-t7684);
float t7686 = (t7681*t7685);
float t7687 = (t7678*t7686);
float t7688 = (t7648+t7687);
bool t7689 = (t7569>0);
bool t7690 = (t7662>0);
bool t7691 = (!t7690);
bool t7692 = (t7689&&t7691);
bool t7693 = (!t7689);
bool t7694 = (t7690&&t7693);
bool t7695 = (t7692||t7694);
bool t7696 = (t7671<196);
bool t7697 = (t7671>float(6.76));
bool t7698 = (t7696&&t7697);
bool t7699 = (t7695&&t7698);
float t7700;
float t7701;
float t7702;
float t7703;
if(t7699){
float t7704 = (t7662/t7660);
float t7705 = (-t7704);
float t7706 = (t7705*t7653);
float t7707 = (t7656+t7706);
float t7708 = atan(t7707,t7668);
float t7709 = (u1.u0/30);
float t7710 = (t7708+t7709);
float t7711 = (2*3.1415927);
float t7712 = (t7710+t7711);
float t7713 = mod(t7712,2);
float t7714 = (t7713*3.1415927);
float t7715 = (t7714/t7711);
float t7716 = (t7705*t7660);
float t7717 = (t7662+t7716);
float t7718 = (t7705*t7666);
float t7719 = (t7668+t7718);
vec3 t7720 = vec3(t7707,t7717,t7719);
float t7721 = length(t7720);
float t7722 = (t7721*t7721);
float t7723 = sqrt(t7722);
float t7724 = (t7723-float(2.6));
float t7725 = (t7724/float(11.4));
vec4 t7726 = texture(s4,vec2(t7715,t7725));
t7700 = t7726.x;
t7701 = t7726.y;
t7702 = t7726.z;
vec3 t7727 = vec3(t7726.x,t7726.y,t7726.z);
float t7728 = length(t7727);
float t7729 = (t7728*t7728);
float t7730 = (t7729/float(3.0));
bool t7731 = (t7730<=1);
float t7732;
if(t7731){
t7732 = t7730;
} else {
t7732 = 1;
}
bool t7733 = (t7732>=0);
float t7734;
if(t7733){
t7734 = t7732;
} else {
t7734 = 0;
}
t7703 = t7734;
} else {
t7700 = 0;
t7701 = 0;
t7702 = 0;
t7703 = 0;
}
float t7735 = (1-t7684);
float t7736 = (t7681*t7735);
float t7737 = (t7684+t7736);
float t7738 = (1-t7737);
float t7739 = (t7703*t7738);
float t7740 = (t7700*t7739);
float t7741 = (t7688+t7740);
float t7742 = (t115*t7656);
float t7743 = pow(t7671,float(2.5));
float t7744 = (t7742/t7743);
float t7745 = (t7744*t7654);
float t7746 = (t7653+t7745);
float t7747 = (t7654*u1.u4);
float t7748 = (t7746*t7747);
float t7749 = (t7656+t7748);
float t7750 = (t115*t7662);
float t7751 = (t7750/t7743);
float t7752 = (t7751*t7654);
float t7753 = (t7660+t7752);
float t7754 = (t7753*t7747);
float t7755 = (t7662+t7754);
float t7756 = (t115*t7668);
float t7757 = (t7756/t7743);
float t7758 = (t7757*t7654);
float t7759 = (t7666+t7758);
float t7760 = (t7759*t7747);
float t7761 = (t7668+t7760);
vec3 t7762 = vec3(t7749,t7755,t7761);
float t7763 = length(t7762);
float t7764 = (t7763*t7763);
bool t7765 = (t7764<1);
vec3 t7766 = vec3(t7656,t7662,t7668);
float t7767 = length(t7766);
float t7768 = (t7767*t7767);
bool t7769 = (t7768>1);
bool t7770 = (t7765&&t7769);
float t7771;
float t7772;
float t7773;
float t7774;
if(t7770){
t7771 = 0;
t7772 = 0;
t7773 = 0;
t7774 = 1;
} else {
t7771 = 0;
t7772 = 0;
t7773 = 0;
t7774 = 0;
}
float t7775 = (1-t7737);
float t7776 = (t7703*t7775);
float t7777 = (t7737+t7776);
float t7778 = (1-t7777);
float t7779 = (t7774*t7778);
float t7780 = (t7771*t7779);
float t7781 = (t7741+t7780);
bool t7782 = (t7662>0);
bool t7783 = (t7755>0);
bool t7784 = (!t7783);
bool t7785 = (t7782&&t7784);
bool t7786 = (!t7782);
bool t7787 = (t7783&&t7786);
bool t7788 = (t7785||t7787);
bool t7789 = (t7764<196);
bool t7790 = (t7764>float(6.76));
bool t7791 = (t7789&&t7790);
bool t7792 = (t7788&&t7791);
float t7793;
float t7794;
float t7795;
float t7796;
if(t7792){
float t7797 = (t7755/t7753);
float t7798 = (-t7797);
float t7799 = (t7798*t7746);
float t7800 = (t7749+t7799);
float t7801 = atan(t7800,t7761);
float t7802 = (u1.u0/30);
float t7803 = (t7801+t7802);
float t7804 = (2*3.1415927);
float t7805 = (t7803+t7804);
float t7806 = mod(t7805,2);
float t7807 = (t7806*3.1415927);
float t7808 = (t7807/t7804);
float t7809 = (t7798*t7753);
float t7810 = (t7755+t7809);
float t7811 = (t7798*t7759);
float t7812 = (t7761+t7811);
vec3 t7813 = vec3(t7800,t7810,t7812);
float t7814 = length(t7813);
float t7815 = (t7814*t7814);
float t7816 = sqrt(t7815);
float t7817 = (t7816-float(2.6));
float t7818 = (t7817/float(11.4));
vec4 t7819 = texture(s4,vec2(t7808,t7818));
t7793 = t7819.x;
t7794 = t7819.y;
t7795 = t7819.z;
vec3 t7820 = vec3(t7819.x,t7819.y,t7819.z);
float t7821 = length(t7820);
float t7822 = (t7821*t7821);
float t7823 = (t7822/float(3.0));
bool t7824 = (t7823<=1);
float t7825;
if(t7824){
t7825 = t7823;
} else {
t7825 = 1;
}
bool t7826 = (t7825>=0);
float t7827;
if(t7826){
t7827 = t7825;
} else {
t7827 = 0;
}
t7796 = t7827;
} else {
t7793 = 0;
t7794 = 0;
t7795 = 0;
t7796 = 0;
}
float t7828 = (1-t7777);
float t7829 = (t7774*t7828);
float t7830 = (t7777+t7829);
float t7831 = (1-t7830);
float t7832 = (t7796*t7831);
float t7833 = (t7793*t7832);
float t7834 = (t7781+t7833);
float t7835 = (t115*t7749);
float t7836 = pow(t7764,float(2.5));
float t7837 = (t7835/t7836);
float t7838 = (t7837*t7747);
float t7839 = (t7746+t7838);
float t7840 = (t7747*u1.u4);
float t7841 = (t7839*t7840);
float t7842 = (t7749+t7841);
float t7843 = (t115*t7755);
float t7844 = (t7843/t7836);
float t7845 = (t7844*t7747);
float t7846 = (t7753+t7845);
float t7847 = (t7846*t7840);
float t7848 = (t7755+t7847);
float t7849 = (t115*t7761);
float t7850 = (t7849/t7836);
float t7851 = (t7850*t7747);
float t7852 = (t7759+t7851);
float t7853 = (t7852*t7840);
float t7854 = (t7761+t7853);
vec3 t7855 = vec3(t7842,t7848,t7854);
float t7856 = length(t7855);
float t7857 = (t7856*t7856);
bool t7858 = (t7857<1);
vec3 t7859 = vec3(t7749,t7755,t7761);
float t7860 = length(t7859);
float t7861 = (t7860*t7860);
bool t7862 = (t7861>1);
bool t7863 = (t7858&&t7862);
float t7864;
float t7865;
float t7866;
float t7867;
if(t7863){
t7864 = 0;
t7865 = 0;
t7866 = 0;
t7867 = 1;
} else {
t7864 = 0;
t7865 = 0;
t7866 = 0;
t7867 = 0;
}
float t7868 = (1-t7830);
float t7869 = (t7796*t7868);
float t7870 = (t7830+t7869);
float t7871 = (1-t7870);
float t7872 = (t7867*t7871);
float t7873 = (t7864*t7872);
float t7874 = (t7834+t7873);
bool t7875 = (t7755>0);
bool t7876 = (t7848>0);
bool t7877 = (!t7876);
bool t7878 = (t7875&&t7877);
bool t7879 = (!t7875);
bool t7880 = (t7876&&t7879);
bool t7881 = (t7878||t7880);
bool t7882 = (t7857<196);
bool t7883 = (t7857>float(6.76));
bool t7884 = (t7882&&t7883);
bool t7885 = (t7881&&t7884);
float t7886;
float t7887;
float t7888;
float t7889;
if(t7885){
float t7890 = (t7848/t7846);
float t7891 = (-t7890);
float t7892 = (t7891*t7839);
float t7893 = (t7842+t7892);
float t7894 = atan(t7893,t7854);
float t7895 = (u1.u0/30);
float t7896 = (t7894+t7895);
float t7897 = (2*3.1415927);
float t7898 = (t7896+t7897);
float t7899 = mod(t7898,2);
float t7900 = (t7899*3.1415927);
float t7901 = (t7900/t7897);
float t7902 = (t7891*t7846);
float t7903 = (t7848+t7902);
float t7904 = (t7891*t7852);
float t7905 = (t7854+t7904);
vec3 t7906 = vec3(t7893,t7903,t7905);
float t7907 = length(t7906);
float t7908 = (t7907*t7907);
float t7909 = sqrt(t7908);
float t7910 = (t7909-float(2.6));
float t7911 = (t7910/float(11.4));
vec4 t7912 = texture(s4,vec2(t7901,t7911));
t7886 = t7912.x;
t7887 = t7912.y;
t7888 = t7912.z;
vec3 t7913 = vec3(t7912.x,t7912.y,t7912.z);
float t7914 = length(t7913);
float t7915 = (t7914*t7914);
float t7916 = (t7915/float(3.0));
bool t7917 = (t7916<=1);
float t7918;
if(t7917){
t7918 = t7916;
} else {
t7918 = 1;
}
bool t7919 = (t7918>=0);
float t7920;
if(t7919){
t7920 = t7918;
} else {
t7920 = 0;
}
t7889 = t7920;
} else {
t7886 = 0;
t7887 = 0;
t7888 = 0;
t7889 = 0;
}
float t7921 = (1-t7870);
float t7922 = (t7867*t7921);
float t7923 = (t7870+t7922);
float t7924 = (1-t7923);
float t7925 = (t7889*t7924);
float t7926 = (t7886*t7925);
float t7927 = (t7874+t7926);
float t7928 = (t115*t7842);
float t7929 = pow(t7857,float(2.5));
float t7930 = (t7928/t7929);
float t7931 = (t7930*t7840);
float t7932 = (t7839+t7931);
float t7933 = (t7840*u1.u4);
float t7934 = (t7932*t7933);
float t7935 = (t7842+t7934);
float t7936 = (t115*t7848);
float t7937 = (t7936/t7929);
float t7938 = (t7937*t7840);
float t7939 = (t7846+t7938);
float t7940 = (t7939*t7933);
float t7941 = (t7848+t7940);
float t7942 = (t115*t7854);
float t7943 = (t7942/t7929);
float t7944 = (t7943*t7840);
float t7945 = (t7852+t7944);
float t7946 = (t7945*t7933);
float t7947 = (t7854+t7946);
vec3 t7948 = vec3(t7935,t7941,t7947);
float t7949 = length(t7948);
float t7950 = (t7949*t7949);
bool t7951 = (t7950<1);
vec3 t7952 = vec3(t7842,t7848,t7854);
float t7953 = length(t7952);
float t7954 = (t7953*t7953);
bool t7955 = (t7954>1);
bool t7956 = (t7951&&t7955);
float t7957;
float t7958;
float t7959;
float t7960;
if(t7956){
t7957 = 0;
t7958 = 0;
t7959 = 0;
t7960 = 1;
} else {
t7957 = 0;
t7958 = 0;
t7959 = 0;
t7960 = 0;
}
float t7961 = (1-t7923);
float t7962 = (t7889*t7961);
float t7963 = (t7923+t7962);
float t7964 = (1-t7963);
float t7965 = (t7960*t7964);
float t7966 = (t7957*t7965);
float t7967 = (t7927+t7966);
bool t7968 = (t7848>0);
bool t7969 = (t7941>0);
bool t7970 = (!t7969);
bool t7971 = (t7968&&t7970);
bool t7972 = (!t7968);
bool t7973 = (t7969&&t7972);
bool t7974 = (t7971||t7973);
bool t7975 = (t7950<196);
bool t7976 = (t7950>float(6.76));
bool t7977 = (t7975&&t7976);
bool t7978 = (t7974&&t7977);
float t7979;
float t7980;
float t7981;
float t7982;
if(t7978){
float t7983 = (t7941/t7939);
float t7984 = (-t7983);
float t7985 = (t7984*t7932);
float t7986 = (t7935+t7985);
float t7987 = atan(t7986,t7947);
float t7988 = (u1.u0/30);
float t7989 = (t7987+t7988);
float t7990 = (2*3.1415927);
float t7991 = (t7989+t7990);
float t7992 = mod(t7991,2);
float t7993 = (t7992*3.1415927);
float t7994 = (t7993/t7990);
float t7995 = (t7984*t7939);
float t7996 = (t7941+t7995);
float t7997 = (t7984*t7945);
float t7998 = (t7947+t7997);
vec3 t7999 = vec3(t7986,t7996,t7998);
float t8000 = length(t7999);
float t8001 = (t8000*t8000);
float t8002 = sqrt(t8001);
float t8003 = (t8002-float(2.6));
float t8004 = (t8003/float(11.4));
vec4 t8005 = texture(s4,vec2(t7994,t8004));
t7979 = t8005.x;
t7980 = t8005.y;
t7981 = t8005.z;
vec3 t8006 = vec3(t8005.x,t8005.y,t8005.z);
float t8007 = length(t8006);
float t8008 = (t8007*t8007);
float t8009 = (t8008/float(3.0));
bool t8010 = (t8009<=1);
float t8011;
if(t8010){
t8011 = t8009;
} else {
t8011 = 1;
}
bool t8012 = (t8011>=0);
float t8013;
if(t8012){
t8013 = t8011;
} else {
t8013 = 0;
}
t7982 = t8013;
} else {
t7979 = 0;
t7980 = 0;
t7981 = 0;
t7982 = 0;
}
float t8014 = (1-t7963);
float t8015 = (t7960*t8014);
float t8016 = (t7963+t8015);
float t8017 = (1-t8016);
float t8018 = (t7982*t8017);
float t8019 = (t7979*t8018);
float t8020 = (t7967+t8019);
float t8021 = (t115*t7935);
float t8022 = pow(t7950,float(2.5));
float t8023 = (t8021/t8022);
float t8024 = (t8023*t7933);
float t8025 = (t7932+t8024);
float t8026 = (t7933*u1.u4);
float t8027 = (t8025*t8026);
float t8028 = (t7935+t8027);
float t8029 = (t115*t7941);
float t8030 = (t8029/t8022);
float t8031 = (t8030*t7933);
float t8032 = (t7939+t8031);
float t8033 = (t8032*t8026);
float t8034 = (t7941+t8033);
float t8035 = (t115*t7947);
float t8036 = (t8035/t8022);
float t8037 = (t8036*t7933);
float t8038 = (t7945+t8037);
float t8039 = (t8038*t8026);
float t8040 = (t7947+t8039);
vec3 t8041 = vec3(t8028,t8034,t8040);
float t8042 = length(t8041);
float t8043 = (t8042*t8042);
bool t8044 = (t8043<1);
vec3 t8045 = vec3(t7935,t7941,t7947);
float t8046 = length(t8045);
float t8047 = (t8046*t8046);
bool t8048 = (t8047>1);
bool t8049 = (t8044&&t8048);
float t8050;
float t8051;
float t8052;
float t8053;
if(t8049){
t8050 = 0;
t8051 = 0;
t8052 = 0;
t8053 = 1;
} else {
t8050 = 0;
t8051 = 0;
t8052 = 0;
t8053 = 0;
}
float t8054 = (1-t8016);
float t8055 = (t7982*t8054);
float t8056 = (t8016+t8055);
float t8057 = (1-t8056);
float t8058 = (t8053*t8057);
float t8059 = (t8050*t8058);
float t8060 = (t8020+t8059);
bool t8061 = (t7941>0);
bool t8062 = (t8034>0);
bool t8063 = (!t8062);
bool t8064 = (t8061&&t8063);
bool t8065 = (!t8061);
bool t8066 = (t8062&&t8065);
bool t8067 = (t8064||t8066);
bool t8068 = (t8043<196);
bool t8069 = (t8043>float(6.76));
bool t8070 = (t8068&&t8069);
bool t8071 = (t8067&&t8070);
float t8072;
float t8073;
float t8074;
float t8075;
if(t8071){
float t8076 = (t8034/t8032);
float t8077 = (-t8076);
float t8078 = (t8077*t8025);
float t8079 = (t8028+t8078);
float t8080 = atan(t8079,t8040);
float t8081 = (u1.u0/30);
float t8082 = (t8080+t8081);
float t8083 = (2*3.1415927);
float t8084 = (t8082+t8083);
float t8085 = mod(t8084,2);
float t8086 = (t8085*3.1415927);
float t8087 = (t8086/t8083);
float t8088 = (t8077*t8032);
float t8089 = (t8034+t8088);
float t8090 = (t8077*t8038);
float t8091 = (t8040+t8090);
vec3 t8092 = vec3(t8079,t8089,t8091);
float t8093 = length(t8092);
float t8094 = (t8093*t8093);
float t8095 = sqrt(t8094);
float t8096 = (t8095-float(2.6));
float t8097 = (t8096/float(11.4));
vec4 t8098 = texture(s4,vec2(t8087,t8097));
t8072 = t8098.x;
t8073 = t8098.y;
t8074 = t8098.z;
vec3 t8099 = vec3(t8098.x,t8098.y,t8098.z);
float t8100 = length(t8099);
float t8101 = (t8100*t8100);
float t8102 = (t8101/float(3.0));
bool t8103 = (t8102<=1);
float t8104;
if(t8103){
t8104 = t8102;
} else {
t8104 = 1;
}
bool t8105 = (t8104>=0);
float t8106;
if(t8105){
t8106 = t8104;
} else {
t8106 = 0;
}
t8075 = t8106;
} else {
t8072 = 0;
t8073 = 0;
t8074 = 0;
t8075 = 0;
}
float t8107 = (1-t8056);
float t8108 = (t8053*t8107);
float t8109 = (t8056+t8108);
float t8110 = (1-t8109);
float t8111 = (t8075*t8110);
float t8112 = (t8072*t8111);
float t8113 = (t8060+t8112);
float t8114 = (t115*t8028);
float t8115 = pow(t8043,float(2.5));
float t8116 = (t8114/t8115);
float t8117 = (t8116*t8026);
float t8118 = (t8025+t8117);
float t8119 = (t8026*u1.u4);
float t8120 = (t8118*t8119);
float t8121 = (t8028+t8120);
float t8122 = (t115*t8034);
float t8123 = (t8122/t8115);
float t8124 = (t8123*t8026);
float t8125 = (t8032+t8124);
float t8126 = (t8125*t8119);
float t8127 = (t8034+t8126);
float t8128 = (t115*t8040);
float t8129 = (t8128/t8115);
float t8130 = (t8129*t8026);
float t8131 = (t8038+t8130);
float t8132 = (t8131*t8119);
float t8133 = (t8040+t8132);
vec3 t8134 = vec3(t8121,t8127,t8133);
float t8135 = length(t8134);
float t8136 = (t8135*t8135);
bool t8137 = (t8136<1);
vec3 t8138 = vec3(t8028,t8034,t8040);
float t8139 = length(t8138);
float t8140 = (t8139*t8139);
bool t8141 = (t8140>1);
bool t8142 = (t8137&&t8141);
float t8143;
float t8144;
float t8145;
float t8146;
if(t8142){
t8143 = 0;
t8144 = 0;
t8145 = 0;
t8146 = 1;
} else {
t8143 = 0;
t8144 = 0;
t8145 = 0;
t8146 = 0;
}
float t8147 = (1-t8109);
float t8148 = (t8075*t8147);
float t8149 = (t8109+t8148);
float t8150 = (1-t8149);
float t8151 = (t8146*t8150);
float t8152 = (t8143*t8151);
float t8153 = (t8113+t8152);
bool t8154 = (t8034>0);
bool t8155 = (t8127>0);
bool t8156 = (!t8155);
bool t8157 = (t8154&&t8156);
bool t8158 = (!t8154);
bool t8159 = (t8155&&t8158);
bool t8160 = (t8157||t8159);
bool t8161 = (t8136<196);
bool t8162 = (t8136>float(6.76));
bool t8163 = (t8161&&t8162);
bool t8164 = (t8160&&t8163);
float t8165;
float t8166;
float t8167;
float t8168;
if(t8164){
float t8169 = (t8127/t8125);
float t8170 = (-t8169);
float t8171 = (t8170*t8118);
float t8172 = (t8121+t8171);
float t8173 = atan(t8172,t8133);
float t8174 = (u1.u0/30);
float t8175 = (t8173+t8174);
float t8176 = (2*3.1415927);
float t8177 = (t8175+t8176);
float t8178 = mod(t8177,2);
float t8179 = (t8178*3.1415927);
float t8180 = (t8179/t8176);
float t8181 = (t8170*t8125);
float t8182 = (t8127+t8181);
float t8183 = (t8170*t8131);
float t8184 = (t8133+t8183);
vec3 t8185 = vec3(t8172,t8182,t8184);
float t8186 = length(t8185);
float t8187 = (t8186*t8186);
float t8188 = sqrt(t8187);
float t8189 = (t8188-float(2.6));
float t8190 = (t8189/float(11.4));
vec4 t8191 = texture(s4,vec2(t8180,t8190));
t8165 = t8191.x;
t8166 = t8191.y;
t8167 = t8191.z;
vec3 t8192 = vec3(t8191.x,t8191.y,t8191.z);
float t8193 = length(t8192);
float t8194 = (t8193*t8193);
float t8195 = (t8194/float(3.0));
bool t8196 = (t8195<=1);
float t8197;
if(t8196){
t8197 = t8195;
} else {
t8197 = 1;
}
bool t8198 = (t8197>=0);
float t8199;
if(t8198){
t8199 = t8197;
} else {
t8199 = 0;
}
t8168 = t8199;
} else {
t8165 = 0;
t8166 = 0;
t8167 = 0;
t8168 = 0;
}
float t8200 = (1-t8149);
float t8201 = (t8146*t8200);
float t8202 = (t8149+t8201);
float t8203 = (1-t8202);
float t8204 = (t8168*t8203);
float t8205 = (t8165*t8204);
float t8206 = (t8153+t8205);
float t8207 = (t115*t8121);
float t8208 = pow(t8136,float(2.5));
float t8209 = (t8207/t8208);
float t8210 = (t8209*t8119);
float t8211 = (t8118+t8210);
float t8212 = (t8119*u1.u4);
float t8213 = (t8211*t8212);
float t8214 = (t8121+t8213);
float t8215 = (t115*t8127);
float t8216 = (t8215/t8208);
float t8217 = (t8216*t8119);
float t8218 = (t8125+t8217);
float t8219 = (t8218*t8212);
float t8220 = (t8127+t8219);
float t8221 = (t115*t8133);
float t8222 = (t8221/t8208);
float t8223 = (t8222*t8119);
float t8224 = (t8131+t8223);
float t8225 = (t8224*t8212);
float t8226 = (t8133+t8225);
vec3 t8227 = vec3(t8214,t8220,t8226);
float t8228 = length(t8227);
float t8229 = (t8228*t8228);
bool t8230 = (t8229<1);
vec3 t8231 = vec3(t8121,t8127,t8133);
float t8232 = length(t8231);
float t8233 = (t8232*t8232);
bool t8234 = (t8233>1);
bool t8235 = (t8230&&t8234);
float t8236;
float t8237;
float t8238;
float t8239;
if(t8235){
t8236 = 0;
t8237 = 0;
t8238 = 0;
t8239 = 1;
} else {
t8236 = 0;
t8237 = 0;
t8238 = 0;
t8239 = 0;
}
float t8240 = (1-t8202);
float t8241 = (t8168*t8240);
float t8242 = (t8202+t8241);
float t8243 = (1-t8242);
float t8244 = (t8239*t8243);
float t8245 = (t8236*t8244);
float t8246 = (t8206+t8245);
bool t8247 = (t8127>0);
bool t8248 = (t8220>0);
bool t8249 = (!t8248);
bool t8250 = (t8247&&t8249);
bool t8251 = (!t8247);
bool t8252 = (t8248&&t8251);
bool t8253 = (t8250||t8252);
bool t8254 = (t8229<196);
bool t8255 = (t8229>float(6.76));
bool t8256 = (t8254&&t8255);
bool t8257 = (t8253&&t8256);
float t8258;
float t8259;
float t8260;
float t8261;
if(t8257){
float t8262 = (t8220/t8218);
float t8263 = (-t8262);
float t8264 = (t8263*t8211);
float t8265 = (t8214+t8264);
float t8266 = atan(t8265,t8226);
float t8267 = (u1.u0/30);
float t8268 = (t8266+t8267);
float t8269 = (2*3.1415927);
float t8270 = (t8268+t8269);
float t8271 = mod(t8270,2);
float t8272 = (t8271*3.1415927);
float t8273 = (t8272/t8269);
float t8274 = (t8263*t8218);
float t8275 = (t8220+t8274);
float t8276 = (t8263*t8224);
float t8277 = (t8226+t8276);
vec3 t8278 = vec3(t8265,t8275,t8277);
float t8279 = length(t8278);
float t8280 = (t8279*t8279);
float t8281 = sqrt(t8280);
float t8282 = (t8281-float(2.6));
float t8283 = (t8282/float(11.4));
vec4 t8284 = texture(s4,vec2(t8273,t8283));
t8258 = t8284.x;
t8259 = t8284.y;
t8260 = t8284.z;
vec3 t8285 = vec3(t8284.x,t8284.y,t8284.z);
float t8286 = length(t8285);
float t8287 = (t8286*t8286);
float t8288 = (t8287/float(3.0));
bool t8289 = (t8288<=1);
float t8290;
if(t8289){
t8290 = t8288;
} else {
t8290 = 1;
}
bool t8291 = (t8290>=0);
float t8292;
if(t8291){
t8292 = t8290;
} else {
t8292 = 0;
}
t8261 = t8292;
} else {
t8258 = 0;
t8259 = 0;
t8260 = 0;
t8261 = 0;
}
float t8293 = (1-t8242);
float t8294 = (t8239*t8293);
float t8295 = (t8242+t8294);
float t8296 = (1-t8295);
float t8297 = (t8261*t8296);
float t8298 = (t8258*t8297);
float t8299 = (t8246+t8298);
float t8300 = (t115*t8214);
float t8301 = pow(t8229,float(2.5));
float t8302 = (t8300/t8301);
float t8303 = (t8302*t8212);
float t8304 = (t8211+t8303);
float t8305 = (t8212*u1.u4);
float t8306 = (t8304*t8305);
float t8307 = (t8214+t8306);
float t8308 = (t115*t8220);
float t8309 = (t8308/t8301);
float t8310 = (t8309*t8212);
float t8311 = (t8218+t8310);
float t8312 = (t8311*t8305);
float t8313 = (t8220+t8312);
float t8314 = (t115*t8226);
float t8315 = (t8314/t8301);
float t8316 = (t8315*t8212);
float t8317 = (t8224+t8316);
float t8318 = (t8317*t8305);
float t8319 = (t8226+t8318);
vec3 t8320 = vec3(t8307,t8313,t8319);
float t8321 = length(t8320);
float t8322 = (t8321*t8321);
bool t8323 = (t8322<1);
vec3 t8324 = vec3(t8214,t8220,t8226);
float t8325 = length(t8324);
float t8326 = (t8325*t8325);
bool t8327 = (t8326>1);
bool t8328 = (t8323&&t8327);
float t8329;
float t8330;
float t8331;
float t8332;
if(t8328){
t8329 = 0;
t8330 = 0;
t8331 = 0;
t8332 = 1;
} else {
t8329 = 0;
t8330 = 0;
t8331 = 0;
t8332 = 0;
}
float t8333 = (1-t8295);
float t8334 = (t8261*t8333);
float t8335 = (t8295+t8334);
float t8336 = (1-t8335);
float t8337 = (t8332*t8336);
float t8338 = (t8329*t8337);
float t8339 = (t8299+t8338);
bool t8340 = (t8220>0);
bool t8341 = (t8313>0);
bool t8342 = (!t8341);
bool t8343 = (t8340&&t8342);
bool t8344 = (!t8340);
bool t8345 = (t8341&&t8344);
bool t8346 = (t8343||t8345);
bool t8347 = (t8322<196);
bool t8348 = (t8322>float(6.76));
bool t8349 = (t8347&&t8348);
bool t8350 = (t8346&&t8349);
float t8351;
float t8352;
float t8353;
float t8354;
if(t8350){
float t8355 = (t8313/t8311);
float t8356 = (-t8355);
float t8357 = (t8356*t8304);
float t8358 = (t8307+t8357);
float t8359 = atan(t8358,t8319);
float t8360 = (u1.u0/30);
float t8361 = (t8359+t8360);
float t8362 = (2*3.1415927);
float t8363 = (t8361+t8362);
float t8364 = mod(t8363,2);
float t8365 = (t8364*3.1415927);
float t8366 = (t8365/t8362);
float t8367 = (t8356*t8311);
float t8368 = (t8313+t8367);
float t8369 = (t8356*t8317);
float t8370 = (t8319+t8369);
vec3 t8371 = vec3(t8358,t8368,t8370);
float t8372 = length(t8371);
float t8373 = (t8372*t8372);
float t8374 = sqrt(t8373);
float t8375 = (t8374-float(2.6));
float t8376 = (t8375/float(11.4));
vec4 t8377 = texture(s4,vec2(t8366,t8376));
t8351 = t8377.x;
t8352 = t8377.y;
t8353 = t8377.z;
vec3 t8378 = vec3(t8377.x,t8377.y,t8377.z);
float t8379 = length(t8378);
float t8380 = (t8379*t8379);
float t8381 = (t8380/float(3.0));
bool t8382 = (t8381<=1);
float t8383;
if(t8382){
t8383 = t8381;
} else {
t8383 = 1;
}
bool t8384 = (t8383>=0);
float t8385;
if(t8384){
t8385 = t8383;
} else {
t8385 = 0;
}
t8354 = t8385;
} else {
t8351 = 0;
t8352 = 0;
t8353 = 0;
t8354 = 0;
}
float t8386 = (1-t8335);
float t8387 = (t8332*t8386);
float t8388 = (t8335+t8387);
float t8389 = (1-t8388);
float t8390 = (t8354*t8389);
float t8391 = (t8351*t8390);
float t8392 = (t8339+t8391);
float t8393 = (t115*t8307);
float t8394 = pow(t8322,float(2.5));
float t8395 = (t8393/t8394);
float t8396 = (t8395*t8305);
float t8397 = (t8304+t8396);
float t8398 = (t8305*u1.u4);
float t8399 = (t8397*t8398);
float t8400 = (t8307+t8399);
float t8401 = (t115*t8313);
float t8402 = (t8401/t8394);
float t8403 = (t8402*t8305);
float t8404 = (t8311+t8403);
float t8405 = (t8404*t8398);
float t8406 = (t8313+t8405);
float t8407 = (t115*t8319);
float t8408 = (t8407/t8394);
float t8409 = (t8408*t8305);
float t8410 = (t8317+t8409);
float t8411 = (t8410*t8398);
float t8412 = (t8319+t8411);
vec3 t8413 = vec3(t8400,t8406,t8412);
float t8414 = length(t8413);
float t8415 = (t8414*t8414);
bool t8416 = (t8415<1);
vec3 t8417 = vec3(t8307,t8313,t8319);
float t8418 = length(t8417);
float t8419 = (t8418*t8418);
bool t8420 = (t8419>1);
bool t8421 = (t8416&&t8420);
float t8422;
float t8423;
float t8424;
float t8425;
if(t8421){
t8422 = 0;
t8423 = 0;
t8424 = 0;
t8425 = 1;
} else {
t8422 = 0;
t8423 = 0;
t8424 = 0;
t8425 = 0;
}
float t8426 = (1-t8388);
float t8427 = (t8354*t8426);
float t8428 = (t8388+t8427);
float t8429 = (1-t8428);
float t8430 = (t8425*t8429);
float t8431 = (t8422*t8430);
float t8432 = (t8392+t8431);
bool t8433 = (t8313>0);
bool t8434 = (t8406>0);
bool t8435 = (!t8434);
bool t8436 = (t8433&&t8435);
bool t8437 = (!t8433);
bool t8438 = (t8434&&t8437);
bool t8439 = (t8436||t8438);
bool t8440 = (t8415<196);
bool t8441 = (t8415>float(6.76));
bool t8442 = (t8440&&t8441);
bool t8443 = (t8439&&t8442);
float t8444;
float t8445;
float t8446;
float t8447;
if(t8443){
float t8448 = (t8406/t8404);
float t8449 = (-t8448);
float t8450 = (t8449*t8397);
float t8451 = (t8400+t8450);
float t8452 = atan(t8451,t8412);
float t8453 = (u1.u0/30);
float t8454 = (t8452+t8453);
float t8455 = (2*3.1415927);
float t8456 = (t8454+t8455);
float t8457 = mod(t8456,2);
float t8458 = (t8457*3.1415927);
float t8459 = (t8458/t8455);
float t8460 = (t8449*t8404);
float t8461 = (t8406+t8460);
float t8462 = (t8449*t8410);
float t8463 = (t8412+t8462);
vec3 t8464 = vec3(t8451,t8461,t8463);
float t8465 = length(t8464);
float t8466 = (t8465*t8465);
float t8467 = sqrt(t8466);
float t8468 = (t8467-float(2.6));
float t8469 = (t8468/float(11.4));
vec4 t8470 = texture(s4,vec2(t8459,t8469));
t8444 = t8470.x;
t8445 = t8470.y;
t8446 = t8470.z;
vec3 t8471 = vec3(t8470.x,t8470.y,t8470.z);
float t8472 = length(t8471);
float t8473 = (t8472*t8472);
float t8474 = (t8473/float(3.0));
bool t8475 = (t8474<=1);
float t8476;
if(t8475){
t8476 = t8474;
} else {
t8476 = 1;
}
bool t8477 = (t8476>=0);
float t8478;
if(t8477){
t8478 = t8476;
} else {
t8478 = 0;
}
t8447 = t8478;
} else {
t8444 = 0;
t8445 = 0;
t8446 = 0;
t8447 = 0;
}
float t8479 = (1-t8428);
float t8480 = (t8425*t8479);
float t8481 = (t8428+t8480);
float t8482 = (1-t8481);
float t8483 = (t8447*t8482);
float t8484 = (t8444*t8483);
float t8485 = (t8432+t8484);
float t8486 = (t115*t8400);
float t8487 = pow(t8415,float(2.5));
float t8488 = (t8486/t8487);
float t8489 = (t8488*t8398);
float t8490 = (t8397+t8489);
float t8491 = (t8398*u1.u4);
float t8492 = (t8490*t8491);
float t8493 = (t8400+t8492);
float t8494 = (t115*t8406);
float t8495 = (t8494/t8487);
float t8496 = (t8495*t8398);
float t8497 = (t8404+t8496);
float t8498 = (t8497*t8491);
float t8499 = (t8406+t8498);
float t8500 = (t115*t8412);
float t8501 = (t8500/t8487);
float t8502 = (t8501*t8398);
float t8503 = (t8410+t8502);
float t8504 = (t8503*t8491);
float t8505 = (t8412+t8504);
vec3 t8506 = vec3(t8493,t8499,t8505);
float t8507 = length(t8506);
float t8508 = (t8507*t8507);
bool t8509 = (t8508<1);
vec3 t8510 = vec3(t8400,t8406,t8412);
float t8511 = length(t8510);
float t8512 = (t8511*t8511);
bool t8513 = (t8512>1);
bool t8514 = (t8509&&t8513);
float t8515;
float t8516;
float t8517;
float t8518;
if(t8514){
t8515 = 0;
t8516 = 0;
t8517 = 0;
t8518 = 1;
} else {
t8515 = 0;
t8516 = 0;
t8517 = 0;
t8518 = 0;
}
float t8519 = (1-t8481);
float t8520 = (t8447*t8519);
float t8521 = (t8481+t8520);
float t8522 = (1-t8521);
float t8523 = (t8518*t8522);
float t8524 = (t8515*t8523);
float t8525 = (t8485+t8524);
bool t8526 = (t8406>0);
bool t8527 = (t8499>0);
bool t8528 = (!t8527);
bool t8529 = (t8526&&t8528);
bool t8530 = (!t8526);
bool t8531 = (t8527&&t8530);
bool t8532 = (t8529||t8531);
bool t8533 = (t8508<196);
bool t8534 = (t8508>float(6.76));
bool t8535 = (t8533&&t8534);
bool t8536 = (t8532&&t8535);
float t8537;
float t8538;
float t8539;
float t8540;
if(t8536){
float t8541 = (t8499/t8497);
float t8542 = (-t8541);
float t8543 = (t8542*t8490);
float t8544 = (t8493+t8543);
float t8545 = atan(t8544,t8505);
float t8546 = (u1.u0/30);
float t8547 = (t8545+t8546);
float t8548 = (2*3.1415927);
float t8549 = (t8547+t8548);
float t8550 = mod(t8549,2);
float t8551 = (t8550*3.1415927);
float t8552 = (t8551/t8548);
float t8553 = (t8542*t8497);
float t8554 = (t8499+t8553);
float t8555 = (t8542*t8503);
float t8556 = (t8505+t8555);
vec3 t8557 = vec3(t8544,t8554,t8556);
float t8558 = length(t8557);
float t8559 = (t8558*t8558);
float t8560 = sqrt(t8559);
float t8561 = (t8560-float(2.6));
float t8562 = (t8561/float(11.4));
vec4 t8563 = texture(s4,vec2(t8552,t8562));
t8537 = t8563.x;
t8538 = t8563.y;
t8539 = t8563.z;
vec3 t8564 = vec3(t8563.x,t8563.y,t8563.z);
float t8565 = length(t8564);
float t8566 = (t8565*t8565);
float t8567 = (t8566/float(3.0));
bool t8568 = (t8567<=1);
float t8569;
if(t8568){
t8569 = t8567;
} else {
t8569 = 1;
}
bool t8570 = (t8569>=0);
float t8571;
if(t8570){
t8571 = t8569;
} else {
t8571 = 0;
}
t8540 = t8571;
} else {
t8537 = 0;
t8538 = 0;
t8539 = 0;
t8540 = 0;
}
float t8572 = (1-t8521);
float t8573 = (t8518*t8572);
float t8574 = (t8521+t8573);
float t8575 = (1-t8574);
float t8576 = (t8540*t8575);
float t8577 = (t8537*t8576);
float t8578 = (t8525+t8577);
float t8579 = (t115*t8493);
float t8580 = pow(t8508,float(2.5));
float t8581 = (t8579/t8580);
float t8582 = (t8581*t8491);
float t8583 = (t8490+t8582);
float t8584 = (t8491*u1.u4);
float t8585 = (t8583*t8584);
float t8586 = (t8493+t8585);
float t8587 = (t115*t8499);
float t8588 = (t8587/t8580);
float t8589 = (t8588*t8491);
float t8590 = (t8497+t8589);
float t8591 = (t8590*t8584);
float t8592 = (t8499+t8591);
float t8593 = (t115*t8505);
float t8594 = (t8593/t8580);
float t8595 = (t8594*t8491);
float t8596 = (t8503+t8595);
float t8597 = (t8596*t8584);
float t8598 = (t8505+t8597);
vec3 t8599 = vec3(t8586,t8592,t8598);
float t8600 = length(t8599);
float t8601 = (t8600*t8600);
bool t8602 = (t8601<1);
vec3 t8603 = vec3(t8493,t8499,t8505);
float t8604 = length(t8603);
float t8605 = (t8604*t8604);
bool t8606 = (t8605>1);
bool t8607 = (t8602&&t8606);
float t8608;
float t8609;
float t8610;
float t8611;
if(t8607){
t8608 = 0;
t8609 = 0;
t8610 = 0;
t8611 = 1;
} else {
t8608 = 0;
t8609 = 0;
t8610 = 0;
t8611 = 0;
}
float t8612 = (1-t8574);
float t8613 = (t8540*t8612);
float t8614 = (t8574+t8613);
float t8615 = (1-t8614);
float t8616 = (t8611*t8615);
float t8617 = (t8608*t8616);
float t8618 = (t8578+t8617);
bool t8619 = (t8499>0);
bool t8620 = (t8592>0);
bool t8621 = (!t8620);
bool t8622 = (t8619&&t8621);
bool t8623 = (!t8619);
bool t8624 = (t8620&&t8623);
bool t8625 = (t8622||t8624);
bool t8626 = (t8601<196);
bool t8627 = (t8601>float(6.76));
bool t8628 = (t8626&&t8627);
bool t8629 = (t8625&&t8628);
float t8630;
float t8631;
float t8632;
float t8633;
if(t8629){
float t8634 = (t8592/t8590);
float t8635 = (-t8634);
float t8636 = (t8635*t8583);
float t8637 = (t8586+t8636);
float t8638 = atan(t8637,t8598);
float t8639 = (u1.u0/30);
float t8640 = (t8638+t8639);
float t8641 = (2*3.1415927);
float t8642 = (t8640+t8641);
float t8643 = mod(t8642,2);
float t8644 = (t8643*3.1415927);
float t8645 = (t8644/t8641);
float t8646 = (t8635*t8590);
float t8647 = (t8592+t8646);
float t8648 = (t8635*t8596);
float t8649 = (t8598+t8648);
vec3 t8650 = vec3(t8637,t8647,t8649);
float t8651 = length(t8650);
float t8652 = (t8651*t8651);
float t8653 = sqrt(t8652);
float t8654 = (t8653-float(2.6));
float t8655 = (t8654/float(11.4));
vec4 t8656 = texture(s4,vec2(t8645,t8655));
t8630 = t8656.x;
t8631 = t8656.y;
t8632 = t8656.z;
vec3 t8657 = vec3(t8656.x,t8656.y,t8656.z);
float t8658 = length(t8657);
float t8659 = (t8658*t8658);
float t8660 = (t8659/float(3.0));
bool t8661 = (t8660<=1);
float t8662;
if(t8661){
t8662 = t8660;
} else {
t8662 = 1;
}
bool t8663 = (t8662>=0);
float t8664;
if(t8663){
t8664 = t8662;
} else {
t8664 = 0;
}
t8633 = t8664;
} else {
t8630 = 0;
t8631 = 0;
t8632 = 0;
t8633 = 0;
}
float t8665 = (1-t8614);
float t8666 = (t8611*t8665);
float t8667 = (t8614+t8666);
float t8668 = (1-t8667);
float t8669 = (t8633*t8668);
float t8670 = (t8630*t8669);
float t8671 = (t8618+t8670);
float t8672 = (t115*t8586);
float t8673 = pow(t8601,float(2.5));
float t8674 = (t8672/t8673);
float t8675 = (t8674*t8584);
float t8676 = (t8583+t8675);
float t8677 = (t8584*u1.u4);
float t8678 = (t8676*t8677);
float t8679 = (t8586+t8678);
float t8680 = (t115*t8592);
float t8681 = (t8680/t8673);
float t8682 = (t8681*t8584);
float t8683 = (t8590+t8682);
float t8684 = (t8683*t8677);
float t8685 = (t8592+t8684);
float t8686 = (t115*t8598);
float t8687 = (t8686/t8673);
float t8688 = (t8687*t8584);
float t8689 = (t8596+t8688);
float t8690 = (t8689*t8677);
float t8691 = (t8598+t8690);
vec3 t8692 = vec3(t8679,t8685,t8691);
float t8693 = length(t8692);
float t8694 = (t8693*t8693);
bool t8695 = (t8694<1);
vec3 t8696 = vec3(t8586,t8592,t8598);
float t8697 = length(t8696);
float t8698 = (t8697*t8697);
bool t8699 = (t8698>1);
bool t8700 = (t8695&&t8699);
float t8701;
float t8702;
float t8703;
float t8704;
if(t8700){
t8701 = 0;
t8702 = 0;
t8703 = 0;
t8704 = 1;
} else {
t8701 = 0;
t8702 = 0;
t8703 = 0;
t8704 = 0;
}
float t8705 = (1-t8667);
float t8706 = (t8633*t8705);
float t8707 = (t8667+t8706);
float t8708 = (1-t8707);
float t8709 = (t8704*t8708);
float t8710 = (t8701*t8709);
float t8711 = (t8671+t8710);
bool t8712 = (t8592>0);
bool t8713 = (t8685>0);
bool t8714 = (!t8713);
bool t8715 = (t8712&&t8714);
bool t8716 = (!t8712);
bool t8717 = (t8713&&t8716);
bool t8718 = (t8715||t8717);
bool t8719 = (t8694<196);
bool t8720 = (t8694>float(6.76));
bool t8721 = (t8719&&t8720);
bool t8722 = (t8718&&t8721);
float t8723;
float t8724;
float t8725;
float t8726;
if(t8722){
float t8727 = (t8685/t8683);
float t8728 = (-t8727);
float t8729 = (t8728*t8676);
float t8730 = (t8679+t8729);
float t8731 = atan(t8730,t8691);
float t8732 = (u1.u0/30);
float t8733 = (t8731+t8732);
float t8734 = (2*3.1415927);
float t8735 = (t8733+t8734);
float t8736 = mod(t8735,2);
float t8737 = (t8736*3.1415927);
float t8738 = (t8737/t8734);
float t8739 = (t8728*t8683);
float t8740 = (t8685+t8739);
float t8741 = (t8728*t8689);
float t8742 = (t8691+t8741);
vec3 t8743 = vec3(t8730,t8740,t8742);
float t8744 = length(t8743);
float t8745 = (t8744*t8744);
float t8746 = sqrt(t8745);
float t8747 = (t8746-float(2.6));
float t8748 = (t8747/float(11.4));
vec4 t8749 = texture(s4,vec2(t8738,t8748));
t8723 = t8749.x;
t8724 = t8749.y;
t8725 = t8749.z;
vec3 t8750 = vec3(t8749.x,t8749.y,t8749.z);
float t8751 = length(t8750);
float t8752 = (t8751*t8751);
float t8753 = (t8752/float(3.0));
bool t8754 = (t8753<=1);
float t8755;
if(t8754){
t8755 = t8753;
} else {
t8755 = 1;
}
bool t8756 = (t8755>=0);
float t8757;
if(t8756){
t8757 = t8755;
} else {
t8757 = 0;
}
t8726 = t8757;
} else {
t8723 = 0;
t8724 = 0;
t8725 = 0;
t8726 = 0;
}
float t8758 = (1-t8707);
float t8759 = (t8704*t8758);
float t8760 = (t8707+t8759);
float t8761 = (1-t8760);
float t8762 = (t8726*t8761);
float t8763 = (t8723*t8762);
float t8764 = (t8711+t8763);
float t8765 = (t115*t8679);
float t8766 = pow(t8694,float(2.5));
float t8767 = (t8765/t8766);
float t8768 = (t8767*t8677);
float t8769 = (t8676+t8768);
float t8770 = (t8677*u1.u4);
float t8771 = (t8769*t8770);
float t8772 = (t8679+t8771);
float t8773 = (t115*t8685);
float t8774 = (t8773/t8766);
float t8775 = (t8774*t8677);
float t8776 = (t8683+t8775);
float t8777 = (t8776*t8770);
float t8778 = (t8685+t8777);
float t8779 = (t115*t8691);
float t8780 = (t8779/t8766);
float t8781 = (t8780*t8677);
float t8782 = (t8689+t8781);
float t8783 = (t8782*t8770);
float t8784 = (t8691+t8783);
vec3 t8785 = vec3(t8772,t8778,t8784);
float t8786 = length(t8785);
float t8787 = (t8786*t8786);
bool t8788 = (t8787<1);
vec3 t8789 = vec3(t8679,t8685,t8691);
float t8790 = length(t8789);
float t8791 = (t8790*t8790);
bool t8792 = (t8791>1);
bool t8793 = (t8788&&t8792);
float t8794;
float t8795;
float t8796;
float t8797;
if(t8793){
t8794 = 0;
t8795 = 0;
t8796 = 0;
t8797 = 1;
} else {
t8794 = 0;
t8795 = 0;
t8796 = 0;
t8797 = 0;
}
float t8798 = (1-t8760);
float t8799 = (t8726*t8798);
float t8800 = (t8760+t8799);
float t8801 = (1-t8800);
float t8802 = (t8797*t8801);
float t8803 = (t8794*t8802);
float t8804 = (t8764+t8803);
bool t8805 = (t8685>0);
bool t8806 = (t8778>0);
bool t8807 = (!t8806);
bool t8808 = (t8805&&t8807);
bool t8809 = (!t8805);
bool t8810 = (t8806&&t8809);
bool t8811 = (t8808||t8810);
bool t8812 = (t8787<196);
bool t8813 = (t8787>float(6.76));
bool t8814 = (t8812&&t8813);
bool t8815 = (t8811&&t8814);
float t8816;
float t8817;
float t8818;
float t8819;
if(t8815){
float t8820 = (t8778/t8776);
float t8821 = (-t8820);
float t8822 = (t8821*t8769);
float t8823 = (t8772+t8822);
float t8824 = atan(t8823,t8784);
float t8825 = (u1.u0/30);
float t8826 = (t8824+t8825);
float t8827 = (2*3.1415927);
float t8828 = (t8826+t8827);
float t8829 = mod(t8828,2);
float t8830 = (t8829*3.1415927);
float t8831 = (t8830/t8827);
float t8832 = (t8821*t8776);
float t8833 = (t8778+t8832);
float t8834 = (t8821*t8782);
float t8835 = (t8784+t8834);
vec3 t8836 = vec3(t8823,t8833,t8835);
float t8837 = length(t8836);
float t8838 = (t8837*t8837);
float t8839 = sqrt(t8838);
float t8840 = (t8839-float(2.6));
float t8841 = (t8840/float(11.4));
vec4 t8842 = texture(s4,vec2(t8831,t8841));
t8816 = t8842.x;
t8817 = t8842.y;
t8818 = t8842.z;
vec3 t8843 = vec3(t8842.x,t8842.y,t8842.z);
float t8844 = length(t8843);
float t8845 = (t8844*t8844);
float t8846 = (t8845/float(3.0));
bool t8847 = (t8846<=1);
float t8848;
if(t8847){
t8848 = t8846;
} else {
t8848 = 1;
}
bool t8849 = (t8848>=0);
float t8850;
if(t8849){
t8850 = t8848;
} else {
t8850 = 0;
}
t8819 = t8850;
} else {
t8816 = 0;
t8817 = 0;
t8818 = 0;
t8819 = 0;
}
float t8851 = (1-t8800);
float t8852 = (t8797*t8851);
float t8853 = (t8800+t8852);
float t8854 = (1-t8853);
float t8855 = (t8819*t8854);
float t8856 = (t8816*t8855);
float t8857 = (t8804+t8856);
float t8858 = (t115*t8772);
float t8859 = pow(t8787,float(2.5));
float t8860 = (t8858/t8859);
float t8861 = (t8860*t8770);
float t8862 = (t8769+t8861);
float t8863 = (t8770*u1.u4);
float t8864 = (t8862*t8863);
float t8865 = (t8772+t8864);
float t8866 = (t115*t8778);
float t8867 = (t8866/t8859);
float t8868 = (t8867*t8770);
float t8869 = (t8776+t8868);
float t8870 = (t8869*t8863);
float t8871 = (t8778+t8870);
float t8872 = (t115*t8784);
float t8873 = (t8872/t8859);
float t8874 = (t8873*t8770);
float t8875 = (t8782+t8874);
float t8876 = (t8875*t8863);
float t8877 = (t8784+t8876);
vec3 t8878 = vec3(t8865,t8871,t8877);
float t8879 = length(t8878);
float t8880 = (t8879*t8879);
bool t8881 = (t8880<1);
vec3 t8882 = vec3(t8772,t8778,t8784);
float t8883 = length(t8882);
float t8884 = (t8883*t8883);
bool t8885 = (t8884>1);
bool t8886 = (t8881&&t8885);
float t8887;
float t8888;
float t8889;
float t8890;
if(t8886){
t8887 = 0;
t8888 = 0;
t8889 = 0;
t8890 = 1;
} else {
t8887 = 0;
t8888 = 0;
t8889 = 0;
t8890 = 0;
}
float t8891 = (1-t8853);
float t8892 = (t8819*t8891);
float t8893 = (t8853+t8892);
float t8894 = (1-t8893);
float t8895 = (t8890*t8894);
float t8896 = (t8887*t8895);
float t8897 = (t8857+t8896);
bool t8898 = (t8778>0);
bool t8899 = (t8871>0);
bool t8900 = (!t8899);
bool t8901 = (t8898&&t8900);
bool t8902 = (!t8898);
bool t8903 = (t8899&&t8902);
bool t8904 = (t8901||t8903);
bool t8905 = (t8880<196);
bool t8906 = (t8880>float(6.76));
bool t8907 = (t8905&&t8906);
bool t8908 = (t8904&&t8907);
float t8909;
float t8910;
float t8911;
float t8912;
if(t8908){
float t8913 = (t8871/t8869);
float t8914 = (-t8913);
float t8915 = (t8914*t8862);
float t8916 = (t8865+t8915);
float t8917 = atan(t8916,t8877);
float t8918 = (u1.u0/30);
float t8919 = (t8917+t8918);
float t8920 = (2*3.1415927);
float t8921 = (t8919+t8920);
float t8922 = mod(t8921,2);
float t8923 = (t8922*3.1415927);
float t8924 = (t8923/t8920);
float t8925 = (t8914*t8869);
float t8926 = (t8871+t8925);
float t8927 = (t8914*t8875);
float t8928 = (t8877+t8927);
vec3 t8929 = vec3(t8916,t8926,t8928);
float t8930 = length(t8929);
float t8931 = (t8930*t8930);
float t8932 = sqrt(t8931);
float t8933 = (t8932-float(2.6));
float t8934 = (t8933/float(11.4));
vec4 t8935 = texture(s4,vec2(t8924,t8934));
t8909 = t8935.x;
t8910 = t8935.y;
t8911 = t8935.z;
vec3 t8936 = vec3(t8935.x,t8935.y,t8935.z);
float t8937 = length(t8936);
float t8938 = (t8937*t8937);
float t8939 = (t8938/float(3.0));
bool t8940 = (t8939<=1);
float t8941;
if(t8940){
t8941 = t8939;
} else {
t8941 = 1;
}
bool t8942 = (t8941>=0);
float t8943;
if(t8942){
t8943 = t8941;
} else {
t8943 = 0;
}
t8912 = t8943;
} else {
t8909 = 0;
t8910 = 0;
t8911 = 0;
t8912 = 0;
}
float t8944 = (1-t8893);
float t8945 = (t8890*t8944);
float t8946 = (t8893+t8945);
float t8947 = (1-t8946);
float t8948 = (t8912*t8947);
float t8949 = (t8909*t8948);
float t8950 = (t8897+t8949);
float t8951 = (t115*t8865);
float t8952 = pow(t8880,float(2.5));
float t8953 = (t8951/t8952);
float t8954 = (t8953*t8863);
float t8955 = (t8862+t8954);
float t8956 = (t8863*u1.u4);
float t8957 = (t8955*t8956);
float t8958 = (t8865+t8957);
float t8959 = (t115*t8871);
float t8960 = (t8959/t8952);
float t8961 = (t8960*t8863);
float t8962 = (t8869+t8961);
float t8963 = (t8962*t8956);
float t8964 = (t8871+t8963);
float t8965 = (t115*t8877);
float t8966 = (t8965/t8952);
float t8967 = (t8966*t8863);
float t8968 = (t8875+t8967);
float t8969 = (t8968*t8956);
float t8970 = (t8877+t8969);
vec3 t8971 = vec3(t8958,t8964,t8970);
float t8972 = length(t8971);
float t8973 = (t8972*t8972);
bool t8974 = (t8973<1);
vec3 t8975 = vec3(t8865,t8871,t8877);
float t8976 = length(t8975);
float t8977 = (t8976*t8976);
bool t8978 = (t8977>1);
bool t8979 = (t8974&&t8978);
float t8980;
float t8981;
float t8982;
float t8983;
if(t8979){
t8980 = 0;
t8981 = 0;
t8982 = 0;
t8983 = 1;
} else {
t8980 = 0;
t8981 = 0;
t8982 = 0;
t8983 = 0;
}
float t8984 = (1-t8946);
float t8985 = (t8912*t8984);
float t8986 = (t8946+t8985);
float t8987 = (1-t8986);
float t8988 = (t8983*t8987);
float t8989 = (t8980*t8988);
float t8990 = (t8950+t8989);
bool t8991 = (t8871>0);
bool t8992 = (t8964>0);
bool t8993 = (!t8992);
bool t8994 = (t8991&&t8993);
bool t8995 = (!t8991);
bool t8996 = (t8992&&t8995);
bool t8997 = (t8994||t8996);
bool t8998 = (t8973<196);
bool t8999 = (t8973>float(6.76));
bool t9000 = (t8998&&t8999);
bool t9001 = (t8997&&t9000);
float t9002;
float t9003;
float t9004;
float t9005;
if(t9001){
float t9006 = (t8964/t8962);
float t9007 = (-t9006);
float t9008 = (t9007*t8955);
float t9009 = (t8958+t9008);
float t9010 = atan(t9009,t8970);
float t9011 = (u1.u0/30);
float t9012 = (t9010+t9011);
float t9013 = (2*3.1415927);
float t9014 = (t9012+t9013);
float t9015 = mod(t9014,2);
float t9016 = (t9015*3.1415927);
float t9017 = (t9016/t9013);
float t9018 = (t9007*t8962);
float t9019 = (t8964+t9018);
float t9020 = (t9007*t8968);
float t9021 = (t8970+t9020);
vec3 t9022 = vec3(t9009,t9019,t9021);
float t9023 = length(t9022);
float t9024 = (t9023*t9023);
float t9025 = sqrt(t9024);
float t9026 = (t9025-float(2.6));
float t9027 = (t9026/float(11.4));
vec4 t9028 = texture(s4,vec2(t9017,t9027));
t9002 = t9028.x;
t9003 = t9028.y;
t9004 = t9028.z;
vec3 t9029 = vec3(t9028.x,t9028.y,t9028.z);
float t9030 = length(t9029);
float t9031 = (t9030*t9030);
float t9032 = (t9031/float(3.0));
bool t9033 = (t9032<=1);
float t9034;
if(t9033){
t9034 = t9032;
} else {
t9034 = 1;
}
bool t9035 = (t9034>=0);
float t9036;
if(t9035){
t9036 = t9034;
} else {
t9036 = 0;
}
t9005 = t9036;
} else {
t9002 = 0;
t9003 = 0;
t9004 = 0;
t9005 = 0;
}
float t9037 = (1-t8986);
float t9038 = (t8983*t9037);
float t9039 = (t8986+t9038);
float t9040 = (1-t9039);
float t9041 = (t9005*t9040);
float t9042 = (t9002*t9041);
float t9043 = (t8990+t9042);
float t9044 = (t115*t8958);
float t9045 = pow(t8973,float(2.5));
float t9046 = (t9044/t9045);
float t9047 = (t9046*t8956);
float t9048 = (t8955+t9047);
float t9049 = (t8956*u1.u4);
float t9050 = (t9048*t9049);
float t9051 = (t8958+t9050);
float t9052 = (t115*t8964);
float t9053 = (t9052/t9045);
float t9054 = (t9053*t8956);
float t9055 = (t8962+t9054);
float t9056 = (t9055*t9049);
float t9057 = (t8964+t9056);
float t9058 = (t115*t8970);
float t9059 = (t9058/t9045);
float t9060 = (t9059*t8956);
float t9061 = (t8968+t9060);
float t9062 = (t9061*t9049);
float t9063 = (t8970+t9062);
vec3 t9064 = vec3(t9051,t9057,t9063);
float t9065 = length(t9064);
float t9066 = (t9065*t9065);
bool t9067 = (t9066<1);
vec3 t9068 = vec3(t8958,t8964,t8970);
float t9069 = length(t9068);
float t9070 = (t9069*t9069);
bool t9071 = (t9070>1);
bool t9072 = (t9067&&t9071);
float t9073;
float t9074;
float t9075;
float t9076;
if(t9072){
t9073 = 0;
t9074 = 0;
t9075 = 0;
t9076 = 1;
} else {
t9073 = 0;
t9074 = 0;
t9075 = 0;
t9076 = 0;
}
float t9077 = (1-t9039);
float t9078 = (t9005*t9077);
float t9079 = (t9039+t9078);
float t9080 = (1-t9079);
float t9081 = (t9076*t9080);
float t9082 = (t9073*t9081);
float t9083 = (t9043+t9082);
bool t9084 = (t8964>0);
bool t9085 = (t9057>0);
bool t9086 = (!t9085);
bool t9087 = (t9084&&t9086);
bool t9088 = (!t9084);
bool t9089 = (t9085&&t9088);
bool t9090 = (t9087||t9089);
bool t9091 = (t9066<196);
bool t9092 = (t9066>float(6.76));
bool t9093 = (t9091&&t9092);
bool t9094 = (t9090&&t9093);
float t9095;
float t9096;
float t9097;
float t9098;
if(t9094){
float t9099 = (t9057/t9055);
float t9100 = (-t9099);
float t9101 = (t9100*t9048);
float t9102 = (t9051+t9101);
float t9103 = atan(t9102,t9063);
float t9104 = (u1.u0/30);
float t9105 = (t9103+t9104);
float t9106 = (2*3.1415927);
float t9107 = (t9105+t9106);
float t9108 = mod(t9107,2);
float t9109 = (t9108*3.1415927);
float t9110 = (t9109/t9106);
float t9111 = (t9100*t9055);
float t9112 = (t9057+t9111);
float t9113 = (t9100*t9061);
float t9114 = (t9063+t9113);
vec3 t9115 = vec3(t9102,t9112,t9114);
float t9116 = length(t9115);
float t9117 = (t9116*t9116);
float t9118 = sqrt(t9117);
float t9119 = (t9118-float(2.6));
float t9120 = (t9119/float(11.4));
vec4 t9121 = texture(s4,vec2(t9110,t9120));
t9095 = t9121.x;
t9096 = t9121.y;
t9097 = t9121.z;
vec3 t9122 = vec3(t9121.x,t9121.y,t9121.z);
float t9123 = length(t9122);
float t9124 = (t9123*t9123);
float t9125 = (t9124/float(3.0));
bool t9126 = (t9125<=1);
float t9127;
if(t9126){
t9127 = t9125;
} else {
t9127 = 1;
}
bool t9128 = (t9127>=0);
float t9129;
if(t9128){
t9129 = t9127;
} else {
t9129 = 0;
}
t9098 = t9129;
} else {
t9095 = 0;
t9096 = 0;
t9097 = 0;
t9098 = 0;
}
float t9130 = (1-t9079);
float t9131 = (t9076*t9130);
float t9132 = (t9079+t9131);
float t9133 = (1-t9132);
float t9134 = (t9098*t9133);
float t9135 = (t9095*t9134);
float t9136 = (t9083+t9135);
float t9137 = (t115*t9051);
float t9138 = pow(t9066,float(2.5));
float t9139 = (t9137/t9138);
float t9140 = (t9139*t9049);
float t9141 = (t9048+t9140);
float t9142 = (t9049*u1.u4);
float t9143 = (t9141*t9142);
float t9144 = (t9051+t9143);
float t9145 = (t115*t9057);
float t9146 = (t9145/t9138);
float t9147 = (t9146*t9049);
float t9148 = (t9055+t9147);
float t9149 = (t9148*t9142);
float t9150 = (t9057+t9149);
float t9151 = (t115*t9063);
float t9152 = (t9151/t9138);
float t9153 = (t9152*t9049);
float t9154 = (t9061+t9153);
float t9155 = (t9154*t9142);
float t9156 = (t9063+t9155);
vec3 t9157 = vec3(t9144,t9150,t9156);
float t9158 = length(t9157);
float t9159 = (t9158*t9158);
bool t9160 = (t9159<1);
vec3 t9161 = vec3(t9051,t9057,t9063);
float t9162 = length(t9161);
float t9163 = (t9162*t9162);
bool t9164 = (t9163>1);
bool t9165 = (t9160&&t9164);
float t9166;
float t9167;
float t9168;
float t9169;
if(t9165){
t9166 = 0;
t9167 = 0;
t9168 = 0;
t9169 = 1;
} else {
t9166 = 0;
t9167 = 0;
t9168 = 0;
t9169 = 0;
}
float t9170 = (1-t9132);
float t9171 = (t9098*t9170);
float t9172 = (t9132+t9171);
float t9173 = (1-t9172);
float t9174 = (t9169*t9173);
float t9175 = (t9166*t9174);
float t9176 = (t9136+t9175);
bool t9177 = (t9057>0);
bool t9178 = (t9150>0);
bool t9179 = (!t9178);
bool t9180 = (t9177&&t9179);
bool t9181 = (!t9177);
bool t9182 = (t9178&&t9181);
bool t9183 = (t9180||t9182);
bool t9184 = (t9159<196);
bool t9185 = (t9159>float(6.76));
bool t9186 = (t9184&&t9185);
bool t9187 = (t9183&&t9186);
float t9188;
float t9189;
float t9190;
float t9191;
if(t9187){
float t9192 = (t9150/t9148);
float t9193 = (-t9192);
float t9194 = (t9193*t9141);
float t9195 = (t9144+t9194);
float t9196 = atan(t9195,t9156);
float t9197 = (u1.u0/30);
float t9198 = (t9196+t9197);
float t9199 = (2*3.1415927);
float t9200 = (t9198+t9199);
float t9201 = mod(t9200,2);
float t9202 = (t9201*3.1415927);
float t9203 = (t9202/t9199);
float t9204 = (t9193*t9148);
float t9205 = (t9150+t9204);
float t9206 = (t9193*t9154);
float t9207 = (t9156+t9206);
vec3 t9208 = vec3(t9195,t9205,t9207);
float t9209 = length(t9208);
float t9210 = (t9209*t9209);
float t9211 = sqrt(t9210);
float t9212 = (t9211-float(2.6));
float t9213 = (t9212/float(11.4));
vec4 t9214 = texture(s4,vec2(t9203,t9213));
t9188 = t9214.x;
t9189 = t9214.y;
t9190 = t9214.z;
vec3 t9215 = vec3(t9214.x,t9214.y,t9214.z);
float t9216 = length(t9215);
float t9217 = (t9216*t9216);
float t9218 = (t9217/float(3.0));
bool t9219 = (t9218<=1);
float t9220;
if(t9219){
t9220 = t9218;
} else {
t9220 = 1;
}
bool t9221 = (t9220>=0);
float t9222;
if(t9221){
t9222 = t9220;
} else {
t9222 = 0;
}
t9191 = t9222;
} else {
t9188 = 0;
t9189 = 0;
t9190 = 0;
t9191 = 0;
}
float t9223 = (1-t9172);
float t9224 = (t9169*t9223);
float t9225 = (t9172+t9224);
float t9226 = (1-t9225);
float t9227 = (t9191*t9226);
float t9228 = (t9188*t9227);
float t9229 = (t9176+t9228);
float t9230 = (t115*t9144);
float t9231 = pow(t9159,float(2.5));
float t9232 = (t9230/t9231);
float t9233 = (t9232*t9142);
float t9234 = (t9141+t9233);
float t9235 = (t9142*u1.u4);
float t9236 = (t9234*t9235);
float t9237 = (t9144+t9236);
float t9238 = (t115*t9150);
float t9239 = (t9238/t9231);
float t9240 = (t9239*t9142);
float t9241 = (t9148+t9240);
float t9242 = (t9241*t9235);
float t9243 = (t9150+t9242);
float t9244 = (t115*t9156);
float t9245 = (t9244/t9231);
float t9246 = (t9245*t9142);
float t9247 = (t9154+t9246);
float t9248 = (t9247*t9235);
float t9249 = (t9156+t9248);
vec3 t9250 = vec3(t9237,t9243,t9249);
float t9251 = length(t9250);
float t9252 = (t9251*t9251);
bool t9253 = (t9252<1);
vec3 t9254 = vec3(t9144,t9150,t9156);
float t9255 = length(t9254);
float t9256 = (t9255*t9255);
bool t9257 = (t9256>1);
bool t9258 = (t9253&&t9257);
float t9259;
float t9260;
float t9261;
float t9262;
if(t9258){
t9259 = 0;
t9260 = 0;
t9261 = 0;
t9262 = 1;
} else {
t9259 = 0;
t9260 = 0;
t9261 = 0;
t9262 = 0;
}
float t9263 = (1-t9225);
float t9264 = (t9191*t9263);
float t9265 = (t9225+t9264);
float t9266 = (1-t9265);
float t9267 = (t9262*t9266);
float t9268 = (t9259*t9267);
float t9269 = (t9229+t9268);
bool t9270 = (t9150>0);
bool t9271 = (t9243>0);
bool t9272 = (!t9271);
bool t9273 = (t9270&&t9272);
bool t9274 = (!t9270);
bool t9275 = (t9271&&t9274);
bool t9276 = (t9273||t9275);
bool t9277 = (t9252<196);
bool t9278 = (t9252>float(6.76));
bool t9279 = (t9277&&t9278);
bool t9280 = (t9276&&t9279);
float t9281;
float t9282;
float t9283;
float t9284;
if(t9280){
float t9285 = (t9243/t9241);
float t9286 = (-t9285);
float t9287 = (t9286*t9234);
float t9288 = (t9237+t9287);
float t9289 = atan(t9288,t9249);
float t9290 = (u1.u0/30);
float t9291 = (t9289+t9290);
float t9292 = (2*3.1415927);
float t9293 = (t9291+t9292);
float t9294 = mod(t9293,2);
float t9295 = (t9294*3.1415927);
float t9296 = (t9295/t9292);
float t9297 = (t9286*t9241);
float t9298 = (t9243+t9297);
float t9299 = (t9286*t9247);
float t9300 = (t9249+t9299);
vec3 t9301 = vec3(t9288,t9298,t9300);
float t9302 = length(t9301);
float t9303 = (t9302*t9302);
float t9304 = sqrt(t9303);
float t9305 = (t9304-float(2.6));
float t9306 = (t9305/float(11.4));
vec4 t9307 = texture(s4,vec2(t9296,t9306));
t9281 = t9307.x;
t9282 = t9307.y;
t9283 = t9307.z;
vec3 t9308 = vec3(t9307.x,t9307.y,t9307.z);
float t9309 = length(t9308);
float t9310 = (t9309*t9309);
float t9311 = (t9310/float(3.0));
bool t9312 = (t9311<=1);
float t9313;
if(t9312){
t9313 = t9311;
} else {
t9313 = 1;
}
bool t9314 = (t9313>=0);
float t9315;
if(t9314){
t9315 = t9313;
} else {
t9315 = 0;
}
t9284 = t9315;
} else {
t9281 = 0;
t9282 = 0;
t9283 = 0;
t9284 = 0;
}
float t9316 = (1-t9265);
float t9317 = (t9262*t9316);
float t9318 = (t9265+t9317);
float t9319 = (1-t9318);
float t9320 = (t9284*t9319);
float t9321 = (t9281*t9320);
float t9322 = (t9269+t9321);
float t9323 = (t115*t9237);
float t9324 = pow(t9252,float(2.5));
float t9325 = (t9323/t9324);
float t9326 = (t9325*t9235);
float t9327 = (t9234+t9326);
float t9328 = (t9235*u1.u4);
float t9329 = (t9327*t9328);
float t9330 = (t9237+t9329);
float t9331 = (t115*t9243);
float t9332 = (t9331/t9324);
float t9333 = (t9332*t9235);
float t9334 = (t9241+t9333);
float t9335 = (t9334*t9328);
float t9336 = (t9243+t9335);
float t9337 = (t115*t9249);
float t9338 = (t9337/t9324);
float t9339 = (t9338*t9235);
float t9340 = (t9247+t9339);
float t9341 = (t9340*t9328);
float t9342 = (t9249+t9341);
vec3 t9343 = vec3(t9330,t9336,t9342);
float t9344 = length(t9343);
float t9345 = (t9344*t9344);
bool t9346 = (t9345<1);
vec3 t9347 = vec3(t9237,t9243,t9249);
float t9348 = length(t9347);
float t9349 = (t9348*t9348);
bool t9350 = (t9349>1);
bool t9351 = (t9346&&t9350);
float t9352;
float t9353;
float t9354;
float t9355;
if(t9351){
t9352 = 0;
t9353 = 0;
t9354 = 0;
t9355 = 1;
} else {
t9352 = 0;
t9353 = 0;
t9354 = 0;
t9355 = 0;
}
float t9356 = (1-t9318);
float t9357 = (t9284*t9356);
float t9358 = (t9318+t9357);
float t9359 = (1-t9358);
float t9360 = (t9355*t9359);
float t9361 = (t9352*t9360);
float t9362 = (t9322+t9361);
bool t9363 = (t9243>0);
bool t9364 = (t9336>0);
bool t9365 = (!t9364);
bool t9366 = (t9363&&t9365);
bool t9367 = (!t9363);
bool t9368 = (t9364&&t9367);
bool t9369 = (t9366||t9368);
bool t9370 = (t9345<196);
bool t9371 = (t9345>float(6.76));
bool t9372 = (t9370&&t9371);
bool t9373 = (t9369&&t9372);
float t9374;
float t9375;
float t9376;
float t9377;
if(t9373){
float t9378 = (t9336/t9334);
float t9379 = (-t9378);
float t9380 = (t9379*t9327);
float t9381 = (t9330+t9380);
float t9382 = atan(t9381,t9342);
float t9383 = (u1.u0/30);
float t9384 = (t9382+t9383);
float t9385 = (2*3.1415927);
float t9386 = (t9384+t9385);
float t9387 = mod(t9386,2);
float t9388 = (t9387*3.1415927);
float t9389 = (t9388/t9385);
float t9390 = (t9379*t9334);
float t9391 = (t9336+t9390);
float t9392 = (t9379*t9340);
float t9393 = (t9342+t9392);
vec3 t9394 = vec3(t9381,t9391,t9393);
float t9395 = length(t9394);
float t9396 = (t9395*t9395);
float t9397 = sqrt(t9396);
float t9398 = (t9397-float(2.6));
float t9399 = (t9398/float(11.4));
vec4 t9400 = texture(s4,vec2(t9389,t9399));
t9374 = t9400.x;
t9375 = t9400.y;
t9376 = t9400.z;
vec3 t9401 = vec3(t9400.x,t9400.y,t9400.z);
float t9402 = length(t9401);
float t9403 = (t9402*t9402);
float t9404 = (t9403/float(3.0));
bool t9405 = (t9404<=1);
float t9406;
if(t9405){
t9406 = t9404;
} else {
t9406 = 1;
}
bool t9407 = (t9406>=0);
float t9408;
if(t9407){
t9408 = t9406;
} else {
t9408 = 0;
}
t9377 = t9408;
} else {
t9374 = 0;
t9375 = 0;
t9376 = 0;
t9377 = 0;
}
float t9409 = (1-t9358);
float t9410 = (t9355*t9409);
float t9411 = (t9358+t9410);
float t9412 = (1-t9411);
float t9413 = (t9377*t9412);
float t9414 = (t9374*t9413);
float t9415 = (t9362+t9414);
float t9416 = (t115*t9330);
float t9417 = pow(t9345,float(2.5));
float t9418 = (t9416/t9417);
float t9419 = (t9418*t9328);
float t9420 = (t9327+t9419);
float t9421 = (t9328*u1.u4);
float t9422 = (t9420*t9421);
float t9423 = (t9330+t9422);
float t9424 = (t115*t9336);
float t9425 = (t9424/t9417);
float t9426 = (t9425*t9328);
float t9427 = (t9334+t9426);
float t9428 = (t9427*t9421);
float t9429 = (t9336+t9428);
float t9430 = (t115*t9342);
float t9431 = (t9430/t9417);
float t9432 = (t9431*t9328);
float t9433 = (t9340+t9432);
float t9434 = (t9433*t9421);
float t9435 = (t9342+t9434);
vec3 t9436 = vec3(t9423,t9429,t9435);
float t9437 = length(t9436);
float t9438 = (t9437*t9437);
bool t9439 = (t9438<1);
vec3 t9440 = vec3(t9330,t9336,t9342);
float t9441 = length(t9440);
float t9442 = (t9441*t9441);
bool t9443 = (t9442>1);
bool t9444 = (t9439&&t9443);
float t9445;
float t9446;
float t9447;
float t9448;
if(t9444){
t9445 = 0;
t9446 = 0;
t9447 = 0;
t9448 = 1;
} else {
t9445 = 0;
t9446 = 0;
t9447 = 0;
t9448 = 0;
}
float t9449 = (1-t9411);
float t9450 = (t9377*t9449);
float t9451 = (t9411+t9450);
float t9452 = (1-t9451);
float t9453 = (t9448*t9452);
float t9454 = (t9445*t9453);
float t9455 = (t9415+t9454);
bool t9456 = (t9336>0);
bool t9457 = (t9429>0);
bool t9458 = (!t9457);
bool t9459 = (t9456&&t9458);
bool t9460 = (!t9456);
bool t9461 = (t9457&&t9460);
bool t9462 = (t9459||t9461);
bool t9463 = (t9438<196);
bool t9464 = (t9438>float(6.76));
bool t9465 = (t9463&&t9464);
bool t9466 = (t9462&&t9465);
float t9467;
float t9468;
float t9469;
float t9470;
if(t9466){
float t9471 = (t9429/t9427);
float t9472 = (-t9471);
float t9473 = (t9472*t9420);
float t9474 = (t9423+t9473);
float t9475 = atan(t9474,t9435);
float t9476 = (u1.u0/30);
float t9477 = (t9475+t9476);
float t9478 = (2*3.1415927);
float t9479 = (t9477+t9478);
float t9480 = mod(t9479,2);
float t9481 = (t9480*3.1415927);
float t9482 = (t9481/t9478);
float t9483 = (t9472*t9427);
float t9484 = (t9429+t9483);
float t9485 = (t9472*t9433);
float t9486 = (t9435+t9485);
vec3 t9487 = vec3(t9474,t9484,t9486);
float t9488 = length(t9487);
float t9489 = (t9488*t9488);
float t9490 = sqrt(t9489);
float t9491 = (t9490-float(2.6));
float t9492 = (t9491/float(11.4));
vec4 t9493 = texture(s4,vec2(t9482,t9492));
t9467 = t9493.x;
t9468 = t9493.y;
t9469 = t9493.z;
vec3 t9494 = vec3(t9493.x,t9493.y,t9493.z);
float t9495 = length(t9494);
float t9496 = (t9495*t9495);
float t9497 = (t9496/float(3.0));
bool t9498 = (t9497<=1);
float t9499;
if(t9498){
t9499 = t9497;
} else {
t9499 = 1;
}
bool t9500 = (t9499>=0);
float t9501;
if(t9500){
t9501 = t9499;
} else {
t9501 = 0;
}
t9470 = t9501;
} else {
t9467 = 0;
t9468 = 0;
t9469 = 0;
t9470 = 0;
}
float t9502 = (1-t9451);
float t9503 = (t9448*t9502);
float t9504 = (t9451+t9503);
float t9505 = (1-t9504);
float t9506 = (t9470*t9505);
float t9507 = (t9467*t9506);
float t9508 = (t9455+t9507);
float t9509 = (t115*t9423);
float t9510 = pow(t9438,float(2.5));
float t9511 = (t9509/t9510);
float t9512 = (t9511*t9421);
float t9513 = (t9420+t9512);
float t9514 = (t9421*u1.u4);
float t9515 = (t9513*t9514);
float t9516 = (t9423+t9515);
float t9517 = (t115*t9429);
float t9518 = (t9517/t9510);
float t9519 = (t9518*t9421);
float t9520 = (t9427+t9519);
float t9521 = (t9520*t9514);
float t9522 = (t9429+t9521);
float t9523 = (t115*t9435);
float t9524 = (t9523/t9510);
float t9525 = (t9524*t9421);
float t9526 = (t9433+t9525);
float t9527 = (t9526*t9514);
float t9528 = (t9435+t9527);
vec3 t9529 = vec3(t9516,t9522,t9528);
float t9530 = length(t9529);
float t9531 = (t9530*t9530);
bool t9532 = (t9531<1);
vec3 t9533 = vec3(t9423,t9429,t9435);
float t9534 = length(t9533);
float t9535 = (t9534*t9534);
bool t9536 = (t9535>1);
bool t9537 = (t9532&&t9536);
float t9538;
float t9539;
float t9540;
float t9541;
if(t9537){
t9538 = 0;
t9539 = 0;
t9540 = 0;
t9541 = 1;
} else {
t9538 = 0;
t9539 = 0;
t9540 = 0;
t9541 = 0;
}
float t9542 = (1-t9504);
float t9543 = (t9470*t9542);
float t9544 = (t9504+t9543);
float t9545 = (1-t9544);
float t9546 = (t9541*t9545);
float t9547 = (t9538*t9546);
float t9548 = (t9508+t9547);
bool t9549 = (t9429>0);
bool t9550 = (t9522>0);
bool t9551 = (!t9550);
bool t9552 = (t9549&&t9551);
bool t9553 = (!t9549);
bool t9554 = (t9550&&t9553);
bool t9555 = (t9552||t9554);
bool t9556 = (t9531<196);
bool t9557 = (t9531>float(6.76));
bool t9558 = (t9556&&t9557);
bool t9559 = (t9555&&t9558);
float t9560;
float t9561;
float t9562;
float t9563;
if(t9559){
float t9564 = (t9522/t9520);
float t9565 = (-t9564);
float t9566 = (t9565*t9513);
float t9567 = (t9516+t9566);
float t9568 = atan(t9567,t9528);
float t9569 = (u1.u0/30);
float t9570 = (t9568+t9569);
float t9571 = (2*3.1415927);
float t9572 = (t9570+t9571);
float t9573 = mod(t9572,2);
float t9574 = (t9573*3.1415927);
float t9575 = (t9574/t9571);
float t9576 = (t9565*t9520);
float t9577 = (t9522+t9576);
float t9578 = (t9565*t9526);
float t9579 = (t9528+t9578);
vec3 t9580 = vec3(t9567,t9577,t9579);
float t9581 = length(t9580);
float t9582 = (t9581*t9581);
float t9583 = sqrt(t9582);
float t9584 = (t9583-float(2.6));
float t9585 = (t9584/float(11.4));
vec4 t9586 = texture(s4,vec2(t9575,t9585));
t9560 = t9586.x;
t9561 = t9586.y;
t9562 = t9586.z;
vec3 t9587 = vec3(t9586.x,t9586.y,t9586.z);
float t9588 = length(t9587);
float t9589 = (t9588*t9588);
float t9590 = (t9589/float(3.0));
bool t9591 = (t9590<=1);
float t9592;
if(t9591){
t9592 = t9590;
} else {
t9592 = 1;
}
bool t9593 = (t9592>=0);
float t9594;
if(t9593){
t9594 = t9592;
} else {
t9594 = 0;
}
t9563 = t9594;
} else {
t9560 = 0;
t9561 = 0;
t9562 = 0;
t9563 = 0;
}
float t9595 = (1-t9544);
float t9596 = (t9541*t9595);
float t9597 = (t9544+t9596);
float t9598 = (1-t9597);
float t9599 = (t9563*t9598);
float t9600 = (t9560*t9599);
float t9601 = (t9548+t9600);
float t9602 = (t115*t9516);
float t9603 = pow(t9531,float(2.5));
float t9604 = (t9602/t9603);
float t9605 = (t9604*t9514);
float t9606 = (t9513+t9605);
float t9607 = (t9514*u1.u4);
float t9608 = (t9606*t9607);
float t9609 = (t9516+t9608);
float t9610 = (t115*t9522);
float t9611 = (t9610/t9603);
float t9612 = (t9611*t9514);
float t9613 = (t9520+t9612);
float t9614 = (t9613*t9607);
float t9615 = (t9522+t9614);
float t9616 = (t115*t9528);
float t9617 = (t9616/t9603);
float t9618 = (t9617*t9514);
float t9619 = (t9526+t9618);
float t9620 = (t9619*t9607);
float t9621 = (t9528+t9620);
vec3 t9622 = vec3(t9609,t9615,t9621);
float t9623 = length(t9622);
float t9624 = (t9623*t9623);
bool t9625 = (t9624<1);
vec3 t9626 = vec3(t9516,t9522,t9528);
float t9627 = length(t9626);
float t9628 = (t9627*t9627);
bool t9629 = (t9628>1);
bool t9630 = (t9625&&t9629);
float t9631;
float t9632;
float t9633;
float t9634;
if(t9630){
t9631 = 0;
t9632 = 0;
t9633 = 0;
t9634 = 1;
} else {
t9631 = 0;
t9632 = 0;
t9633 = 0;
t9634 = 0;
}
float t9635 = (1-t9597);
float t9636 = (t9563*t9635);
float t9637 = (t9597+t9636);
float t9638 = (1-t9637);
float t9639 = (t9634*t9638);
float t9640 = (t9631*t9639);
float t9641 = (t9601+t9640);
bool t9642 = (t9522>0);
bool t9643 = (t9615>0);
bool t9644 = (!t9643);
bool t9645 = (t9642&&t9644);
bool t9646 = (!t9642);
bool t9647 = (t9643&&t9646);
bool t9648 = (t9645||t9647);
bool t9649 = (t9624<196);
bool t9650 = (t9624>float(6.76));
bool t9651 = (t9649&&t9650);
bool t9652 = (t9648&&t9651);
float t9653;
float t9654;
float t9655;
float t9656;
if(t9652){
float t9657 = (t9615/t9613);
float t9658 = (-t9657);
float t9659 = (t9658*t9606);
float t9660 = (t9609+t9659);
float t9661 = atan(t9660,t9621);
float t9662 = (u1.u0/30);
float t9663 = (t9661+t9662);
float t9664 = (2*3.1415927);
float t9665 = (t9663+t9664);
float t9666 = mod(t9665,2);
float t9667 = (t9666*3.1415927);
float t9668 = (t9667/t9664);
float t9669 = (t9658*t9613);
float t9670 = (t9615+t9669);
float t9671 = (t9658*t9619);
float t9672 = (t9621+t9671);
vec3 t9673 = vec3(t9660,t9670,t9672);
float t9674 = length(t9673);
float t9675 = (t9674*t9674);
float t9676 = sqrt(t9675);
float t9677 = (t9676-float(2.6));
float t9678 = (t9677/float(11.4));
vec4 t9679 = texture(s4,vec2(t9668,t9678));
t9653 = t9679.x;
t9654 = t9679.y;
t9655 = t9679.z;
vec3 t9680 = vec3(t9679.x,t9679.y,t9679.z);
float t9681 = length(t9680);
float t9682 = (t9681*t9681);
float t9683 = (t9682/float(3.0));
bool t9684 = (t9683<=1);
float t9685;
if(t9684){
t9685 = t9683;
} else {
t9685 = 1;
}
bool t9686 = (t9685>=0);
float t9687;
if(t9686){
t9687 = t9685;
} else {
t9687 = 0;
}
t9656 = t9687;
} else {
t9653 = 0;
t9654 = 0;
t9655 = 0;
t9656 = 0;
}
float t9688 = (1-t9637);
float t9689 = (t9634*t9688);
float t9690 = (t9637+t9689);
float t9691 = (1-t9690);
float t9692 = (t9656*t9691);
float t9693 = (t9653*t9692);
float t9694 = (t9641+t9693);
float t9695 = (t115*t9609);
float t9696 = pow(t9624,float(2.5));
float t9697 = (t9695/t9696);
float t9698 = (t9697*t9607);
float t9699 = (t9606+t9698);
float t9700 = (t9607*u1.u4);
float t9701 = (t9699*t9700);
float t9702 = (t9609+t9701);
float t9703 = (t115*t9615);
float t9704 = (t9703/t9696);
float t9705 = (t9704*t9607);
float t9706 = (t9613+t9705);
float t9707 = (t9706*t9700);
float t9708 = (t9615+t9707);
float t9709 = (t115*t9621);
float t9710 = (t9709/t9696);
float t9711 = (t9710*t9607);
float t9712 = (t9619+t9711);
float t9713 = (t9712*t9700);
float t9714 = (t9621+t9713);
vec3 t9715 = vec3(t9702,t9708,t9714);
float t9716 = length(t9715);
float t9717 = (t9716*t9716);
bool t9718 = (t9717<1);
vec3 t9719 = vec3(t9609,t9615,t9621);
float t9720 = length(t9719);
float t9721 = (t9720*t9720);
bool t9722 = (t9721>1);
bool t9723 = (t9718&&t9722);
float t9724;
float t9725;
float t9726;
float t9727;
if(t9723){
t9724 = 0;
t9725 = 0;
t9726 = 0;
t9727 = 1;
} else {
t9724 = 0;
t9725 = 0;
t9726 = 0;
t9727 = 0;
}
float t9728 = (1-t9690);
float t9729 = (t9656*t9728);
float t9730 = (t9690+t9729);
float t9731 = (1-t9730);
float t9732 = (t9727*t9731);
float t9733 = (t9724*t9732);
float t9734 = (t9694+t9733);
bool t9735 = (t9615>0);
bool t9736 = (t9708>0);
bool t9737 = (!t9736);
bool t9738 = (t9735&&t9737);
bool t9739 = (!t9735);
bool t9740 = (t9736&&t9739);
bool t9741 = (t9738||t9740);
bool t9742 = (t9717<196);
bool t9743 = (t9717>float(6.76));
bool t9744 = (t9742&&t9743);
bool t9745 = (t9741&&t9744);
float t9746;
float t9747;
float t9748;
float t9749;
if(t9745){
float t9750 = (t9708/t9706);
float t9751 = (-t9750);
float t9752 = (t9751*t9699);
float t9753 = (t9702+t9752);
float t9754 = atan(t9753,t9714);
float t9755 = (u1.u0/30);
float t9756 = (t9754+t9755);
float t9757 = (2*3.1415927);
float t9758 = (t9756+t9757);
float t9759 = mod(t9758,2);
float t9760 = (t9759*3.1415927);
float t9761 = (t9760/t9757);
float t9762 = (t9751*t9706);
float t9763 = (t9708+t9762);
float t9764 = (t9751*t9712);
float t9765 = (t9714+t9764);
vec3 t9766 = vec3(t9753,t9763,t9765);
float t9767 = length(t9766);
float t9768 = (t9767*t9767);
float t9769 = sqrt(t9768);
float t9770 = (t9769-float(2.6));
float t9771 = (t9770/float(11.4));
vec4 t9772 = texture(s4,vec2(t9761,t9771));
t9746 = t9772.x;
t9747 = t9772.y;
t9748 = t9772.z;
vec3 t9773 = vec3(t9772.x,t9772.y,t9772.z);
float t9774 = length(t9773);
float t9775 = (t9774*t9774);
float t9776 = (t9775/float(3.0));
bool t9777 = (t9776<=1);
float t9778;
if(t9777){
t9778 = t9776;
} else {
t9778 = 1;
}
bool t9779 = (t9778>=0);
float t9780;
if(t9779){
t9780 = t9778;
} else {
t9780 = 0;
}
t9749 = t9780;
} else {
t9746 = 0;
t9747 = 0;
t9748 = 0;
t9749 = 0;
}
float t9781 = (1-t9730);
float t9782 = (t9727*t9781);
float t9783 = (t9730+t9782);
float t9784 = (1-t9783);
float t9785 = (t9749*t9784);
float t9786 = (t9746*t9785);
float t9787 = (t9734+t9786);
float t9788 = (t115*t9702);
float t9789 = pow(t9717,float(2.5));
float t9790 = (t9788/t9789);
float t9791 = (t9790*t9700);
float t9792 = (t9699+t9791);
float t9793 = (t9700*u1.u4);
float t9794 = (t9792*t9793);
float t9795 = (t9702+t9794);
float t9796 = (t115*t9708);
float t9797 = (t9796/t9789);
float t9798 = (t9797*t9700);
float t9799 = (t9706+t9798);
float t9800 = (t9799*t9793);
float t9801 = (t9708+t9800);
float t9802 = (t115*t9714);
float t9803 = (t9802/t9789);
float t9804 = (t9803*t9700);
float t9805 = (t9712+t9804);
float t9806 = (t9805*t9793);
float t9807 = (t9714+t9806);
vec3 t9808 = vec3(t9795,t9801,t9807);
float t9809 = length(t9808);
float t9810 = (t9809*t9809);
bool t9811 = (t9810<1);
vec3 t9812 = vec3(t9702,t9708,t9714);
float t9813 = length(t9812);
float t9814 = (t9813*t9813);
bool t9815 = (t9814>1);
bool t9816 = (t9811&&t9815);
float t9817;
float t9818;
float t9819;
float t9820;
if(t9816){
t9817 = 0;
t9818 = 0;
t9819 = 0;
t9820 = 1;
} else {
t9817 = 0;
t9818 = 0;
t9819 = 0;
t9820 = 0;
}
float t9821 = (1-t9783);
float t9822 = (t9749*t9821);
float t9823 = (t9783+t9822);
float t9824 = (1-t9823);
float t9825 = (t9820*t9824);
float t9826 = (t9817*t9825);
float t9827 = (t9787+t9826);
bool t9828 = (t9708>0);
bool t9829 = (t9801>0);
bool t9830 = (!t9829);
bool t9831 = (t9828&&t9830);
bool t9832 = (!t9828);
bool t9833 = (t9829&&t9832);
bool t9834 = (t9831||t9833);
bool t9835 = (t9810<196);
bool t9836 = (t9810>float(6.76));
bool t9837 = (t9835&&t9836);
bool t9838 = (t9834&&t9837);
float t9839;
float t9840;
float t9841;
float t9842;
if(t9838){
float t9843 = (t9801/t9799);
float t9844 = (-t9843);
float t9845 = (t9844*t9792);
float t9846 = (t9795+t9845);
float t9847 = atan(t9846,t9807);
float t9848 = (u1.u0/30);
float t9849 = (t9847+t9848);
float t9850 = (2*3.1415927);
float t9851 = (t9849+t9850);
float t9852 = mod(t9851,2);
float t9853 = (t9852*3.1415927);
float t9854 = (t9853/t9850);
float t9855 = (t9844*t9799);
float t9856 = (t9801+t9855);
float t9857 = (t9844*t9805);
float t9858 = (t9807+t9857);
vec3 t9859 = vec3(t9846,t9856,t9858);
float t9860 = length(t9859);
float t9861 = (t9860*t9860);
float t9862 = sqrt(t9861);
float t9863 = (t9862-float(2.6));
float t9864 = (t9863/float(11.4));
vec4 t9865 = texture(s4,vec2(t9854,t9864));
t9839 = t9865.x;
t9840 = t9865.y;
t9841 = t9865.z;
vec3 t9866 = vec3(t9865.x,t9865.y,t9865.z);
float t9867 = length(t9866);
float t9868 = (t9867*t9867);
float t9869 = (t9868/float(3.0));
bool t9870 = (t9869<=1);
float t9871;
if(t9870){
t9871 = t9869;
} else {
t9871 = 1;
}
bool t9872 = (t9871>=0);
float t9873;
if(t9872){
t9873 = t9871;
} else {
t9873 = 0;
}
t9842 = t9873;
} else {
t9839 = 0;
t9840 = 0;
t9841 = 0;
t9842 = 0;
}
float t9874 = (1-t9823);
float t9875 = (t9820*t9874);
float t9876 = (t9823+t9875);
float t9877 = (1-t9876);
float t9878 = (t9842*t9877);
float t9879 = (t9839*t9878);
float t9880 = (t9827+t9879);
float t9881 = (t115*t9795);
float t9882 = pow(t9810,float(2.5));
float t9883 = (t9881/t9882);
float t9884 = (t9883*t9793);
float t9885 = (t9792+t9884);
float t9886 = (t9793*u1.u4);
float t9887 = (t9885*t9886);
float t9888 = (t9795+t9887);
float t9889 = (t115*t9801);
float t9890 = (t9889/t9882);
float t9891 = (t9890*t9793);
float t9892 = (t9799+t9891);
float t9893 = (t9892*t9886);
float t9894 = (t9801+t9893);
float t9895 = (t115*t9807);
float t9896 = (t9895/t9882);
float t9897 = (t9896*t9793);
float t9898 = (t9805+t9897);
float t9899 = (t9898*t9886);
float t9900 = (t9807+t9899);
vec3 t9901 = vec3(t9888,t9894,t9900);
float t9902 = length(t9901);
float t9903 = (t9902*t9902);
bool t9904 = (t9903<1);
vec3 t9905 = vec3(t9795,t9801,t9807);
float t9906 = length(t9905);
float t9907 = (t9906*t9906);
bool t9908 = (t9907>1);
bool t9909 = (t9904&&t9908);
float t9910;
float t9911;
float t9912;
float t9913;
if(t9909){
t9910 = 0;
t9911 = 0;
t9912 = 0;
t9913 = 1;
} else {
t9910 = 0;
t9911 = 0;
t9912 = 0;
t9913 = 0;
}
float t9914 = (1-t9876);
float t9915 = (t9842*t9914);
float t9916 = (t9876+t9915);
float t9917 = (1-t9916);
float t9918 = (t9913*t9917);
float t9919 = (t9910*t9918);
float t9920 = (t9880+t9919);
bool t9921 = (t9801>0);
bool t9922 = (t9894>0);
bool t9923 = (!t9922);
bool t9924 = (t9921&&t9923);
bool t9925 = (!t9921);
bool t9926 = (t9922&&t9925);
bool t9927 = (t9924||t9926);
bool t9928 = (t9903<196);
bool t9929 = (t9903>float(6.76));
bool t9930 = (t9928&&t9929);
bool t9931 = (t9927&&t9930);
float t9932;
float t9933;
float t9934;
float t9935;
if(t9931){
float t9936 = (t9894/t9892);
float t9937 = (-t9936);
float t9938 = (t9937*t9885);
float t9939 = (t9888+t9938);
float t9940 = atan(t9939,t9900);
float t9941 = (u1.u0/30);
float t9942 = (t9940+t9941);
float t9943 = (2*3.1415927);
float t9944 = (t9942+t9943);
float t9945 = mod(t9944,2);
float t9946 = (t9945*3.1415927);
float t9947 = (t9946/t9943);
float t9948 = (t9937*t9892);
float t9949 = (t9894+t9948);
float t9950 = (t9937*t9898);
float t9951 = (t9900+t9950);
vec3 t9952 = vec3(t9939,t9949,t9951);
float t9953 = length(t9952);
float t9954 = (t9953*t9953);
float t9955 = sqrt(t9954);
float t9956 = (t9955-float(2.6));
float t9957 = (t9956/float(11.4));
vec4 t9958 = texture(s4,vec2(t9947,t9957));
t9932 = t9958.x;
t9933 = t9958.y;
t9934 = t9958.z;
vec3 t9959 = vec3(t9958.x,t9958.y,t9958.z);
float t9960 = length(t9959);
float t9961 = (t9960*t9960);
float t9962 = (t9961/float(3.0));
bool t9963 = (t9962<=1);
float t9964;
if(t9963){
t9964 = t9962;
} else {
t9964 = 1;
}
bool t9965 = (t9964>=0);
float t9966;
if(t9965){
t9966 = t9964;
} else {
t9966 = 0;
}
t9935 = t9966;
} else {
t9932 = 0;
t9933 = 0;
t9934 = 0;
t9935 = 0;
}
float t9967 = (1-t9916);
float t9968 = (t9913*t9967);
float t9969 = (t9916+t9968);
float t9970 = (1-t9969);
float t9971 = (t9935*t9970);
float t9972 = (t9932*t9971);
float t9973 = (t9920+t9972);
float t9974 = (t115*t9888);
float t9975 = pow(t9903,float(2.5));
float t9976 = (t9974/t9975);
float t9977 = (t9976*t9886);
float t9978 = (t9885+t9977);
float t9979 = (t9886*u1.u4);
float t9980 = (t9978*t9979);
float t9981 = (t9888+t9980);
float t9982 = (t115*t9894);
float t9983 = (t9982/t9975);
float t9984 = (t9983*t9886);
float t9985 = (t9892+t9984);
float t9986 = (t9985*t9979);
float t9987 = (t9894+t9986);
float t9988 = (t115*t9900);
float t9989 = (t9988/t9975);
float t9990 = (t9989*t9886);
float t9991 = (t9898+t9990);
float t9992 = (t9991*t9979);
float t9993 = (t9900+t9992);
vec3 t9994 = vec3(t9981,t9987,t9993);
float t9995 = length(t9994);
float t9996 = (t9995*t9995);
bool t9997 = (t9996<1);
vec3 t9998 = vec3(t9888,t9894,t9900);
float t9999 = length(t9998);
float t10000 = (t9999*t9999);
bool t10001 = (t10000>1);
bool t10002 = (t9997&&t10001);
float t10003;
float t10004;
float t10005;
float t10006;
if(t10002){
t10003 = 0;
t10004 = 0;
t10005 = 0;
t10006 = 1;
} else {
t10003 = 0;
t10004 = 0;
t10005 = 0;
t10006 = 0;
}
float t10007 = (1-t9969);
float t10008 = (t9935*t10007);
float t10009 = (t9969+t10008);
float t10010 = (1-t10009);
float t10011 = (t10006*t10010);
float t10012 = (t10003*t10011);
float t10013 = (t9973+t10012);
bool t10014 = (t9894>0);
bool t10015 = (t9987>0);
bool t10016 = (!t10015);
bool t10017 = (t10014&&t10016);
bool t10018 = (!t10014);
bool t10019 = (t10015&&t10018);
bool t10020 = (t10017||t10019);
bool t10021 = (t9996<196);
bool t10022 = (t9996>float(6.76));
bool t10023 = (t10021&&t10022);
bool t10024 = (t10020&&t10023);
float t10025;
float t10026;
float t10027;
float t10028;
if(t10024){
float t10029 = (t9987/t9985);
float t10030 = (-t10029);
float t10031 = (t10030*t9978);
float t10032 = (t9981+t10031);
float t10033 = atan(t10032,t9993);
float t10034 = (u1.u0/30);
float t10035 = (t10033+t10034);
float t10036 = (2*3.1415927);
float t10037 = (t10035+t10036);
float t10038 = mod(t10037,2);
float t10039 = (t10038*3.1415927);
float t10040 = (t10039/t10036);
float t10041 = (t10030*t9985);
float t10042 = (t9987+t10041);
float t10043 = (t10030*t9991);
float t10044 = (t9993+t10043);
vec3 t10045 = vec3(t10032,t10042,t10044);
float t10046 = length(t10045);
float t10047 = (t10046*t10046);
float t10048 = sqrt(t10047);
float t10049 = (t10048-float(2.6));
float t10050 = (t10049/float(11.4));
vec4 t10051 = texture(s4,vec2(t10040,t10050));
t10025 = t10051.x;
t10026 = t10051.y;
t10027 = t10051.z;
vec3 t10052 = vec3(t10051.x,t10051.y,t10051.z);
float t10053 = length(t10052);
float t10054 = (t10053*t10053);
float t10055 = (t10054/float(3.0));
bool t10056 = (t10055<=1);
float t10057;
if(t10056){
t10057 = t10055;
} else {
t10057 = 1;
}
bool t10058 = (t10057>=0);
float t10059;
if(t10058){
t10059 = t10057;
} else {
t10059 = 0;
}
t10028 = t10059;
} else {
t10025 = 0;
t10026 = 0;
t10027 = 0;
t10028 = 0;
}
float t10060 = (1-t10009);
float t10061 = (t10006*t10060);
float t10062 = (t10009+t10061);
float t10063 = (1-t10062);
float t10064 = (t10028*t10063);
float t10065 = (t10025*t10064);
float t10066 = (t10013+t10065);
float t10067 = (t115*t9981);
float t10068 = pow(t9996,float(2.5));
float t10069 = (t10067/t10068);
float t10070 = (t10069*t9979);
float t10071 = (t9978+t10070);
float t10072 = (t9979*u1.u4);
float t10073 = (t10071*t10072);
float t10074 = (t9981+t10073);
float t10075 = (t115*t9987);
float t10076 = (t10075/t10068);
float t10077 = (t10076*t9979);
float t10078 = (t9985+t10077);
float t10079 = (t10078*t10072);
float t10080 = (t9987+t10079);
float t10081 = (t115*t9993);
float t10082 = (t10081/t10068);
float t10083 = (t10082*t9979);
float t10084 = (t9991+t10083);
float t10085 = (t10084*t10072);
float t10086 = (t9993+t10085);
vec3 t10087 = vec3(t10074,t10080,t10086);
float t10088 = length(t10087);
float t10089 = (t10088*t10088);
bool t10090 = (t10089<1);
vec3 t10091 = vec3(t9981,t9987,t9993);
float t10092 = length(t10091);
float t10093 = (t10092*t10092);
bool t10094 = (t10093>1);
bool t10095 = (t10090&&t10094);
float t10096;
float t10097;
float t10098;
float t10099;
if(t10095){
t10096 = 0;
t10097 = 0;
t10098 = 0;
t10099 = 1;
} else {
t10096 = 0;
t10097 = 0;
t10098 = 0;
t10099 = 0;
}
float t10100 = (1-t10062);
float t10101 = (t10028*t10100);
float t10102 = (t10062+t10101);
float t10103 = (1-t10102);
float t10104 = (t10099*t10103);
float t10105 = (t10096*t10104);
float t10106 = (t10066+t10105);
bool t10107 = (t9987>0);
bool t10108 = (t10080>0);
bool t10109 = (!t10108);
bool t10110 = (t10107&&t10109);
bool t10111 = (!t10107);
bool t10112 = (t10108&&t10111);
bool t10113 = (t10110||t10112);
bool t10114 = (t10089<196);
bool t10115 = (t10089>float(6.76));
bool t10116 = (t10114&&t10115);
bool t10117 = (t10113&&t10116);
float t10118;
float t10119;
float t10120;
float t10121;
if(t10117){
float t10122 = (t10080/t10078);
float t10123 = (-t10122);
float t10124 = (t10123*t10071);
float t10125 = (t10074+t10124);
float t10126 = atan(t10125,t10086);
float t10127 = (u1.u0/30);
float t10128 = (t10126+t10127);
float t10129 = (2*3.1415927);
float t10130 = (t10128+t10129);
float t10131 = mod(t10130,2);
float t10132 = (t10131*3.1415927);
float t10133 = (t10132/t10129);
float t10134 = (t10123*t10078);
float t10135 = (t10080+t10134);
float t10136 = (t10123*t10084);
float t10137 = (t10086+t10136);
vec3 t10138 = vec3(t10125,t10135,t10137);
float t10139 = length(t10138);
float t10140 = (t10139*t10139);
float t10141 = sqrt(t10140);
float t10142 = (t10141-float(2.6));
float t10143 = (t10142/float(11.4));
vec4 t10144 = texture(s4,vec2(t10133,t10143));
t10118 = t10144.x;
t10119 = t10144.y;
t10120 = t10144.z;
vec3 t10145 = vec3(t10144.x,t10144.y,t10144.z);
float t10146 = length(t10145);
float t10147 = (t10146*t10146);
float t10148 = (t10147/float(3.0));
bool t10149 = (t10148<=1);
float t10150;
if(t10149){
t10150 = t10148;
} else {
t10150 = 1;
}
bool t10151 = (t10150>=0);
float t10152;
if(t10151){
t10152 = t10150;
} else {
t10152 = 0;
}
t10121 = t10152;
} else {
t10118 = 0;
t10119 = 0;
t10120 = 0;
t10121 = 0;
}
float t10153 = (1-t10102);
float t10154 = (t10099*t10153);
float t10155 = (t10102+t10154);
float t10156 = (1-t10155);
float t10157 = (t10121*t10156);
float t10158 = (t10118*t10157);
float t10159 = (t10106+t10158);
float t10160 = (t115*t10074);
float t10161 = pow(t10089,float(2.5));
float t10162 = (t10160/t10161);
float t10163 = (t10162*t10072);
float t10164 = (t10071+t10163);
float t10165 = (t10072*u1.u4);
float t10166 = (t10164*t10165);
float t10167 = (t10074+t10166);
float t10168 = (t115*t10080);
float t10169 = (t10168/t10161);
float t10170 = (t10169*t10072);
float t10171 = (t10078+t10170);
float t10172 = (t10171*t10165);
float t10173 = (t10080+t10172);
float t10174 = (t115*t10086);
float t10175 = (t10174/t10161);
float t10176 = (t10175*t10072);
float t10177 = (t10084+t10176);
float t10178 = (t10177*t10165);
float t10179 = (t10086+t10178);
vec3 t10180 = vec3(t10167,t10173,t10179);
float t10181 = length(t10180);
float t10182 = (t10181*t10181);
bool t10183 = (t10182<1);
vec3 t10184 = vec3(t10074,t10080,t10086);
float t10185 = length(t10184);
float t10186 = (t10185*t10185);
bool t10187 = (t10186>1);
bool t10188 = (t10183&&t10187);
float t10189;
float t10190;
float t10191;
float t10192;
if(t10188){
t10189 = 0;
t10190 = 0;
t10191 = 0;
t10192 = 1;
} else {
t10189 = 0;
t10190 = 0;
t10191 = 0;
t10192 = 0;
}
float t10193 = (1-t10155);
float t10194 = (t10121*t10193);
float t10195 = (t10155+t10194);
float t10196 = (1-t10195);
float t10197 = (t10192*t10196);
float t10198 = (t10189*t10197);
float t10199 = (t10159+t10198);
bool t10200 = (t10080>0);
bool t10201 = (t10173>0);
bool t10202 = (!t10201);
bool t10203 = (t10200&&t10202);
bool t10204 = (!t10200);
bool t10205 = (t10201&&t10204);
bool t10206 = (t10203||t10205);
bool t10207 = (t10182<196);
bool t10208 = (t10182>float(6.76));
bool t10209 = (t10207&&t10208);
bool t10210 = (t10206&&t10209);
float t10211;
float t10212;
float t10213;
float t10214;
if(t10210){
float t10215 = (t10173/t10171);
float t10216 = (-t10215);
float t10217 = (t10216*t10164);
float t10218 = (t10167+t10217);
float t10219 = atan(t10218,t10179);
float t10220 = (u1.u0/30);
float t10221 = (t10219+t10220);
float t10222 = (2*3.1415927);
float t10223 = (t10221+t10222);
float t10224 = mod(t10223,2);
float t10225 = (t10224*3.1415927);
float t10226 = (t10225/t10222);
float t10227 = (t10216*t10171);
float t10228 = (t10173+t10227);
float t10229 = (t10216*t10177);
float t10230 = (t10179+t10229);
vec3 t10231 = vec3(t10218,t10228,t10230);
float t10232 = length(t10231);
float t10233 = (t10232*t10232);
float t10234 = sqrt(t10233);
float t10235 = (t10234-float(2.6));
float t10236 = (t10235/float(11.4));
vec4 t10237 = texture(s4,vec2(t10226,t10236));
t10211 = t10237.x;
t10212 = t10237.y;
t10213 = t10237.z;
vec3 t10238 = vec3(t10237.x,t10237.y,t10237.z);
float t10239 = length(t10238);
float t10240 = (t10239*t10239);
float t10241 = (t10240/float(3.0));
bool t10242 = (t10241<=1);
float t10243;
if(t10242){
t10243 = t10241;
} else {
t10243 = 1;
}
bool t10244 = (t10243>=0);
float t10245;
if(t10244){
t10245 = t10243;
} else {
t10245 = 0;
}
t10214 = t10245;
} else {
t10211 = 0;
t10212 = 0;
t10213 = 0;
t10214 = 0;
}
float t10246 = (1-t10195);
float t10247 = (t10192*t10246);
float t10248 = (t10195+t10247);
float t10249 = (1-t10248);
float t10250 = (t10214*t10249);
float t10251 = (t10211*t10250);
float t10252 = (t10199+t10251);
float t10253 = (t115*t10167);
float t10254 = pow(t10182,float(2.5));
float t10255 = (t10253/t10254);
float t10256 = (t10255*t10165);
float t10257 = (t10164+t10256);
float t10258 = (t10165*u1.u4);
float t10259 = (t10257*t10258);
float t10260 = (t10167+t10259);
float t10261 = (t115*t10173);
float t10262 = (t10261/t10254);
float t10263 = (t10262*t10165);
float t10264 = (t10171+t10263);
float t10265 = (t10264*t10258);
float t10266 = (t10173+t10265);
float t10267 = (t115*t10179);
float t10268 = (t10267/t10254);
float t10269 = (t10268*t10165);
float t10270 = (t10177+t10269);
float t10271 = (t10270*t10258);
float t10272 = (t10179+t10271);
vec3 t10273 = vec3(t10260,t10266,t10272);
float t10274 = length(t10273);
float t10275 = (t10274*t10274);
bool t10276 = (t10275<1);
vec3 t10277 = vec3(t10167,t10173,t10179);
float t10278 = length(t10277);
float t10279 = (t10278*t10278);
bool t10280 = (t10279>1);
bool t10281 = (t10276&&t10280);
float t10282;
float t10283;
float t10284;
float t10285;
if(t10281){
t10282 = 0;
t10283 = 0;
t10284 = 0;
t10285 = 1;
} else {
t10282 = 0;
t10283 = 0;
t10284 = 0;
t10285 = 0;
}
float t10286 = (1-t10248);
float t10287 = (t10214*t10286);
float t10288 = (t10248+t10287);
float t10289 = (1-t10288);
float t10290 = (t10285*t10289);
float t10291 = (t10282*t10290);
float t10292 = (t10252+t10291);
bool t10293 = (t10173>0);
bool t10294 = (t10266>0);
bool t10295 = (!t10294);
bool t10296 = (t10293&&t10295);
bool t10297 = (!t10293);
bool t10298 = (t10294&&t10297);
bool t10299 = (t10296||t10298);
bool t10300 = (t10275<196);
bool t10301 = (t10275>float(6.76));
bool t10302 = (t10300&&t10301);
bool t10303 = (t10299&&t10302);
float t10304;
float t10305;
float t10306;
float t10307;
if(t10303){
float t10308 = (t10266/t10264);
float t10309 = (-t10308);
float t10310 = (t10309*t10257);
float t10311 = (t10260+t10310);
float t10312 = atan(t10311,t10272);
float t10313 = (u1.u0/30);
float t10314 = (t10312+t10313);
float t10315 = (2*3.1415927);
float t10316 = (t10314+t10315);
float t10317 = mod(t10316,2);
float t10318 = (t10317*3.1415927);
float t10319 = (t10318/t10315);
float t10320 = (t10309*t10264);
float t10321 = (t10266+t10320);
float t10322 = (t10309*t10270);
float t10323 = (t10272+t10322);
vec3 t10324 = vec3(t10311,t10321,t10323);
float t10325 = length(t10324);
float t10326 = (t10325*t10325);
float t10327 = sqrt(t10326);
float t10328 = (t10327-float(2.6));
float t10329 = (t10328/float(11.4));
vec4 t10330 = texture(s4,vec2(t10319,t10329));
t10304 = t10330.x;
t10305 = t10330.y;
t10306 = t10330.z;
vec3 t10331 = vec3(t10330.x,t10330.y,t10330.z);
float t10332 = length(t10331);
float t10333 = (t10332*t10332);
float t10334 = (t10333/float(3.0));
bool t10335 = (t10334<=1);
float t10336;
if(t10335){
t10336 = t10334;
} else {
t10336 = 1;
}
bool t10337 = (t10336>=0);
float t10338;
if(t10337){
t10338 = t10336;
} else {
t10338 = 0;
}
t10307 = t10338;
} else {
t10304 = 0;
t10305 = 0;
t10306 = 0;
t10307 = 0;
}
float t10339 = (1-t10288);
float t10340 = (t10285*t10339);
float t10341 = (t10288+t10340);
float t10342 = (1-t10341);
float t10343 = (t10307*t10342);
float t10344 = (t10304*t10343);
float t10345 = (t10292+t10344);
float t10346 = (t115*t10260);
float t10347 = pow(t10275,float(2.5));
float t10348 = (t10346/t10347);
float t10349 = (t10348*t10258);
float t10350 = (t10257+t10349);
float t10351 = (t10258*u1.u4);
float t10352 = (t10350*t10351);
float t10353 = (t10260+t10352);
float t10354 = (t115*t10266);
float t10355 = (t10354/t10347);
float t10356 = (t10355*t10258);
float t10357 = (t10264+t10356);
float t10358 = (t10357*t10351);
float t10359 = (t10266+t10358);
float t10360 = (t115*t10272);
float t10361 = (t10360/t10347);
float t10362 = (t10361*t10258);
float t10363 = (t10270+t10362);
float t10364 = (t10363*t10351);
float t10365 = (t10272+t10364);
vec3 t10366 = vec3(t10353,t10359,t10365);
float t10367 = length(t10366);
float t10368 = (t10367*t10367);
bool t10369 = (t10368<1);
vec3 t10370 = vec3(t10260,t10266,t10272);
float t10371 = length(t10370);
float t10372 = (t10371*t10371);
bool t10373 = (t10372>1);
bool t10374 = (t10369&&t10373);
float t10375;
float t10376;
float t10377;
float t10378;
if(t10374){
t10375 = 0;
t10376 = 0;
t10377 = 0;
t10378 = 1;
} else {
t10375 = 0;
t10376 = 0;
t10377 = 0;
t10378 = 0;
}
float t10379 = (1-t10341);
float t10380 = (t10307*t10379);
float t10381 = (t10341+t10380);
float t10382 = (1-t10381);
float t10383 = (t10378*t10382);
float t10384 = (t10375*t10383);
float t10385 = (t10345+t10384);
bool t10386 = (t10266>0);
bool t10387 = (t10359>0);
bool t10388 = (!t10387);
bool t10389 = (t10386&&t10388);
bool t10390 = (!t10386);
bool t10391 = (t10387&&t10390);
bool t10392 = (t10389||t10391);
bool t10393 = (t10368<196);
bool t10394 = (t10368>float(6.76));
bool t10395 = (t10393&&t10394);
bool t10396 = (t10392&&t10395);
float t10397;
float t10398;
float t10399;
float t10400;
if(t10396){
float t10401 = (t10359/t10357);
float t10402 = (-t10401);
float t10403 = (t10402*t10350);
float t10404 = (t10353+t10403);
float t10405 = atan(t10404,t10365);
float t10406 = (u1.u0/30);
float t10407 = (t10405+t10406);
float t10408 = (2*3.1415927);
float t10409 = (t10407+t10408);
float t10410 = mod(t10409,2);
float t10411 = (t10410*3.1415927);
float t10412 = (t10411/t10408);
float t10413 = (t10402*t10357);
float t10414 = (t10359+t10413);
float t10415 = (t10402*t10363);
float t10416 = (t10365+t10415);
vec3 t10417 = vec3(t10404,t10414,t10416);
float t10418 = length(t10417);
float t10419 = (t10418*t10418);
float t10420 = sqrt(t10419);
float t10421 = (t10420-float(2.6));
float t10422 = (t10421/float(11.4));
vec4 t10423 = texture(s4,vec2(t10412,t10422));
t10397 = t10423.x;
t10398 = t10423.y;
t10399 = t10423.z;
vec3 t10424 = vec3(t10423.x,t10423.y,t10423.z);
float t10425 = length(t10424);
float t10426 = (t10425*t10425);
float t10427 = (t10426/float(3.0));
bool t10428 = (t10427<=1);
float t10429;
if(t10428){
t10429 = t10427;
} else {
t10429 = 1;
}
bool t10430 = (t10429>=0);
float t10431;
if(t10430){
t10431 = t10429;
} else {
t10431 = 0;
}
t10400 = t10431;
} else {
t10397 = 0;
t10398 = 0;
t10399 = 0;
t10400 = 0;
}
float t10432 = (1-t10381);
float t10433 = (t10378*t10432);
float t10434 = (t10381+t10433);
float t10435 = (1-t10434);
float t10436 = (t10400*t10435);
float t10437 = (t10397*t10436);
float t10438 = (t10385+t10437);
float t10439 = (t115*t10353);
float t10440 = pow(t10368,float(2.5));
float t10441 = (t10439/t10440);
float t10442 = (t10441*t10351);
float t10443 = (t10350+t10442);
float t10444 = (t10351*u1.u4);
float t10445 = (t10443*t10444);
float t10446 = (t10353+t10445);
float t10447 = (t115*t10359);
float t10448 = (t10447/t10440);
float t10449 = (t10448*t10351);
float t10450 = (t10357+t10449);
float t10451 = (t10450*t10444);
float t10452 = (t10359+t10451);
float t10453 = (t115*t10365);
float t10454 = (t10453/t10440);
float t10455 = (t10454*t10351);
float t10456 = (t10363+t10455);
float t10457 = (t10456*t10444);
float t10458 = (t10365+t10457);
vec3 t10459 = vec3(t10446,t10452,t10458);
float t10460 = length(t10459);
float t10461 = (t10460*t10460);
bool t10462 = (t10461<1);
vec3 t10463 = vec3(t10353,t10359,t10365);
float t10464 = length(t10463);
float t10465 = (t10464*t10464);
bool t10466 = (t10465>1);
bool t10467 = (t10462&&t10466);
float t10468;
float t10469;
float t10470;
float t10471;
if(t10467){
t10468 = 0;
t10469 = 0;
t10470 = 0;
t10471 = 1;
} else {
t10468 = 0;
t10469 = 0;
t10470 = 0;
t10471 = 0;
}
float t10472 = (1-t10434);
float t10473 = (t10400*t10472);
float t10474 = (t10434+t10473);
float t10475 = (1-t10474);
float t10476 = (t10471*t10475);
float t10477 = (t10468*t10476);
float t10478 = (t10438+t10477);
bool t10479 = (t10359>0);
bool t10480 = (t10452>0);
bool t10481 = (!t10480);
bool t10482 = (t10479&&t10481);
bool t10483 = (!t10479);
bool t10484 = (t10480&&t10483);
bool t10485 = (t10482||t10484);
bool t10486 = (t10461<196);
bool t10487 = (t10461>float(6.76));
bool t10488 = (t10486&&t10487);
bool t10489 = (t10485&&t10488);
float t10490;
float t10491;
float t10492;
float t10493;
if(t10489){
float t10494 = (t10452/t10450);
float t10495 = (-t10494);
float t10496 = (t10495*t10443);
float t10497 = (t10446+t10496);
float t10498 = atan(t10497,t10458);
float t10499 = (u1.u0/30);
float t10500 = (t10498+t10499);
float t10501 = (2*3.1415927);
float t10502 = (t10500+t10501);
float t10503 = mod(t10502,2);
float t10504 = (t10503*3.1415927);
float t10505 = (t10504/t10501);
float t10506 = (t10495*t10450);
float t10507 = (t10452+t10506);
float t10508 = (t10495*t10456);
float t10509 = (t10458+t10508);
vec3 t10510 = vec3(t10497,t10507,t10509);
float t10511 = length(t10510);
float t10512 = (t10511*t10511);
float t10513 = sqrt(t10512);
float t10514 = (t10513-float(2.6));
float t10515 = (t10514/float(11.4));
vec4 t10516 = texture(s4,vec2(t10505,t10515));
t10490 = t10516.x;
t10491 = t10516.y;
t10492 = t10516.z;
vec3 t10517 = vec3(t10516.x,t10516.y,t10516.z);
float t10518 = length(t10517);
float t10519 = (t10518*t10518);
float t10520 = (t10519/float(3.0));
bool t10521 = (t10520<=1);
float t10522;
if(t10521){
t10522 = t10520;
} else {
t10522 = 1;
}
bool t10523 = (t10522>=0);
float t10524;
if(t10523){
t10524 = t10522;
} else {
t10524 = 0;
}
t10493 = t10524;
} else {
t10490 = 0;
t10491 = 0;
t10492 = 0;
t10493 = 0;
}
float t10525 = (1-t10474);
float t10526 = (t10471*t10525);
float t10527 = (t10474+t10526);
float t10528 = (1-t10527);
float t10529 = (t10493*t10528);
float t10530 = (t10490*t10529);
float t10531 = (t10478+t10530);
float t10532 = (t115*t10446);
float t10533 = pow(t10461,float(2.5));
float t10534 = (t10532/t10533);
float t10535 = (t10534*t10444);
float t10536 = (t10443+t10535);
float t10537 = (t10444*u1.u4);
float t10538 = (t10536*t10537);
float t10539 = (t10446+t10538);
float t10540 = (t115*t10452);
float t10541 = (t10540/t10533);
float t10542 = (t10541*t10444);
float t10543 = (t10450+t10542);
float t10544 = (t10543*t10537);
float t10545 = (t10452+t10544);
float t10546 = (t115*t10458);
float t10547 = (t10546/t10533);
float t10548 = (t10547*t10444);
float t10549 = (t10456+t10548);
float t10550 = (t10549*t10537);
float t10551 = (t10458+t10550);
vec3 t10552 = vec3(t10539,t10545,t10551);
float t10553 = length(t10552);
float t10554 = (t10553*t10553);
bool t10555 = (t10554<1);
vec3 t10556 = vec3(t10446,t10452,t10458);
float t10557 = length(t10556);
float t10558 = (t10557*t10557);
bool t10559 = (t10558>1);
bool t10560 = (t10555&&t10559);
float t10561;
float t10562;
float t10563;
float t10564;
if(t10560){
t10561 = 0;
t10562 = 0;
t10563 = 0;
t10564 = 1;
} else {
t10561 = 0;
t10562 = 0;
t10563 = 0;
t10564 = 0;
}
float t10565 = (1-t10527);
float t10566 = (t10493*t10565);
float t10567 = (t10527+t10566);
float t10568 = (1-t10567);
float t10569 = (t10564*t10568);
float t10570 = (t10561*t10569);
float t10571 = (t10531+t10570);
bool t10572 = (t10452>0);
bool t10573 = (t10545>0);
bool t10574 = (!t10573);
bool t10575 = (t10572&&t10574);
bool t10576 = (!t10572);
bool t10577 = (t10573&&t10576);
bool t10578 = (t10575||t10577);
bool t10579 = (t10554<196);
bool t10580 = (t10554>float(6.76));
bool t10581 = (t10579&&t10580);
bool t10582 = (t10578&&t10581);
float t10583;
float t10584;
float t10585;
float t10586;
if(t10582){
float t10587 = (t10545/t10543);
float t10588 = (-t10587);
float t10589 = (t10588*t10536);
float t10590 = (t10539+t10589);
float t10591 = atan(t10590,t10551);
float t10592 = (u1.u0/30);
float t10593 = (t10591+t10592);
float t10594 = (2*3.1415927);
float t10595 = (t10593+t10594);
float t10596 = mod(t10595,2);
float t10597 = (t10596*3.1415927);
float t10598 = (t10597/t10594);
float t10599 = (t10588*t10543);
float t10600 = (t10545+t10599);
float t10601 = (t10588*t10549);
float t10602 = (t10551+t10601);
vec3 t10603 = vec3(t10590,t10600,t10602);
float t10604 = length(t10603);
float t10605 = (t10604*t10604);
float t10606 = sqrt(t10605);
float t10607 = (t10606-float(2.6));
float t10608 = (t10607/float(11.4));
vec4 t10609 = texture(s4,vec2(t10598,t10608));
t10583 = t10609.x;
t10584 = t10609.y;
t10585 = t10609.z;
vec3 t10610 = vec3(t10609.x,t10609.y,t10609.z);
float t10611 = length(t10610);
float t10612 = (t10611*t10611);
float t10613 = (t10612/float(3.0));
bool t10614 = (t10613<=1);
float t10615;
if(t10614){
t10615 = t10613;
} else {
t10615 = 1;
}
bool t10616 = (t10615>=0);
float t10617;
if(t10616){
t10617 = t10615;
} else {
t10617 = 0;
}
t10586 = t10617;
} else {
t10583 = 0;
t10584 = 0;
t10585 = 0;
t10586 = 0;
}
float t10618 = (1-t10567);
float t10619 = (t10564*t10618);
float t10620 = (t10567+t10619);
float t10621 = (1-t10620);
float t10622 = (t10586*t10621);
float t10623 = (t10583*t10622);
float t10624 = (t10571+t10623);
float t10625 = (t115*t10539);
float t10626 = pow(t10554,float(2.5));
float t10627 = (t10625/t10626);
float t10628 = (t10627*t10537);
float t10629 = (t10536+t10628);
float t10630 = (t10537*u1.u4);
float t10631 = (t10629*t10630);
float t10632 = (t10539+t10631);
float t10633 = (t115*t10545);
float t10634 = (t10633/t10626);
float t10635 = (t10634*t10537);
float t10636 = (t10543+t10635);
float t10637 = (t10636*t10630);
float t10638 = (t10545+t10637);
float t10639 = (t115*t10551);
float t10640 = (t10639/t10626);
float t10641 = (t10640*t10537);
float t10642 = (t10549+t10641);
float t10643 = (t10642*t10630);
float t10644 = (t10551+t10643);
vec3 t10645 = vec3(t10632,t10638,t10644);
float t10646 = length(t10645);
float t10647 = (t10646*t10646);
bool t10648 = (t10647<1);
vec3 t10649 = vec3(t10539,t10545,t10551);
float t10650 = length(t10649);
float t10651 = (t10650*t10650);
bool t10652 = (t10651>1);
bool t10653 = (t10648&&t10652);
float t10654;
float t10655;
float t10656;
float t10657;
if(t10653){
t10654 = 0;
t10655 = 0;
t10656 = 0;
t10657 = 1;
} else {
t10654 = 0;
t10655 = 0;
t10656 = 0;
t10657 = 0;
}
float t10658 = (1-t10620);
float t10659 = (t10586*t10658);
float t10660 = (t10620+t10659);
float t10661 = (1-t10660);
float t10662 = (t10657*t10661);
float t10663 = (t10654*t10662);
float t10664 = (t10624+t10663);
bool t10665 = (t10545>0);
bool t10666 = (t10638>0);
bool t10667 = (!t10666);
bool t10668 = (t10665&&t10667);
bool t10669 = (!t10665);
bool t10670 = (t10666&&t10669);
bool t10671 = (t10668||t10670);
bool t10672 = (t10647<196);
bool t10673 = (t10647>float(6.76));
bool t10674 = (t10672&&t10673);
bool t10675 = (t10671&&t10674);
float t10676;
float t10677;
float t10678;
float t10679;
if(t10675){
float t10680 = (t10638/t10636);
float t10681 = (-t10680);
float t10682 = (t10681*t10629);
float t10683 = (t10632+t10682);
float t10684 = atan(t10683,t10644);
float t10685 = (u1.u0/30);
float t10686 = (t10684+t10685);
float t10687 = (2*3.1415927);
float t10688 = (t10686+t10687);
float t10689 = mod(t10688,2);
float t10690 = (t10689*3.1415927);
float t10691 = (t10690/t10687);
float t10692 = (t10681*t10636);
float t10693 = (t10638+t10692);
float t10694 = (t10681*t10642);
float t10695 = (t10644+t10694);
vec3 t10696 = vec3(t10683,t10693,t10695);
float t10697 = length(t10696);
float t10698 = (t10697*t10697);
float t10699 = sqrt(t10698);
float t10700 = (t10699-float(2.6));
float t10701 = (t10700/float(11.4));
vec4 t10702 = texture(s4,vec2(t10691,t10701));
t10676 = t10702.x;
t10677 = t10702.y;
t10678 = t10702.z;
vec3 t10703 = vec3(t10702.x,t10702.y,t10702.z);
float t10704 = length(t10703);
float t10705 = (t10704*t10704);
float t10706 = (t10705/float(3.0));
bool t10707 = (t10706<=1);
float t10708;
if(t10707){
t10708 = t10706;
} else {
t10708 = 1;
}
bool t10709 = (t10708>=0);
float t10710;
if(t10709){
t10710 = t10708;
} else {
t10710 = 0;
}
t10679 = t10710;
} else {
t10676 = 0;
t10677 = 0;
t10678 = 0;
t10679 = 0;
}
float t10711 = (1-t10660);
float t10712 = (t10657*t10711);
float t10713 = (t10660+t10712);
float t10714 = (1-t10713);
float t10715 = (t10679*t10714);
float t10716 = (t10676*t10715);
float t10717 = (t10664+t10716);
float t10718 = (t115*t10632);
float t10719 = pow(t10647,float(2.5));
float t10720 = (t10718/t10719);
float t10721 = (t10720*t10630);
float t10722 = (t10629+t10721);
float t10723 = (t10630*u1.u4);
float t10724 = (t10722*t10723);
float t10725 = (t10632+t10724);
float t10726 = (t115*t10638);
float t10727 = (t10726/t10719);
float t10728 = (t10727*t10630);
float t10729 = (t10636+t10728);
float t10730 = (t10729*t10723);
float t10731 = (t10638+t10730);
float t10732 = (t115*t10644);
float t10733 = (t10732/t10719);
float t10734 = (t10733*t10630);
float t10735 = (t10642+t10734);
float t10736 = (t10735*t10723);
float t10737 = (t10644+t10736);
vec3 t10738 = vec3(t10725,t10731,t10737);
float t10739 = length(t10738);
float t10740 = (t10739*t10739);
bool t10741 = (t10740<1);
vec3 t10742 = vec3(t10632,t10638,t10644);
float t10743 = length(t10742);
float t10744 = (t10743*t10743);
bool t10745 = (t10744>1);
bool t10746 = (t10741&&t10745);
float t10747;
float t10748;
float t10749;
float t10750;
if(t10746){
t10747 = 0;
t10748 = 0;
t10749 = 0;
t10750 = 1;
} else {
t10747 = 0;
t10748 = 0;
t10749 = 0;
t10750 = 0;
}
float t10751 = (1-t10713);
float t10752 = (t10679*t10751);
float t10753 = (t10713+t10752);
float t10754 = (1-t10753);
float t10755 = (t10750*t10754);
float t10756 = (t10747*t10755);
float t10757 = (t10717+t10756);
bool t10758 = (t10638>0);
bool t10759 = (t10731>0);
bool t10760 = (!t10759);
bool t10761 = (t10758&&t10760);
bool t10762 = (!t10758);
bool t10763 = (t10759&&t10762);
bool t10764 = (t10761||t10763);
bool t10765 = (t10740<196);
bool t10766 = (t10740>float(6.76));
bool t10767 = (t10765&&t10766);
bool t10768 = (t10764&&t10767);
float t10769;
float t10770;
float t10771;
float t10772;
if(t10768){
float t10773 = (t10731/t10729);
float t10774 = (-t10773);
float t10775 = (t10774*t10722);
float t10776 = (t10725+t10775);
float t10777 = atan(t10776,t10737);
float t10778 = (u1.u0/30);
float t10779 = (t10777+t10778);
float t10780 = (2*3.1415927);
float t10781 = (t10779+t10780);
float t10782 = mod(t10781,2);
float t10783 = (t10782*3.1415927);
float t10784 = (t10783/t10780);
float t10785 = (t10774*t10729);
float t10786 = (t10731+t10785);
float t10787 = (t10774*t10735);
float t10788 = (t10737+t10787);
vec3 t10789 = vec3(t10776,t10786,t10788);
float t10790 = length(t10789);
float t10791 = (t10790*t10790);
float t10792 = sqrt(t10791);
float t10793 = (t10792-float(2.6));
float t10794 = (t10793/float(11.4));
vec4 t10795 = texture(s4,vec2(t10784,t10794));
t10769 = t10795.x;
t10770 = t10795.y;
t10771 = t10795.z;
vec3 t10796 = vec3(t10795.x,t10795.y,t10795.z);
float t10797 = length(t10796);
float t10798 = (t10797*t10797);
float t10799 = (t10798/float(3.0));
bool t10800 = (t10799<=1);
float t10801;
if(t10800){
t10801 = t10799;
} else {
t10801 = 1;
}
bool t10802 = (t10801>=0);
float t10803;
if(t10802){
t10803 = t10801;
} else {
t10803 = 0;
}
t10772 = t10803;
} else {
t10769 = 0;
t10770 = 0;
t10771 = 0;
t10772 = 0;
}
float t10804 = (1-t10753);
float t10805 = (t10750*t10804);
float t10806 = (t10753+t10805);
float t10807 = (1-t10806);
float t10808 = (t10772*t10807);
float t10809 = (t10769*t10808);
float t10810 = (t10757+t10809);
float t10811 = (t115*t10725);
float t10812 = pow(t10740,float(2.5));
float t10813 = (t10811/t10812);
float t10814 = (t10813*t10723);
float t10815 = (t10722+t10814);
float t10816 = (t10723*u1.u4);
float t10817 = (t10815*t10816);
float t10818 = (t10725+t10817);
float t10819 = (t115*t10731);
float t10820 = (t10819/t10812);
float t10821 = (t10820*t10723);
float t10822 = (t10729+t10821);
float t10823 = (t10822*t10816);
float t10824 = (t10731+t10823);
float t10825 = (t115*t10737);
float t10826 = (t10825/t10812);
float t10827 = (t10826*t10723);
float t10828 = (t10735+t10827);
float t10829 = (t10828*t10816);
float t10830 = (t10737+t10829);
vec3 t10831 = vec3(t10818,t10824,t10830);
float t10832 = length(t10831);
float t10833 = (t10832*t10832);
bool t10834 = (t10833<1);
vec3 t10835 = vec3(t10725,t10731,t10737);
float t10836 = length(t10835);
float t10837 = (t10836*t10836);
bool t10838 = (t10837>1);
bool t10839 = (t10834&&t10838);
float t10840;
float t10841;
float t10842;
float t10843;
if(t10839){
t10840 = 0;
t10841 = 0;
t10842 = 0;
t10843 = 1;
} else {
t10840 = 0;
t10841 = 0;
t10842 = 0;
t10843 = 0;
}
float t10844 = (1-t10806);
float t10845 = (t10772*t10844);
float t10846 = (t10806+t10845);
float t10847 = (1-t10846);
float t10848 = (t10843*t10847);
float t10849 = (t10840*t10848);
float t10850 = (t10810+t10849);
bool t10851 = (t10731>0);
bool t10852 = (t10824>0);
bool t10853 = (!t10852);
bool t10854 = (t10851&&t10853);
bool t10855 = (!t10851);
bool t10856 = (t10852&&t10855);
bool t10857 = (t10854||t10856);
bool t10858 = (t10833<196);
bool t10859 = (t10833>float(6.76));
bool t10860 = (t10858&&t10859);
bool t10861 = (t10857&&t10860);
float t10862;
float t10863;
float t10864;
float t10865;
if(t10861){
float t10866 = (t10824/t10822);
float t10867 = (-t10866);
float t10868 = (t10867*t10815);
float t10869 = (t10818+t10868);
float t10870 = atan(t10869,t10830);
float t10871 = (u1.u0/30);
float t10872 = (t10870+t10871);
float t10873 = (2*3.1415927);
float t10874 = (t10872+t10873);
float t10875 = mod(t10874,2);
float t10876 = (t10875*3.1415927);
float t10877 = (t10876/t10873);
float t10878 = (t10867*t10822);
float t10879 = (t10824+t10878);
float t10880 = (t10867*t10828);
float t10881 = (t10830+t10880);
vec3 t10882 = vec3(t10869,t10879,t10881);
float t10883 = length(t10882);
float t10884 = (t10883*t10883);
float t10885 = sqrt(t10884);
float t10886 = (t10885-float(2.6));
float t10887 = (t10886/float(11.4));
vec4 t10888 = texture(s4,vec2(t10877,t10887));
t10862 = t10888.x;
t10863 = t10888.y;
t10864 = t10888.z;
vec3 t10889 = vec3(t10888.x,t10888.y,t10888.z);
float t10890 = length(t10889);
float t10891 = (t10890*t10890);
float t10892 = (t10891/float(3.0));
bool t10893 = (t10892<=1);
float t10894;
if(t10893){
t10894 = t10892;
} else {
t10894 = 1;
}
bool t10895 = (t10894>=0);
float t10896;
if(t10895){
t10896 = t10894;
} else {
t10896 = 0;
}
t10865 = t10896;
} else {
t10862 = 0;
t10863 = 0;
t10864 = 0;
t10865 = 0;
}
float t10897 = (1-t10846);
float t10898 = (t10843*t10897);
float t10899 = (t10846+t10898);
float t10900 = (1-t10899);
float t10901 = (t10865*t10900);
float t10902 = (t10862*t10901);
float t10903 = (t10850+t10902);
float t10904 = (t115*t10818);
float t10905 = pow(t10833,float(2.5));
float t10906 = (t10904/t10905);
float t10907 = (t10906*t10816);
float t10908 = (t10815+t10907);
float t10909 = (t10816*u1.u4);
float t10910 = (t10908*t10909);
float t10911 = (t10818+t10910);
float t10912 = (t115*t10824);
float t10913 = (t10912/t10905);
float t10914 = (t10913*t10816);
float t10915 = (t10822+t10914);
float t10916 = (t10915*t10909);
float t10917 = (t10824+t10916);
float t10918 = (t115*t10830);
float t10919 = (t10918/t10905);
float t10920 = (t10919*t10816);
float t10921 = (t10828+t10920);
float t10922 = (t10921*t10909);
float t10923 = (t10830+t10922);
vec3 t10924 = vec3(t10911,t10917,t10923);
float t10925 = length(t10924);
float t10926 = (t10925*t10925);
bool t10927 = (t10926<1);
vec3 t10928 = vec3(t10818,t10824,t10830);
float t10929 = length(t10928);
float t10930 = (t10929*t10929);
bool t10931 = (t10930>1);
bool t10932 = (t10927&&t10931);
float t10933;
float t10934;
float t10935;
float t10936;
if(t10932){
t10933 = 0;
t10934 = 0;
t10935 = 0;
t10936 = 1;
} else {
t10933 = 0;
t10934 = 0;
t10935 = 0;
t10936 = 0;
}
float t10937 = (1-t10899);
float t10938 = (t10865*t10937);
float t10939 = (t10899+t10938);
float t10940 = (1-t10939);
float t10941 = (t10936*t10940);
float t10942 = (t10933*t10941);
float t10943 = (t10903+t10942);
bool t10944 = (t10824>0);
bool t10945 = (t10917>0);
bool t10946 = (!t10945);
bool t10947 = (t10944&&t10946);
bool t10948 = (!t10944);
bool t10949 = (t10945&&t10948);
bool t10950 = (t10947||t10949);
bool t10951 = (t10926<196);
bool t10952 = (t10926>float(6.76));
bool t10953 = (t10951&&t10952);
bool t10954 = (t10950&&t10953);
float t10955;
float t10956;
float t10957;
float t10958;
if(t10954){
float t10959 = (t10917/t10915);
float t10960 = (-t10959);
float t10961 = (t10960*t10908);
float t10962 = (t10911+t10961);
float t10963 = atan(t10962,t10923);
float t10964 = (u1.u0/30);
float t10965 = (t10963+t10964);
float t10966 = (2*3.1415927);
float t10967 = (t10965+t10966);
float t10968 = mod(t10967,2);
float t10969 = (t10968*3.1415927);
float t10970 = (t10969/t10966);
float t10971 = (t10960*t10915);
float t10972 = (t10917+t10971);
float t10973 = (t10960*t10921);
float t10974 = (t10923+t10973);
vec3 t10975 = vec3(t10962,t10972,t10974);
float t10976 = length(t10975);
float t10977 = (t10976*t10976);
float t10978 = sqrt(t10977);
float t10979 = (t10978-float(2.6));
float t10980 = (t10979/float(11.4));
vec4 t10981 = texture(s4,vec2(t10970,t10980));
t10955 = t10981.x;
t10956 = t10981.y;
t10957 = t10981.z;
vec3 t10982 = vec3(t10981.x,t10981.y,t10981.z);
float t10983 = length(t10982);
float t10984 = (t10983*t10983);
float t10985 = (t10984/float(3.0));
bool t10986 = (t10985<=1);
float t10987;
if(t10986){
t10987 = t10985;
} else {
t10987 = 1;
}
bool t10988 = (t10987>=0);
float t10989;
if(t10988){
t10989 = t10987;
} else {
t10989 = 0;
}
t10958 = t10989;
} else {
t10955 = 0;
t10956 = 0;
t10957 = 0;
t10958 = 0;
}
float t10990 = (1-t10939);
float t10991 = (t10936*t10990);
float t10992 = (t10939+t10991);
float t10993 = (1-t10992);
float t10994 = (t10958*t10993);
float t10995 = (t10955*t10994);
float t10996 = (t10943+t10995);
float t10997 = (t115*t10911);
float t10998 = pow(t10926,float(2.5));
float t10999 = (t10997/t10998);
float t11000 = (t10999*t10909);
float t11001 = (t10908+t11000);
float t11002 = (t10909*u1.u4);
float t11003 = (t11001*t11002);
float t11004 = (t10911+t11003);
float t11005 = (t115*t10917);
float t11006 = (t11005/t10998);
float t11007 = (t11006*t10909);
float t11008 = (t10915+t11007);
float t11009 = (t11008*t11002);
float t11010 = (t10917+t11009);
float t11011 = (t115*t10923);
float t11012 = (t11011/t10998);
float t11013 = (t11012*t10909);
float t11014 = (t10921+t11013);
float t11015 = (t11014*t11002);
float t11016 = (t10923+t11015);
vec3 t11017 = vec3(t11004,t11010,t11016);
float t11018 = length(t11017);
float t11019 = (t11018*t11018);
bool t11020 = (t11019<1);
vec3 t11021 = vec3(t10911,t10917,t10923);
float t11022 = length(t11021);
float t11023 = (t11022*t11022);
bool t11024 = (t11023>1);
bool t11025 = (t11020&&t11024);
float t11026;
float t11027;
float t11028;
float t11029;
if(t11025){
t11026 = 0;
t11027 = 0;
t11028 = 0;
t11029 = 1;
} else {
t11026 = 0;
t11027 = 0;
t11028 = 0;
t11029 = 0;
}
float t11030 = (1-t10992);
float t11031 = (t10958*t11030);
float t11032 = (t10992+t11031);
float t11033 = (1-t11032);
float t11034 = (t11029*t11033);
float t11035 = (t11026*t11034);
float t11036 = (t10996+t11035);
bool t11037 = (t10917>0);
bool t11038 = (t11010>0);
bool t11039 = (!t11038);
bool t11040 = (t11037&&t11039);
bool t11041 = (!t11037);
bool t11042 = (t11038&&t11041);
bool t11043 = (t11040||t11042);
bool t11044 = (t11019<196);
bool t11045 = (t11019>float(6.76));
bool t11046 = (t11044&&t11045);
bool t11047 = (t11043&&t11046);
float t11048;
float t11049;
float t11050;
float t11051;
if(t11047){
float t11052 = (t11010/t11008);
float t11053 = (-t11052);
float t11054 = (t11053*t11001);
float t11055 = (t11004+t11054);
float t11056 = atan(t11055,t11016);
float t11057 = (u1.u0/30);
float t11058 = (t11056+t11057);
float t11059 = (2*3.1415927);
float t11060 = (t11058+t11059);
float t11061 = mod(t11060,2);
float t11062 = (t11061*3.1415927);
float t11063 = (t11062/t11059);
float t11064 = (t11053*t11008);
float t11065 = (t11010+t11064);
float t11066 = (t11053*t11014);
float t11067 = (t11016+t11066);
vec3 t11068 = vec3(t11055,t11065,t11067);
float t11069 = length(t11068);
float t11070 = (t11069*t11069);
float t11071 = sqrt(t11070);
float t11072 = (t11071-float(2.6));
float t11073 = (t11072/float(11.4));
vec4 t11074 = texture(s4,vec2(t11063,t11073));
t11048 = t11074.x;
t11049 = t11074.y;
t11050 = t11074.z;
vec3 t11075 = vec3(t11074.x,t11074.y,t11074.z);
float t11076 = length(t11075);
float t11077 = (t11076*t11076);
float t11078 = (t11077/float(3.0));
bool t11079 = (t11078<=1);
float t11080;
if(t11079){
t11080 = t11078;
} else {
t11080 = 1;
}
bool t11081 = (t11080>=0);
float t11082;
if(t11081){
t11082 = t11080;
} else {
t11082 = 0;
}
t11051 = t11082;
} else {
t11048 = 0;
t11049 = 0;
t11050 = 0;
t11051 = 0;
}
float t11083 = (1-t11032);
float t11084 = (t11029*t11083);
float t11085 = (t11032+t11084);
float t11086 = (1-t11085);
float t11087 = (t11051*t11086);
float t11088 = (t11048*t11087);
float t11089 = (t11036+t11088);
float t11090 = (t115*t11004);
float t11091 = pow(t11019,float(2.5));
float t11092 = (t11090/t11091);
float t11093 = (t11092*t11002);
float t11094 = (t11001+t11093);
float t11095 = (t11002*u1.u4);
float t11096 = (t11094*t11095);
float t11097 = (t11004+t11096);
float t11098 = (t115*t11010);
float t11099 = (t11098/t11091);
float t11100 = (t11099*t11002);
float t11101 = (t11008+t11100);
float t11102 = (t11101*t11095);
float t11103 = (t11010+t11102);
float t11104 = (t115*t11016);
float t11105 = (t11104/t11091);
float t11106 = (t11105*t11002);
float t11107 = (t11014+t11106);
float t11108 = (t11107*t11095);
float t11109 = (t11016+t11108);
vec3 t11110 = vec3(t11097,t11103,t11109);
float t11111 = length(t11110);
float t11112 = (t11111*t11111);
bool t11113 = (t11112<1);
vec3 t11114 = vec3(t11004,t11010,t11016);
float t11115 = length(t11114);
float t11116 = (t11115*t11115);
bool t11117 = (t11116>1);
bool t11118 = (t11113&&t11117);
float t11119;
float t11120;
float t11121;
float t11122;
if(t11118){
t11119 = 0;
t11120 = 0;
t11121 = 0;
t11122 = 1;
} else {
t11119 = 0;
t11120 = 0;
t11121 = 0;
t11122 = 0;
}
float t11123 = (1-t11085);
float t11124 = (t11051*t11123);
float t11125 = (t11085+t11124);
float t11126 = (1-t11125);
float t11127 = (t11122*t11126);
float t11128 = (t11119*t11127);
float t11129 = (t11089+t11128);
bool t11130 = (t11010>0);
bool t11131 = (t11103>0);
bool t11132 = (!t11131);
bool t11133 = (t11130&&t11132);
bool t11134 = (!t11130);
bool t11135 = (t11131&&t11134);
bool t11136 = (t11133||t11135);
bool t11137 = (t11112<196);
bool t11138 = (t11112>float(6.76));
bool t11139 = (t11137&&t11138);
bool t11140 = (t11136&&t11139);
float t11141;
float t11142;
float t11143;
float t11144;
if(t11140){
float t11145 = (t11103/t11101);
float t11146 = (-t11145);
float t11147 = (t11146*t11094);
float t11148 = (t11097+t11147);
float t11149 = atan(t11148,t11109);
float t11150 = (u1.u0/30);
float t11151 = (t11149+t11150);
float t11152 = (2*3.1415927);
float t11153 = (t11151+t11152);
float t11154 = mod(t11153,2);
float t11155 = (t11154*3.1415927);
float t11156 = (t11155/t11152);
float t11157 = (t11146*t11101);
float t11158 = (t11103+t11157);
float t11159 = (t11146*t11107);
float t11160 = (t11109+t11159);
vec3 t11161 = vec3(t11148,t11158,t11160);
float t11162 = length(t11161);
float t11163 = (t11162*t11162);
float t11164 = sqrt(t11163);
float t11165 = (t11164-float(2.6));
float t11166 = (t11165/float(11.4));
vec4 t11167 = texture(s4,vec2(t11156,t11166));
t11141 = t11167.x;
t11142 = t11167.y;
t11143 = t11167.z;
vec3 t11168 = vec3(t11167.x,t11167.y,t11167.z);
float t11169 = length(t11168);
float t11170 = (t11169*t11169);
float t11171 = (t11170/float(3.0));
bool t11172 = (t11171<=1);
float t11173;
if(t11172){
t11173 = t11171;
} else {
t11173 = 1;
}
bool t11174 = (t11173>=0);
float t11175;
if(t11174){
t11175 = t11173;
} else {
t11175 = 0;
}
t11144 = t11175;
} else {
t11141 = 0;
t11142 = 0;
t11143 = 0;
t11144 = 0;
}
float t11176 = (1-t11125);
float t11177 = (t11122*t11176);
float t11178 = (t11125+t11177);
float t11179 = (1-t11178);
float t11180 = (t11144*t11179);
float t11181 = (t11141*t11180);
float t11182 = (t11129+t11181);
float t11183 = (t115*t11097);
float t11184 = pow(t11112,float(2.5));
float t11185 = (t11183/t11184);
float t11186 = (t11185*t11095);
float t11187 = (t11094+t11186);
float t11188 = (t11095*u1.u4);
float t11189 = (t11187*t11188);
float t11190 = (t11097+t11189);
float t11191 = (t115*t11103);
float t11192 = (t11191/t11184);
float t11193 = (t11192*t11095);
float t11194 = (t11101+t11193);
float t11195 = (t11194*t11188);
float t11196 = (t11103+t11195);
float t11197 = (t115*t11109);
float t11198 = (t11197/t11184);
float t11199 = (t11198*t11095);
float t11200 = (t11107+t11199);
float t11201 = (t11200*t11188);
float t11202 = (t11109+t11201);
vec3 t11203 = vec3(t11190,t11196,t11202);
float t11204 = length(t11203);
float t11205 = (t11204*t11204);
bool t11206 = (t11205<1);
vec3 t11207 = vec3(t11097,t11103,t11109);
float t11208 = length(t11207);
float t11209 = (t11208*t11208);
bool t11210 = (t11209>1);
bool t11211 = (t11206&&t11210);
float t11212;
float t11213;
float t11214;
float t11215;
if(t11211){
t11212 = 0;
t11213 = 0;
t11214 = 0;
t11215 = 1;
} else {
t11212 = 0;
t11213 = 0;
t11214 = 0;
t11215 = 0;
}
float t11216 = (1-t11178);
float t11217 = (t11144*t11216);
float t11218 = (t11178+t11217);
float t11219 = (1-t11218);
float t11220 = (t11215*t11219);
float t11221 = (t11212*t11220);
float t11222 = (t11182+t11221);
bool t11223 = (t11103>0);
bool t11224 = (t11196>0);
bool t11225 = (!t11224);
bool t11226 = (t11223&&t11225);
bool t11227 = (!t11223);
bool t11228 = (t11224&&t11227);
bool t11229 = (t11226||t11228);
bool t11230 = (t11205<196);
bool t11231 = (t11205>float(6.76));
bool t11232 = (t11230&&t11231);
bool t11233 = (t11229&&t11232);
float t11234;
float t11235;
float t11236;
float t11237;
if(t11233){
float t11238 = (t11196/t11194);
float t11239 = (-t11238);
float t11240 = (t11239*t11187);
float t11241 = (t11190+t11240);
float t11242 = atan(t11241,t11202);
float t11243 = (u1.u0/30);
float t11244 = (t11242+t11243);
float t11245 = (2*3.1415927);
float t11246 = (t11244+t11245);
float t11247 = mod(t11246,2);
float t11248 = (t11247*3.1415927);
float t11249 = (t11248/t11245);
float t11250 = (t11239*t11194);
float t11251 = (t11196+t11250);
float t11252 = (t11239*t11200);
float t11253 = (t11202+t11252);
vec3 t11254 = vec3(t11241,t11251,t11253);
float t11255 = length(t11254);
float t11256 = (t11255*t11255);
float t11257 = sqrt(t11256);
float t11258 = (t11257-float(2.6));
float t11259 = (t11258/float(11.4));
vec4 t11260 = texture(s4,vec2(t11249,t11259));
t11234 = t11260.x;
t11235 = t11260.y;
t11236 = t11260.z;
vec3 t11261 = vec3(t11260.x,t11260.y,t11260.z);
float t11262 = length(t11261);
float t11263 = (t11262*t11262);
float t11264 = (t11263/float(3.0));
bool t11265 = (t11264<=1);
float t11266;
if(t11265){
t11266 = t11264;
} else {
t11266 = 1;
}
bool t11267 = (t11266>=0);
float t11268;
if(t11267){
t11268 = t11266;
} else {
t11268 = 0;
}
t11237 = t11268;
} else {
t11234 = 0;
t11235 = 0;
t11236 = 0;
t11237 = 0;
}
float t11269 = (1-t11218);
float t11270 = (t11215*t11269);
float t11271 = (t11218+t11270);
float t11272 = (1-t11271);
float t11273 = (t11237*t11272);
float t11274 = (t11234*t11273);
float t11275 = (t11222+t11274);
float t11276 = (t115*t11190);
float t11277 = pow(t11205,float(2.5));
float t11278 = (t11276/t11277);
float t11279 = (t11278*t11188);
float t11280 = (t11187+t11279);
float t11281 = (t11188*u1.u4);
float t11282 = (t11280*t11281);
float t11283 = (t11190+t11282);
float t11284 = (t115*t11196);
float t11285 = (t11284/t11277);
float t11286 = (t11285*t11188);
float t11287 = (t11194+t11286);
float t11288 = (t11287*t11281);
float t11289 = (t11196+t11288);
float t11290 = (t115*t11202);
float t11291 = (t11290/t11277);
float t11292 = (t11291*t11188);
float t11293 = (t11200+t11292);
float t11294 = (t11293*t11281);
float t11295 = (t11202+t11294);
vec3 t11296 = vec3(t11283,t11289,t11295);
float t11297 = length(t11296);
float t11298 = (t11297*t11297);
bool t11299 = (t11298<1);
vec3 t11300 = vec3(t11190,t11196,t11202);
float t11301 = length(t11300);
float t11302 = (t11301*t11301);
bool t11303 = (t11302>1);
bool t11304 = (t11299&&t11303);
float t11305;
float t11306;
float t11307;
float t11308;
if(t11304){
t11305 = 0;
t11306 = 0;
t11307 = 0;
t11308 = 1;
} else {
t11305 = 0;
t11306 = 0;
t11307 = 0;
t11308 = 0;
}
float t11309 = (1-t11271);
float t11310 = (t11237*t11309);
float t11311 = (t11271+t11310);
float t11312 = (1-t11311);
float t11313 = (t11308*t11312);
float t11314 = (t11305*t11313);
float t11315 = (t11275+t11314);
bool t11316 = (t11196>0);
bool t11317 = (t11289>0);
bool t11318 = (!t11317);
bool t11319 = (t11316&&t11318);
bool t11320 = (!t11316);
bool t11321 = (t11317&&t11320);
bool t11322 = (t11319||t11321);
bool t11323 = (t11298<196);
bool t11324 = (t11298>float(6.76));
bool t11325 = (t11323&&t11324);
bool t11326 = (t11322&&t11325);
float t11327;
float t11328;
float t11329;
float t11330;
if(t11326){
float t11331 = (t11289/t11287);
float t11332 = (-t11331);
float t11333 = (t11332*t11280);
float t11334 = (t11283+t11333);
float t11335 = atan(t11334,t11295);
float t11336 = (u1.u0/30);
float t11337 = (t11335+t11336);
float t11338 = (2*3.1415927);
float t11339 = (t11337+t11338);
float t11340 = mod(t11339,2);
float t11341 = (t11340*3.1415927);
float t11342 = (t11341/t11338);
float t11343 = (t11332*t11287);
float t11344 = (t11289+t11343);
float t11345 = (t11332*t11293);
float t11346 = (t11295+t11345);
vec3 t11347 = vec3(t11334,t11344,t11346);
float t11348 = length(t11347);
float t11349 = (t11348*t11348);
float t11350 = sqrt(t11349);
float t11351 = (t11350-float(2.6));
float t11352 = (t11351/float(11.4));
vec4 t11353 = texture(s4,vec2(t11342,t11352));
t11327 = t11353.x;
t11328 = t11353.y;
t11329 = t11353.z;
vec3 t11354 = vec3(t11353.x,t11353.y,t11353.z);
float t11355 = length(t11354);
float t11356 = (t11355*t11355);
float t11357 = (t11356/float(3.0));
bool t11358 = (t11357<=1);
float t11359;
if(t11358){
t11359 = t11357;
} else {
t11359 = 1;
}
bool t11360 = (t11359>=0);
float t11361;
if(t11360){
t11361 = t11359;
} else {
t11361 = 0;
}
t11330 = t11361;
} else {
t11327 = 0;
t11328 = 0;
t11329 = 0;
t11330 = 0;
}
float t11362 = (1-t11311);
float t11363 = (t11308*t11362);
float t11364 = (t11311+t11363);
float t11365 = (1-t11364);
float t11366 = (t11330*t11365);
float t11367 = (t11327*t11366);
float t11368 = (t11315+t11367);
float t11369 = (t115*t11283);
float t11370 = pow(t11298,float(2.5));
float t11371 = (t11369/t11370);
float t11372 = (t11371*t11281);
float t11373 = (t11280+t11372);
float t11374 = (t11281*u1.u4);
float t11375 = (t11373*t11374);
float t11376 = (t11283+t11375);
float t11377 = (t115*t11289);
float t11378 = (t11377/t11370);
float t11379 = (t11378*t11281);
float t11380 = (t11287+t11379);
float t11381 = (t11380*t11374);
float t11382 = (t11289+t11381);
float t11383 = (t115*t11295);
float t11384 = (t11383/t11370);
float t11385 = (t11384*t11281);
float t11386 = (t11293+t11385);
float t11387 = (t11386*t11374);
float t11388 = (t11295+t11387);
vec3 t11389 = vec3(t11376,t11382,t11388);
float t11390 = length(t11389);
float t11391 = (t11390*t11390);
bool t11392 = (t11391<1);
vec3 t11393 = vec3(t11283,t11289,t11295);
float t11394 = length(t11393);
float t11395 = (t11394*t11394);
bool t11396 = (t11395>1);
bool t11397 = (t11392&&t11396);
float t11398;
float t11399;
float t11400;
float t11401;
if(t11397){
t11398 = 0;
t11399 = 0;
t11400 = 0;
t11401 = 1;
} else {
t11398 = 0;
t11399 = 0;
t11400 = 0;
t11401 = 0;
}
float t11402 = (1-t11364);
float t11403 = (t11330*t11402);
float t11404 = (t11364+t11403);
float t11405 = (1-t11404);
float t11406 = (t11401*t11405);
float t11407 = (t11398*t11406);
float t11408 = (t11368+t11407);
bool t11409 = (t11289>0);
bool t11410 = (t11382>0);
bool t11411 = (!t11410);
bool t11412 = (t11409&&t11411);
bool t11413 = (!t11409);
bool t11414 = (t11410&&t11413);
bool t11415 = (t11412||t11414);
bool t11416 = (t11391<196);
bool t11417 = (t11391>float(6.76));
bool t11418 = (t11416&&t11417);
bool t11419 = (t11415&&t11418);
float t11420;
float t11421;
float t11422;
float t11423;
if(t11419){
float t11424 = (t11382/t11380);
float t11425 = (-t11424);
float t11426 = (t11425*t11373);
float t11427 = (t11376+t11426);
float t11428 = atan(t11427,t11388);
float t11429 = (u1.u0/30);
float t11430 = (t11428+t11429);
float t11431 = (2*3.1415927);
float t11432 = (t11430+t11431);
float t11433 = mod(t11432,2);
float t11434 = (t11433*3.1415927);
float t11435 = (t11434/t11431);
float t11436 = (t11425*t11380);
float t11437 = (t11382+t11436);
float t11438 = (t11425*t11386);
float t11439 = (t11388+t11438);
vec3 t11440 = vec3(t11427,t11437,t11439);
float t11441 = length(t11440);
float t11442 = (t11441*t11441);
float t11443 = sqrt(t11442);
float t11444 = (t11443-float(2.6));
float t11445 = (t11444/float(11.4));
vec4 t11446 = texture(s4,vec2(t11435,t11445));
t11420 = t11446.x;
t11421 = t11446.y;
t11422 = t11446.z;
vec3 t11447 = vec3(t11446.x,t11446.y,t11446.z);
float t11448 = length(t11447);
float t11449 = (t11448*t11448);
float t11450 = (t11449/float(3.0));
bool t11451 = (t11450<=1);
float t11452;
if(t11451){
t11452 = t11450;
} else {
t11452 = 1;
}
bool t11453 = (t11452>=0);
float t11454;
if(t11453){
t11454 = t11452;
} else {
t11454 = 0;
}
t11423 = t11454;
} else {
t11420 = 0;
t11421 = 0;
t11422 = 0;
t11423 = 0;
}
float t11455 = (1-t11404);
float t11456 = (t11401*t11455);
float t11457 = (t11404+t11456);
float t11458 = (1-t11457);
float t11459 = (t11423*t11458);
float t11460 = (t11420*t11459);
float t11461 = (t11408+t11460);
float t11462 = (t115*t11376);
float t11463 = pow(t11391,float(2.5));
float t11464 = (t11462/t11463);
float t11465 = (t11464*t11374);
float t11466 = (t11373+t11465);
float t11467 = (t11374*u1.u4);
float t11468 = (t11466*t11467);
float t11469 = (t11376+t11468);
float t11470 = (t115*t11382);
float t11471 = (t11470/t11463);
float t11472 = (t11471*t11374);
float t11473 = (t11380+t11472);
float t11474 = (t11473*t11467);
float t11475 = (t11382+t11474);
float t11476 = (t115*t11388);
float t11477 = (t11476/t11463);
float t11478 = (t11477*t11374);
float t11479 = (t11386+t11478);
float t11480 = (t11479*t11467);
float t11481 = (t11388+t11480);
vec3 t11482 = vec3(t11469,t11475,t11481);
float t11483 = length(t11482);
float t11484 = (t11483*t11483);
bool t11485 = (t11484<1);
vec3 t11486 = vec3(t11376,t11382,t11388);
float t11487 = length(t11486);
float t11488 = (t11487*t11487);
bool t11489 = (t11488>1);
bool t11490 = (t11485&&t11489);
float t11491;
float t11492;
float t11493;
float t11494;
if(t11490){
t11491 = 0;
t11492 = 0;
t11493 = 0;
t11494 = 1;
} else {
t11491 = 0;
t11492 = 0;
t11493 = 0;
t11494 = 0;
}
float t11495 = (1-t11457);
float t11496 = (t11423*t11495);
float t11497 = (t11457+t11496);
float t11498 = (1-t11497);
float t11499 = (t11494*t11498);
float t11500 = (t11491*t11499);
float t11501 = (t11461+t11500);
bool t11502 = (t11382>0);
bool t11503 = (t11475>0);
bool t11504 = (!t11503);
bool t11505 = (t11502&&t11504);
bool t11506 = (!t11502);
bool t11507 = (t11503&&t11506);
bool t11508 = (t11505||t11507);
bool t11509 = (t11484<196);
bool t11510 = (t11484>float(6.76));
bool t11511 = (t11509&&t11510);
bool t11512 = (t11508&&t11511);
float t11513;
float t11514;
float t11515;
float t11516;
if(t11512){
float t11517 = (t11475/t11473);
float t11518 = (-t11517);
float t11519 = (t11518*t11466);
float t11520 = (t11469+t11519);
float t11521 = atan(t11520,t11481);
float t11522 = (u1.u0/30);
float t11523 = (t11521+t11522);
float t11524 = (2*3.1415927);
float t11525 = (t11523+t11524);
float t11526 = mod(t11525,2);
float t11527 = (t11526*3.1415927);
float t11528 = (t11527/t11524);
float t11529 = (t11518*t11473);
float t11530 = (t11475+t11529);
float t11531 = (t11518*t11479);
float t11532 = (t11481+t11531);
vec3 t11533 = vec3(t11520,t11530,t11532);
float t11534 = length(t11533);
float t11535 = (t11534*t11534);
float t11536 = sqrt(t11535);
float t11537 = (t11536-float(2.6));
float t11538 = (t11537/float(11.4));
vec4 t11539 = texture(s4,vec2(t11528,t11538));
t11513 = t11539.x;
t11514 = t11539.y;
t11515 = t11539.z;
vec3 t11540 = vec3(t11539.x,t11539.y,t11539.z);
float t11541 = length(t11540);
float t11542 = (t11541*t11541);
float t11543 = (t11542/float(3.0));
bool t11544 = (t11543<=1);
float t11545;
if(t11544){
t11545 = t11543;
} else {
t11545 = 1;
}
bool t11546 = (t11545>=0);
float t11547;
if(t11546){
t11547 = t11545;
} else {
t11547 = 0;
}
t11516 = t11547;
} else {
t11513 = 0;
t11514 = 0;
t11515 = 0;
t11516 = 0;
}
float t11548 = (1-t11497);
float t11549 = (t11494*t11548);
float t11550 = (t11497+t11549);
float t11551 = (1-t11550);
float t11552 = (t11516*t11551);
float t11553 = (t11513*t11552);
float t11554 = (t11501+t11553);
float t11555 = (t115*t11469);
float t11556 = pow(t11484,float(2.5));
float t11557 = (t11555/t11556);
float t11558 = (t11557*t11467);
float t11559 = (t11466+t11558);
float t11560 = (t11467*u1.u4);
float t11561 = (t11559*t11560);
float t11562 = (t11469+t11561);
float t11563 = (t115*t11475);
float t11564 = (t11563/t11556);
float t11565 = (t11564*t11467);
float t11566 = (t11473+t11565);
float t11567 = (t11566*t11560);
float t11568 = (t11475+t11567);
float t11569 = (t115*t11481);
float t11570 = (t11569/t11556);
float t11571 = (t11570*t11467);
float t11572 = (t11479+t11571);
float t11573 = (t11572*t11560);
float t11574 = (t11481+t11573);
vec3 t11575 = vec3(t11562,t11568,t11574);
float t11576 = length(t11575);
float t11577 = (t11576*t11576);
bool t11578 = (t11577<1);
vec3 t11579 = vec3(t11469,t11475,t11481);
float t11580 = length(t11579);
float t11581 = (t11580*t11580);
bool t11582 = (t11581>1);
bool t11583 = (t11578&&t11582);
float t11584;
float t11585;
float t11586;
float t11587;
if(t11583){
t11584 = 0;
t11585 = 0;
t11586 = 0;
t11587 = 1;
} else {
t11584 = 0;
t11585 = 0;
t11586 = 0;
t11587 = 0;
}
float t11588 = (1-t11550);
float t11589 = (t11516*t11588);
float t11590 = (t11550+t11589);
float t11591 = (1-t11590);
float t11592 = (t11587*t11591);
float t11593 = (t11584*t11592);
float t11594 = (t11554+t11593);
bool t11595 = (t11475>0);
bool t11596 = (t11568>0);
bool t11597 = (!t11596);
bool t11598 = (t11595&&t11597);
bool t11599 = (!t11595);
bool t11600 = (t11596&&t11599);
bool t11601 = (t11598||t11600);
bool t11602 = (t11577<196);
bool t11603 = (t11577>float(6.76));
bool t11604 = (t11602&&t11603);
bool t11605 = (t11601&&t11604);
float t11606;
float t11607;
float t11608;
float t11609;
if(t11605){
float t11610 = (t11568/t11566);
float t11611 = (-t11610);
float t11612 = (t11611*t11559);
float t11613 = (t11562+t11612);
float t11614 = atan(t11613,t11574);
float t11615 = (u1.u0/30);
float t11616 = (t11614+t11615);
float t11617 = (2*3.1415927);
float t11618 = (t11616+t11617);
float t11619 = mod(t11618,2);
float t11620 = (t11619*3.1415927);
float t11621 = (t11620/t11617);
float t11622 = (t11611*t11566);
float t11623 = (t11568+t11622);
float t11624 = (t11611*t11572);
float t11625 = (t11574+t11624);
vec3 t11626 = vec3(t11613,t11623,t11625);
float t11627 = length(t11626);
float t11628 = (t11627*t11627);
float t11629 = sqrt(t11628);
float t11630 = (t11629-float(2.6));
float t11631 = (t11630/float(11.4));
vec4 t11632 = texture(s4,vec2(t11621,t11631));
t11606 = t11632.x;
t11607 = t11632.y;
t11608 = t11632.z;
vec3 t11633 = vec3(t11632.x,t11632.y,t11632.z);
float t11634 = length(t11633);
float t11635 = (t11634*t11634);
float t11636 = (t11635/float(3.0));
bool t11637 = (t11636<=1);
float t11638;
if(t11637){
t11638 = t11636;
} else {
t11638 = 1;
}
bool t11639 = (t11638>=0);
float t11640;
if(t11639){
t11640 = t11638;
} else {
t11640 = 0;
}
t11609 = t11640;
} else {
t11606 = 0;
t11607 = 0;
t11608 = 0;
t11609 = 0;
}
float t11641 = (1-t11590);
float t11642 = (t11587*t11641);
float t11643 = (t11590+t11642);
float t11644 = (1-t11643);
float t11645 = (t11609*t11644);
float t11646 = (t11606*t11645);
float t11647 = (t11594+t11646);
float t11648 = (t115*t11562);
float t11649 = pow(t11577,float(2.5));
float t11650 = (t11648/t11649);
float t11651 = (t11650*t11560);
float t11652 = (t11559+t11651);
float t11653 = (t11560*u1.u4);
float t11654 = (t11652*t11653);
float t11655 = (t11562+t11654);
float t11656 = (t115*t11568);
float t11657 = (t11656/t11649);
float t11658 = (t11657*t11560);
float t11659 = (t11566+t11658);
float t11660 = (t11659*t11653);
float t11661 = (t11568+t11660);
float t11662 = (t115*t11574);
float t11663 = (t11662/t11649);
float t11664 = (t11663*t11560);
float t11665 = (t11572+t11664);
float t11666 = (t11665*t11653);
float t11667 = (t11574+t11666);
vec3 t11668 = vec3(t11655,t11661,t11667);
float t11669 = length(t11668);
float t11670 = (t11669*t11669);
bool t11671 = (t11670<1);
vec3 t11672 = vec3(t11562,t11568,t11574);
float t11673 = length(t11672);
float t11674 = (t11673*t11673);
bool t11675 = (t11674>1);
bool t11676 = (t11671&&t11675);
float t11677;
float t11678;
float t11679;
float t11680;
if(t11676){
t11677 = 0;
t11678 = 0;
t11679 = 0;
t11680 = 1;
} else {
t11677 = 0;
t11678 = 0;
t11679 = 0;
t11680 = 0;
}
float t11681 = (1-t11643);
float t11682 = (t11609*t11681);
float t11683 = (t11643+t11682);
float t11684 = (1-t11683);
float t11685 = (t11680*t11684);
float t11686 = (t11677*t11685);
float t11687 = (t11647+t11686);
bool t11688 = (t11568>0);
bool t11689 = (t11661>0);
bool t11690 = (!t11689);
bool t11691 = (t11688&&t11690);
bool t11692 = (!t11688);
bool t11693 = (t11689&&t11692);
bool t11694 = (t11691||t11693);
bool t11695 = (t11670<196);
bool t11696 = (t11670>float(6.76));
bool t11697 = (t11695&&t11696);
bool t11698 = (t11694&&t11697);
float t11699;
float t11700;
float t11701;
float t11702;
if(t11698){
float t11703 = (t11661/t11659);
float t11704 = (-t11703);
float t11705 = (t11704*t11652);
float t11706 = (t11655+t11705);
float t11707 = atan(t11706,t11667);
float t11708 = (u1.u0/30);
float t11709 = (t11707+t11708);
float t11710 = (2*3.1415927);
float t11711 = (t11709+t11710);
float t11712 = mod(t11711,2);
float t11713 = (t11712*3.1415927);
float t11714 = (t11713/t11710);
float t11715 = (t11704*t11659);
float t11716 = (t11661+t11715);
float t11717 = (t11704*t11665);
float t11718 = (t11667+t11717);
vec3 t11719 = vec3(t11706,t11716,t11718);
float t11720 = length(t11719);
float t11721 = (t11720*t11720);
float t11722 = sqrt(t11721);
float t11723 = (t11722-float(2.6));
float t11724 = (t11723/float(11.4));
vec4 t11725 = texture(s4,vec2(t11714,t11724));
t11699 = t11725.x;
t11700 = t11725.y;
t11701 = t11725.z;
vec3 t11726 = vec3(t11725.x,t11725.y,t11725.z);
float t11727 = length(t11726);
float t11728 = (t11727*t11727);
float t11729 = (t11728/float(3.0));
bool t11730 = (t11729<=1);
float t11731;
if(t11730){
t11731 = t11729;
} else {
t11731 = 1;
}
bool t11732 = (t11731>=0);
float t11733;
if(t11732){
t11733 = t11731;
} else {
t11733 = 0;
}
t11702 = t11733;
} else {
t11699 = 0;
t11700 = 0;
t11701 = 0;
t11702 = 0;
}
float t11734 = (1-t11683);
float t11735 = (t11680*t11734);
float t11736 = (t11683+t11735);
float t11737 = (1-t11736);
float t11738 = (t11702*t11737);
float t11739 = (t11699*t11738);
float t11740 = (t11687+t11739);
float t11741 = (t115*t11655);
float t11742 = pow(t11670,float(2.5));
float t11743 = (t11741/t11742);
float t11744 = (t11743*t11653);
float t11745 = (t11652+t11744);
float t11746 = (t11653*u1.u4);
float t11747 = (t11745*t11746);
float t11748 = (t11655+t11747);
float t11749 = (t115*t11661);
float t11750 = (t11749/t11742);
float t11751 = (t11750*t11653);
float t11752 = (t11659+t11751);
float t11753 = (t11752*t11746);
float t11754 = (t11661+t11753);
float t11755 = (t115*t11667);
float t11756 = (t11755/t11742);
float t11757 = (t11756*t11653);
float t11758 = (t11665+t11757);
float t11759 = (t11758*t11746);
float t11760 = (t11667+t11759);
vec3 t11761 = vec3(t11748,t11754,t11760);
float t11762 = length(t11761);
float t11763 = (t11762*t11762);
bool t11764 = (t11763<1);
vec3 t11765 = vec3(t11655,t11661,t11667);
float t11766 = length(t11765);
float t11767 = (t11766*t11766);
bool t11768 = (t11767>1);
bool t11769 = (t11764&&t11768);
float t11770;
float t11771;
float t11772;
float t11773;
if(t11769){
t11770 = 0;
t11771 = 0;
t11772 = 0;
t11773 = 1;
} else {
t11770 = 0;
t11771 = 0;
t11772 = 0;
t11773 = 0;
}
float t11774 = (1-t11736);
float t11775 = (t11702*t11774);
float t11776 = (t11736+t11775);
float t11777 = (1-t11776);
float t11778 = (t11773*t11777);
float t11779 = (t11770*t11778);
float t11780 = (t11740+t11779);
bool t11781 = (t11661>0);
bool t11782 = (t11754>0);
bool t11783 = (!t11782);
bool t11784 = (t11781&&t11783);
bool t11785 = (!t11781);
bool t11786 = (t11782&&t11785);
bool t11787 = (t11784||t11786);
bool t11788 = (t11763<196);
bool t11789 = (t11763>float(6.76));
bool t11790 = (t11788&&t11789);
bool t11791 = (t11787&&t11790);
float t11792;
float t11793;
float t11794;
float t11795;
if(t11791){
float t11796 = (t11754/t11752);
float t11797 = (-t11796);
float t11798 = (t11797*t11745);
float t11799 = (t11748+t11798);
float t11800 = atan(t11799,t11760);
float t11801 = (u1.u0/30);
float t11802 = (t11800+t11801);
float t11803 = (2*3.1415927);
float t11804 = (t11802+t11803);
float t11805 = mod(t11804,2);
float t11806 = (t11805*3.1415927);
float t11807 = (t11806/t11803);
float t11808 = (t11797*t11752);
float t11809 = (t11754+t11808);
float t11810 = (t11797*t11758);
float t11811 = (t11760+t11810);
vec3 t11812 = vec3(t11799,t11809,t11811);
float t11813 = length(t11812);
float t11814 = (t11813*t11813);
float t11815 = sqrt(t11814);
float t11816 = (t11815-float(2.6));
float t11817 = (t11816/float(11.4));
vec4 t11818 = texture(s4,vec2(t11807,t11817));
t11792 = t11818.x;
t11793 = t11818.y;
t11794 = t11818.z;
vec3 t11819 = vec3(t11818.x,t11818.y,t11818.z);
float t11820 = length(t11819);
float t11821 = (t11820*t11820);
float t11822 = (t11821/float(3.0));
bool t11823 = (t11822<=1);
float t11824;
if(t11823){
t11824 = t11822;
} else {
t11824 = 1;
}
bool t11825 = (t11824>=0);
float t11826;
if(t11825){
t11826 = t11824;
} else {
t11826 = 0;
}
t11795 = t11826;
} else {
t11792 = 0;
t11793 = 0;
t11794 = 0;
t11795 = 0;
}
float t11827 = (1-t11776);
float t11828 = (t11773*t11827);
float t11829 = (t11776+t11828);
float t11830 = (1-t11829);
float t11831 = (t11795*t11830);
float t11832 = (t11792*t11831);
float t11833 = (t11780+t11832);
float t11834 = (t115*t11748);
float t11835 = pow(t11763,float(2.5));
float t11836 = (t11834/t11835);
float t11837 = (t11836*t11746);
float t11838 = (t11745+t11837);
float t11839 = (t11746*u1.u4);
float t11840 = (t11838*t11839);
float t11841 = (t11748+t11840);
float t11842 = (t115*t11754);
float t11843 = (t11842/t11835);
float t11844 = (t11843*t11746);
float t11845 = (t11752+t11844);
float t11846 = (t11845*t11839);
float t11847 = (t11754+t11846);
float t11848 = (t115*t11760);
float t11849 = (t11848/t11835);
float t11850 = (t11849*t11746);
float t11851 = (t11758+t11850);
float t11852 = (t11851*t11839);
float t11853 = (t11760+t11852);
vec3 t11854 = vec3(t11841,t11847,t11853);
float t11855 = length(t11854);
float t11856 = (t11855*t11855);
bool t11857 = (t11856<1);
vec3 t11858 = vec3(t11748,t11754,t11760);
float t11859 = length(t11858);
float t11860 = (t11859*t11859);
bool t11861 = (t11860>1);
bool t11862 = (t11857&&t11861);
float t11863;
float t11864;
float t11865;
float t11866;
if(t11862){
t11863 = 0;
t11864 = 0;
t11865 = 0;
t11866 = 1;
} else {
t11863 = 0;
t11864 = 0;
t11865 = 0;
t11866 = 0;
}
float t11867 = (1-t11829);
float t11868 = (t11795*t11867);
float t11869 = (t11829+t11868);
float t11870 = (1-t11869);
float t11871 = (t11866*t11870);
float t11872 = (t11863*t11871);
float t11873 = (t11833+t11872);
bool t11874 = (t11754>0);
bool t11875 = (t11847>0);
bool t11876 = (!t11875);
bool t11877 = (t11874&&t11876);
bool t11878 = (!t11874);
bool t11879 = (t11875&&t11878);
bool t11880 = (t11877||t11879);
bool t11881 = (t11856<196);
bool t11882 = (t11856>float(6.76));
bool t11883 = (t11881&&t11882);
bool t11884 = (t11880&&t11883);
float t11885;
float t11886;
float t11887;
float t11888;
if(t11884){
float t11889 = (t11847/t11845);
float t11890 = (-t11889);
float t11891 = (t11890*t11838);
float t11892 = (t11841+t11891);
float t11893 = atan(t11892,t11853);
float t11894 = (u1.u0/30);
float t11895 = (t11893+t11894);
float t11896 = (2*3.1415927);
float t11897 = (t11895+t11896);
float t11898 = mod(t11897,2);
float t11899 = (t11898*3.1415927);
float t11900 = (t11899/t11896);
float t11901 = (t11890*t11845);
float t11902 = (t11847+t11901);
float t11903 = (t11890*t11851);
float t11904 = (t11853+t11903);
vec3 t11905 = vec3(t11892,t11902,t11904);
float t11906 = length(t11905);
float t11907 = (t11906*t11906);
float t11908 = sqrt(t11907);
float t11909 = (t11908-float(2.6));
float t11910 = (t11909/float(11.4));
vec4 t11911 = texture(s4,vec2(t11900,t11910));
t11885 = t11911.x;
t11886 = t11911.y;
t11887 = t11911.z;
vec3 t11912 = vec3(t11911.x,t11911.y,t11911.z);
float t11913 = length(t11912);
float t11914 = (t11913*t11913);
float t11915 = (t11914/float(3.0));
bool t11916 = (t11915<=1);
float t11917;
if(t11916){
t11917 = t11915;
} else {
t11917 = 1;
}
bool t11918 = (t11917>=0);
float t11919;
if(t11918){
t11919 = t11917;
} else {
t11919 = 0;
}
t11888 = t11919;
} else {
t11885 = 0;
t11886 = 0;
t11887 = 0;
t11888 = 0;
}
float t11920 = (1-t11869);
float t11921 = (t11866*t11920);
float t11922 = (t11869+t11921);
float t11923 = (1-t11922);
float t11924 = (t11888*t11923);
float t11925 = (t11885*t11924);
float t11926 = (t11873+t11925);
float t11927 = (t115*t11841);
float t11928 = pow(t11856,float(2.5));
float t11929 = (t11927/t11928);
float t11930 = (t11929*t11839);
float t11931 = (t11838+t11930);
float t11932 = (t11839*u1.u4);
float t11933 = (t11931*t11932);
float t11934 = (t11841+t11933);
float t11935 = (t115*t11847);
float t11936 = (t11935/t11928);
float t11937 = (t11936*t11839);
float t11938 = (t11845+t11937);
float t11939 = (t11938*t11932);
float t11940 = (t11847+t11939);
float t11941 = (t115*t11853);
float t11942 = (t11941/t11928);
float t11943 = (t11942*t11839);
float t11944 = (t11851+t11943);
float t11945 = (t11944*t11932);
float t11946 = (t11853+t11945);
vec3 t11947 = vec3(t11934,t11940,t11946);
float t11948 = length(t11947);
float t11949 = (t11948*t11948);
bool t11950 = (t11949<1);
vec3 t11951 = vec3(t11841,t11847,t11853);
float t11952 = length(t11951);
float t11953 = (t11952*t11952);
bool t11954 = (t11953>1);
bool t11955 = (t11950&&t11954);
float t11956;
float t11957;
float t11958;
float t11959;
if(t11955){
t11956 = 0;
t11957 = 0;
t11958 = 0;
t11959 = 1;
} else {
t11956 = 0;
t11957 = 0;
t11958 = 0;
t11959 = 0;
}
float t11960 = (1-t11922);
float t11961 = (t11888*t11960);
float t11962 = (t11922+t11961);
float t11963 = (1-t11962);
float t11964 = (t11959*t11963);
float t11965 = (t11956*t11964);
float t11966 = (t11926+t11965);
bool t11967 = (t11847>0);
bool t11968 = (t11940>0);
bool t11969 = (!t11968);
bool t11970 = (t11967&&t11969);
bool t11971 = (!t11967);
bool t11972 = (t11968&&t11971);
bool t11973 = (t11970||t11972);
bool t11974 = (t11949<196);
bool t11975 = (t11949>float(6.76));
bool t11976 = (t11974&&t11975);
bool t11977 = (t11973&&t11976);
float t11978;
float t11979;
float t11980;
float t11981;
if(t11977){
float t11982 = (t11940/t11938);
float t11983 = (-t11982);
float t11984 = (t11983*t11931);
float t11985 = (t11934+t11984);
float t11986 = atan(t11985,t11946);
float t11987 = (u1.u0/30);
float t11988 = (t11986+t11987);
float t11989 = (2*3.1415927);
float t11990 = (t11988+t11989);
float t11991 = mod(t11990,2);
float t11992 = (t11991*3.1415927);
float t11993 = (t11992/t11989);
float t11994 = (t11983*t11938);
float t11995 = (t11940+t11994);
float t11996 = (t11983*t11944);
float t11997 = (t11946+t11996);
vec3 t11998 = vec3(t11985,t11995,t11997);
float t11999 = length(t11998);
float t12000 = (t11999*t11999);
float t12001 = sqrt(t12000);
float t12002 = (t12001-float(2.6));
float t12003 = (t12002/float(11.4));
vec4 t12004 = texture(s4,vec2(t11993,t12003));
t11978 = t12004.x;
t11979 = t12004.y;
t11980 = t12004.z;
vec3 t12005 = vec3(t12004.x,t12004.y,t12004.z);
float t12006 = length(t12005);
float t12007 = (t12006*t12006);
float t12008 = (t12007/float(3.0));
bool t12009 = (t12008<=1);
float t12010;
if(t12009){
t12010 = t12008;
} else {
t12010 = 1;
}
bool t12011 = (t12010>=0);
float t12012;
if(t12011){
t12012 = t12010;
} else {
t12012 = 0;
}
t11981 = t12012;
} else {
t11978 = 0;
t11979 = 0;
t11980 = 0;
t11981 = 0;
}
float t12013 = (1-t11962);
float t12014 = (t11959*t12013);
float t12015 = (t11962+t12014);
float t12016 = (1-t12015);
float t12017 = (t11981*t12016);
float t12018 = (t11978*t12017);
float t12019 = (t11966+t12018);
float t12020 = (t115*t11934);
float t12021 = pow(t11949,float(2.5));
float t12022 = (t12020/t12021);
float t12023 = (t12022*t11932);
float t12024 = (t11931+t12023);
float t12025 = (t11932*u1.u4);
float t12026 = (t12024*t12025);
float t12027 = (t11934+t12026);
float t12028 = (t115*t11940);
float t12029 = (t12028/t12021);
float t12030 = (t12029*t11932);
float t12031 = (t11938+t12030);
float t12032 = (t12031*t12025);
float t12033 = (t11940+t12032);
float t12034 = (t115*t11946);
float t12035 = (t12034/t12021);
float t12036 = (t12035*t11932);
float t12037 = (t11944+t12036);
float t12038 = (t12037*t12025);
float t12039 = (t11946+t12038);
vec3 t12040 = vec3(t12027,t12033,t12039);
float t12041 = length(t12040);
float t12042 = (t12041*t12041);
bool t12043 = (t12042<1);
vec3 t12044 = vec3(t11934,t11940,t11946);
float t12045 = length(t12044);
float t12046 = (t12045*t12045);
bool t12047 = (t12046>1);
bool t12048 = (t12043&&t12047);
float t12049;
float t12050;
float t12051;
float t12052;
if(t12048){
t12049 = 0;
t12050 = 0;
t12051 = 0;
t12052 = 1;
} else {
t12049 = 0;
t12050 = 0;
t12051 = 0;
t12052 = 0;
}
float t12053 = (1-t12015);
float t12054 = (t11981*t12053);
float t12055 = (t12015+t12054);
float t12056 = (1-t12055);
float t12057 = (t12052*t12056);
float t12058 = (t12049*t12057);
float t12059 = (t12019+t12058);
bool t12060 = (t11940>0);
bool t12061 = (t12033>0);
bool t12062 = (!t12061);
bool t12063 = (t12060&&t12062);
bool t12064 = (!t12060);
bool t12065 = (t12061&&t12064);
bool t12066 = (t12063||t12065);
bool t12067 = (t12042<196);
bool t12068 = (t12042>float(6.76));
bool t12069 = (t12067&&t12068);
bool t12070 = (t12066&&t12069);
float t12071;
float t12072;
float t12073;
float t12074;
if(t12070){
float t12075 = (t12033/t12031);
float t12076 = (-t12075);
float t12077 = (t12076*t12024);
float t12078 = (t12027+t12077);
float t12079 = atan(t12078,t12039);
float t12080 = (u1.u0/30);
float t12081 = (t12079+t12080);
float t12082 = (2*3.1415927);
float t12083 = (t12081+t12082);
float t12084 = mod(t12083,2);
float t12085 = (t12084*3.1415927);
float t12086 = (t12085/t12082);
float t12087 = (t12076*t12031);
float t12088 = (t12033+t12087);
float t12089 = (t12076*t12037);
float t12090 = (t12039+t12089);
vec3 t12091 = vec3(t12078,t12088,t12090);
float t12092 = length(t12091);
float t12093 = (t12092*t12092);
float t12094 = sqrt(t12093);
float t12095 = (t12094-float(2.6));
float t12096 = (t12095/float(11.4));
vec4 t12097 = texture(s4,vec2(t12086,t12096));
t12071 = t12097.x;
t12072 = t12097.y;
t12073 = t12097.z;
vec3 t12098 = vec3(t12097.x,t12097.y,t12097.z);
float t12099 = length(t12098);
float t12100 = (t12099*t12099);
float t12101 = (t12100/float(3.0));
bool t12102 = (t12101<=1);
float t12103;
if(t12102){
t12103 = t12101;
} else {
t12103 = 1;
}
bool t12104 = (t12103>=0);
float t12105;
if(t12104){
t12105 = t12103;
} else {
t12105 = 0;
}
t12074 = t12105;
} else {
t12071 = 0;
t12072 = 0;
t12073 = 0;
t12074 = 0;
}
float t12106 = (1-t12055);
float t12107 = (t12052*t12106);
float t12108 = (t12055+t12107);
float t12109 = (1-t12108);
float t12110 = (t12074*t12109);
float t12111 = (t12071*t12110);
float t12112 = (t12059+t12111);
float t12113 = (t115*t12027);
float t12114 = pow(t12042,float(2.5));
float t12115 = (t12113/t12114);
float t12116 = (t12115*t12025);
float t12117 = (t12024+t12116);
float t12118 = (t12025*u1.u4);
float t12119 = (t12117*t12118);
float t12120 = (t12027+t12119);
float t12121 = (t115*t12033);
float t12122 = (t12121/t12114);
float t12123 = (t12122*t12025);
float t12124 = (t12031+t12123);
float t12125 = (t12124*t12118);
float t12126 = (t12033+t12125);
float t12127 = (t115*t12039);
float t12128 = (t12127/t12114);
float t12129 = (t12128*t12025);
float t12130 = (t12037+t12129);
float t12131 = (t12130*t12118);
float t12132 = (t12039+t12131);
vec3 t12133 = vec3(t12120,t12126,t12132);
float t12134 = length(t12133);
float t12135 = (t12134*t12134);
bool t12136 = (t12135<1);
vec3 t12137 = vec3(t12027,t12033,t12039);
float t12138 = length(t12137);
float t12139 = (t12138*t12138);
bool t12140 = (t12139>1);
bool t12141 = (t12136&&t12140);
float t12142;
float t12143;
float t12144;
float t12145;
if(t12141){
t12142 = 0;
t12143 = 0;
t12144 = 0;
t12145 = 1;
} else {
t12142 = 0;
t12143 = 0;
t12144 = 0;
t12145 = 0;
}
float t12146 = (1-t12108);
float t12147 = (t12074*t12146);
float t12148 = (t12108+t12147);
float t12149 = (1-t12148);
float t12150 = (t12145*t12149);
float t12151 = (t12142*t12150);
float t12152 = (t12112+t12151);
bool t12153 = (t12033>0);
bool t12154 = (t12126>0);
bool t12155 = (!t12154);
bool t12156 = (t12153&&t12155);
bool t12157 = (!t12153);
bool t12158 = (t12154&&t12157);
bool t12159 = (t12156||t12158);
bool t12160 = (t12135<196);
bool t12161 = (t12135>float(6.76));
bool t12162 = (t12160&&t12161);
bool t12163 = (t12159&&t12162);
float t12164;
float t12165;
float t12166;
float t12167;
if(t12163){
float t12168 = (t12126/t12124);
float t12169 = (-t12168);
float t12170 = (t12169*t12117);
float t12171 = (t12120+t12170);
float t12172 = atan(t12171,t12132);
float t12173 = (u1.u0/30);
float t12174 = (t12172+t12173);
float t12175 = (2*3.1415927);
float t12176 = (t12174+t12175);
float t12177 = mod(t12176,2);
float t12178 = (t12177*3.1415927);
float t12179 = (t12178/t12175);
float t12180 = (t12169*t12124);
float t12181 = (t12126+t12180);
float t12182 = (t12169*t12130);
float t12183 = (t12132+t12182);
vec3 t12184 = vec3(t12171,t12181,t12183);
float t12185 = length(t12184);
float t12186 = (t12185*t12185);
float t12187 = sqrt(t12186);
float t12188 = (t12187-float(2.6));
float t12189 = (t12188/float(11.4));
vec4 t12190 = texture(s4,vec2(t12179,t12189));
t12164 = t12190.x;
t12165 = t12190.y;
t12166 = t12190.z;
vec3 t12191 = vec3(t12190.x,t12190.y,t12190.z);
float t12192 = length(t12191);
float t12193 = (t12192*t12192);
float t12194 = (t12193/float(3.0));
bool t12195 = (t12194<=1);
float t12196;
if(t12195){
t12196 = t12194;
} else {
t12196 = 1;
}
bool t12197 = (t12196>=0);
float t12198;
if(t12197){
t12198 = t12196;
} else {
t12198 = 0;
}
t12167 = t12198;
} else {
t12164 = 0;
t12165 = 0;
t12166 = 0;
t12167 = 0;
}
float t12199 = (1-t12148);
float t12200 = (t12145*t12199);
float t12201 = (t12148+t12200);
float t12202 = (1-t12201);
float t12203 = (t12167*t12202);
float t12204 = (t12164*t12203);
float t12205 = (t12152+t12204);
float t12206 = (t115*t12120);
float t12207 = pow(t12135,float(2.5));
float t12208 = (t12206/t12207);
float t12209 = (t12208*t12118);
float t12210 = (t12117+t12209);
float t12211 = (t12118*u1.u4);
float t12212 = (t12210*t12211);
float t12213 = (t12120+t12212);
float t12214 = (t115*t12126);
float t12215 = (t12214/t12207);
float t12216 = (t12215*t12118);
float t12217 = (t12124+t12216);
float t12218 = (t12217*t12211);
float t12219 = (t12126+t12218);
float t12220 = (t115*t12132);
float t12221 = (t12220/t12207);
float t12222 = (t12221*t12118);
float t12223 = (t12130+t12222);
float t12224 = (t12223*t12211);
float t12225 = (t12132+t12224);
vec3 t12226 = vec3(t12213,t12219,t12225);
float t12227 = length(t12226);
float t12228 = (t12227*t12227);
bool t12229 = (t12228<1);
vec3 t12230 = vec3(t12120,t12126,t12132);
float t12231 = length(t12230);
float t12232 = (t12231*t12231);
bool t12233 = (t12232>1);
bool t12234 = (t12229&&t12233);
float t12235;
float t12236;
float t12237;
float t12238;
if(t12234){
t12235 = 0;
t12236 = 0;
t12237 = 0;
t12238 = 1;
} else {
t12235 = 0;
t12236 = 0;
t12237 = 0;
t12238 = 0;
}
float t12239 = (1-t12201);
float t12240 = (t12167*t12239);
float t12241 = (t12201+t12240);
float t12242 = (1-t12241);
float t12243 = (t12238*t12242);
float t12244 = (t12235*t12243);
float t12245 = (t12205+t12244);
bool t12246 = (t12126>0);
bool t12247 = (t12219>0);
bool t12248 = (!t12247);
bool t12249 = (t12246&&t12248);
bool t12250 = (!t12246);
bool t12251 = (t12247&&t12250);
bool t12252 = (t12249||t12251);
bool t12253 = (t12228<196);
bool t12254 = (t12228>float(6.76));
bool t12255 = (t12253&&t12254);
bool t12256 = (t12252&&t12255);
float t12257;
float t12258;
float t12259;
float t12260;
if(t12256){
float t12261 = (t12219/t12217);
float t12262 = (-t12261);
float t12263 = (t12262*t12210);
float t12264 = (t12213+t12263);
float t12265 = atan(t12264,t12225);
float t12266 = (u1.u0/30);
float t12267 = (t12265+t12266);
float t12268 = (2*3.1415927);
float t12269 = (t12267+t12268);
float t12270 = mod(t12269,2);
float t12271 = (t12270*3.1415927);
float t12272 = (t12271/t12268);
float t12273 = (t12262*t12217);
float t12274 = (t12219+t12273);
float t12275 = (t12262*t12223);
float t12276 = (t12225+t12275);
vec3 t12277 = vec3(t12264,t12274,t12276);
float t12278 = length(t12277);
float t12279 = (t12278*t12278);
float t12280 = sqrt(t12279);
float t12281 = (t12280-float(2.6));
float t12282 = (t12281/float(11.4));
vec4 t12283 = texture(s4,vec2(t12272,t12282));
t12257 = t12283.x;
t12258 = t12283.y;
t12259 = t12283.z;
vec3 t12284 = vec3(t12283.x,t12283.y,t12283.z);
float t12285 = length(t12284);
float t12286 = (t12285*t12285);
float t12287 = (t12286/float(3.0));
bool t12288 = (t12287<=1);
float t12289;
if(t12288){
t12289 = t12287;
} else {
t12289 = 1;
}
bool t12290 = (t12289>=0);
float t12291;
if(t12290){
t12291 = t12289;
} else {
t12291 = 0;
}
t12260 = t12291;
} else {
t12257 = 0;
t12258 = 0;
t12259 = 0;
t12260 = 0;
}
float t12292 = (1-t12241);
float t12293 = (t12238*t12292);
float t12294 = (t12241+t12293);
float t12295 = (1-t12294);
float t12296 = (t12260*t12295);
float t12297 = (t12257*t12296);
float t12298 = (t12245+t12297);
float t12299 = (t115*t12213);
float t12300 = pow(t12228,float(2.5));
float t12301 = (t12299/t12300);
float t12302 = (t12301*t12211);
float t12303 = (t12210+t12302);
float t12304 = (t12211*u1.u4);
float t12305 = (t12303*t12304);
float t12306 = (t12213+t12305);
float t12307 = (t115*t12219);
float t12308 = (t12307/t12300);
float t12309 = (t12308*t12211);
float t12310 = (t12217+t12309);
float t12311 = (t12310*t12304);
float t12312 = (t12219+t12311);
float t12313 = (t115*t12225);
float t12314 = (t12313/t12300);
float t12315 = (t12314*t12211);
float t12316 = (t12223+t12315);
float t12317 = (t12316*t12304);
float t12318 = (t12225+t12317);
vec3 t12319 = vec3(t12306,t12312,t12318);
float t12320 = length(t12319);
float t12321 = (t12320*t12320);
bool t12322 = (t12321<1);
vec3 t12323 = vec3(t12213,t12219,t12225);
float t12324 = length(t12323);
float t12325 = (t12324*t12324);
bool t12326 = (t12325>1);
bool t12327 = (t12322&&t12326);
float t12328;
float t12329;
float t12330;
float t12331;
if(t12327){
t12328 = 0;
t12329 = 0;
t12330 = 0;
t12331 = 1;
} else {
t12328 = 0;
t12329 = 0;
t12330 = 0;
t12331 = 0;
}
float t12332 = (1-t12294);
float t12333 = (t12260*t12332);
float t12334 = (t12294+t12333);
float t12335 = (1-t12334);
float t12336 = (t12331*t12335);
float t12337 = (t12328*t12336);
float t12338 = (t12298+t12337);
bool t12339 = (t12219>0);
bool t12340 = (t12312>0);
bool t12341 = (!t12340);
bool t12342 = (t12339&&t12341);
bool t12343 = (!t12339);
bool t12344 = (t12340&&t12343);
bool t12345 = (t12342||t12344);
bool t12346 = (t12321<196);
bool t12347 = (t12321>float(6.76));
bool t12348 = (t12346&&t12347);
bool t12349 = (t12345&&t12348);
float t12350;
float t12351;
float t12352;
float t12353;
if(t12349){
float t12354 = (t12312/t12310);
float t12355 = (-t12354);
float t12356 = (t12355*t12303);
float t12357 = (t12306+t12356);
float t12358 = atan(t12357,t12318);
float t12359 = (u1.u0/30);
float t12360 = (t12358+t12359);
float t12361 = (2*3.1415927);
float t12362 = (t12360+t12361);
float t12363 = mod(t12362,2);
float t12364 = (t12363*3.1415927);
float t12365 = (t12364/t12361);
float t12366 = (t12355*t12310);
float t12367 = (t12312+t12366);
float t12368 = (t12355*t12316);
float t12369 = (t12318+t12368);
vec3 t12370 = vec3(t12357,t12367,t12369);
float t12371 = length(t12370);
float t12372 = (t12371*t12371);
float t12373 = sqrt(t12372);
float t12374 = (t12373-float(2.6));
float t12375 = (t12374/float(11.4));
vec4 t12376 = texture(s4,vec2(t12365,t12375));
t12350 = t12376.x;
t12351 = t12376.y;
t12352 = t12376.z;
vec3 t12377 = vec3(t12376.x,t12376.y,t12376.z);
float t12378 = length(t12377);
float t12379 = (t12378*t12378);
float t12380 = (t12379/float(3.0));
bool t12381 = (t12380<=1);
float t12382;
if(t12381){
t12382 = t12380;
} else {
t12382 = 1;
}
bool t12383 = (t12382>=0);
float t12384;
if(t12383){
t12384 = t12382;
} else {
t12384 = 0;
}
t12353 = t12384;
} else {
t12350 = 0;
t12351 = 0;
t12352 = 0;
t12353 = 0;
}
float t12385 = (1-t12334);
float t12386 = (t12331*t12385);
float t12387 = (t12334+t12386);
float t12388 = (1-t12387);
float t12389 = (t12353*t12388);
float t12390 = (t12350*t12389);
float t12391 = (t12338+t12390);
float t12392 = (t115*t12306);
float t12393 = pow(t12321,float(2.5));
float t12394 = (t12392/t12393);
float t12395 = (t12394*t12304);
float t12396 = (t12303+t12395);
float t12397 = (t12304*u1.u4);
float t12398 = (t12396*t12397);
float t12399 = (t12306+t12398);
float t12400 = (t115*t12312);
float t12401 = (t12400/t12393);
float t12402 = (t12401*t12304);
float t12403 = (t12310+t12402);
float t12404 = (t12403*t12397);
float t12405 = (t12312+t12404);
float t12406 = (t115*t12318);
float t12407 = (t12406/t12393);
float t12408 = (t12407*t12304);
float t12409 = (t12316+t12408);
float t12410 = (t12409*t12397);
float t12411 = (t12318+t12410);
vec3 t12412 = vec3(t12399,t12405,t12411);
float t12413 = length(t12412);
float t12414 = (t12413*t12413);
bool t12415 = (t12414<1);
vec3 t12416 = vec3(t12306,t12312,t12318);
float t12417 = length(t12416);
float t12418 = (t12417*t12417);
bool t12419 = (t12418>1);
bool t12420 = (t12415&&t12419);
float t12421;
float t12422;
float t12423;
float t12424;
if(t12420){
t12421 = 0;
t12422 = 0;
t12423 = 0;
t12424 = 1;
} else {
t12421 = 0;
t12422 = 0;
t12423 = 0;
t12424 = 0;
}
float t12425 = (1-t12387);
float t12426 = (t12353*t12425);
float t12427 = (t12387+t12426);
float t12428 = (1-t12427);
float t12429 = (t12424*t12428);
float t12430 = (t12421*t12429);
float t12431 = (t12391+t12430);
bool t12432 = (t12312>0);
bool t12433 = (t12405>0);
bool t12434 = (!t12433);
bool t12435 = (t12432&&t12434);
bool t12436 = (!t12432);
bool t12437 = (t12433&&t12436);
bool t12438 = (t12435||t12437);
bool t12439 = (t12414<196);
bool t12440 = (t12414>float(6.76));
bool t12441 = (t12439&&t12440);
bool t12442 = (t12438&&t12441);
float t12443;
float t12444;
float t12445;
float t12446;
if(t12442){
float t12447 = (t12405/t12403);
float t12448 = (-t12447);
float t12449 = (t12448*t12396);
float t12450 = (t12399+t12449);
float t12451 = atan(t12450,t12411);
float t12452 = (u1.u0/30);
float t12453 = (t12451+t12452);
float t12454 = (2*3.1415927);
float t12455 = (t12453+t12454);
float t12456 = mod(t12455,2);
float t12457 = (t12456*3.1415927);
float t12458 = (t12457/t12454);
float t12459 = (t12448*t12403);
float t12460 = (t12405+t12459);
float t12461 = (t12448*t12409);
float t12462 = (t12411+t12461);
vec3 t12463 = vec3(t12450,t12460,t12462);
float t12464 = length(t12463);
float t12465 = (t12464*t12464);
float t12466 = sqrt(t12465);
float t12467 = (t12466-float(2.6));
float t12468 = (t12467/float(11.4));
vec4 t12469 = texture(s4,vec2(t12458,t12468));
t12443 = t12469.x;
t12444 = t12469.y;
t12445 = t12469.z;
vec3 t12470 = vec3(t12469.x,t12469.y,t12469.z);
float t12471 = length(t12470);
float t12472 = (t12471*t12471);
float t12473 = (t12472/float(3.0));
bool t12474 = (t12473<=1);
float t12475;
if(t12474){
t12475 = t12473;
} else {
t12475 = 1;
}
bool t12476 = (t12475>=0);
float t12477;
if(t12476){
t12477 = t12475;
} else {
t12477 = 0;
}
t12446 = t12477;
} else {
t12443 = 0;
t12444 = 0;
t12445 = 0;
t12446 = 0;
}
float t12478 = (1-t12427);
float t12479 = (t12424*t12478);
float t12480 = (t12427+t12479);
float t12481 = (1-t12480);
float t12482 = (t12446*t12481);
float t12483 = (t12443*t12482);
float t12484 = (t12431+t12483);
float t12485 = (t115*t12399);
float t12486 = pow(t12414,float(2.5));
float t12487 = (t12485/t12486);
float t12488 = (t12487*t12397);
float t12489 = (t12396+t12488);
float t12490 = (t12397*u1.u4);
float t12491 = (t12489*t12490);
float t12492 = (t12399+t12491);
float t12493 = (t115*t12405);
float t12494 = (t12493/t12486);
float t12495 = (t12494*t12397);
float t12496 = (t12403+t12495);
float t12497 = (t12496*t12490);
float t12498 = (t12405+t12497);
float t12499 = (t115*t12411);
float t12500 = (t12499/t12486);
float t12501 = (t12500*t12397);
float t12502 = (t12409+t12501);
float t12503 = (t12502*t12490);
float t12504 = (t12411+t12503);
vec3 t12505 = vec3(t12492,t12498,t12504);
float t12506 = length(t12505);
float t12507 = (t12506*t12506);
bool t12508 = (t12507<1);
vec3 t12509 = vec3(t12399,t12405,t12411);
float t12510 = length(t12509);
float t12511 = (t12510*t12510);
bool t12512 = (t12511>1);
bool t12513 = (t12508&&t12512);
float t12514;
float t12515;
float t12516;
float t12517;
if(t12513){
t12514 = 0;
t12515 = 0;
t12516 = 0;
t12517 = 1;
} else {
t12514 = 0;
t12515 = 0;
t12516 = 0;
t12517 = 0;
}
float t12518 = (1-t12480);
float t12519 = (t12446*t12518);
float t12520 = (t12480+t12519);
float t12521 = (1-t12520);
float t12522 = (t12517*t12521);
float t12523 = (t12514*t12522);
float t12524 = (t12484+t12523);
bool t12525 = (t12405>0);
bool t12526 = (t12498>0);
bool t12527 = (!t12526);
bool t12528 = (t12525&&t12527);
bool t12529 = (!t12525);
bool t12530 = (t12526&&t12529);
bool t12531 = (t12528||t12530);
bool t12532 = (t12507<196);
bool t12533 = (t12507>float(6.76));
bool t12534 = (t12532&&t12533);
bool t12535 = (t12531&&t12534);
float t12536;
float t12537;
float t12538;
float t12539;
if(t12535){
float t12540 = (t12498/t12496);
float t12541 = (-t12540);
float t12542 = (t12541*t12489);
float t12543 = (t12492+t12542);
float t12544 = atan(t12543,t12504);
float t12545 = (u1.u0/30);
float t12546 = (t12544+t12545);
float t12547 = (2*3.1415927);
float t12548 = (t12546+t12547);
float t12549 = mod(t12548,2);
float t12550 = (t12549*3.1415927);
float t12551 = (t12550/t12547);
float t12552 = (t12541*t12496);
float t12553 = (t12498+t12552);
float t12554 = (t12541*t12502);
float t12555 = (t12504+t12554);
vec3 t12556 = vec3(t12543,t12553,t12555);
float t12557 = length(t12556);
float t12558 = (t12557*t12557);
float t12559 = sqrt(t12558);
float t12560 = (t12559-float(2.6));
float t12561 = (t12560/float(11.4));
vec4 t12562 = texture(s4,vec2(t12551,t12561));
t12536 = t12562.x;
t12537 = t12562.y;
t12538 = t12562.z;
vec3 t12563 = vec3(t12562.x,t12562.y,t12562.z);
float t12564 = length(t12563);
float t12565 = (t12564*t12564);
float t12566 = (t12565/float(3.0));
bool t12567 = (t12566<=1);
float t12568;
if(t12567){
t12568 = t12566;
} else {
t12568 = 1;
}
bool t12569 = (t12568>=0);
float t12570;
if(t12569){
t12570 = t12568;
} else {
t12570 = 0;
}
t12539 = t12570;
} else {
t12536 = 0;
t12537 = 0;
t12538 = 0;
t12539 = 0;
}
float t12571 = (1-t12520);
float t12572 = (t12517*t12571);
float t12573 = (t12520+t12572);
float t12574 = (1-t12573);
float t12575 = (t12539*t12574);
float t12576 = (t12536*t12575);
float t12577 = (t12524+t12576);
float t12578 = (t115*t12492);
float t12579 = pow(t12507,float(2.5));
float t12580 = (t12578/t12579);
float t12581 = (t12580*t12490);
float t12582 = (t12489+t12581);
float t12583 = (t12490*u1.u4);
float t12584 = (t12582*t12583);
float t12585 = (t12492+t12584);
float t12586 = (t115*t12498);
float t12587 = (t12586/t12579);
float t12588 = (t12587*t12490);
float t12589 = (t12496+t12588);
float t12590 = (t12589*t12583);
float t12591 = (t12498+t12590);
float t12592 = (t115*t12504);
float t12593 = (t12592/t12579);
float t12594 = (t12593*t12490);
float t12595 = (t12502+t12594);
float t12596 = (t12595*t12583);
float t12597 = (t12504+t12596);
vec3 t12598 = vec3(t12585,t12591,t12597);
float t12599 = length(t12598);
float t12600 = (t12599*t12599);
bool t12601 = (t12600<1);
vec3 t12602 = vec3(t12492,t12498,t12504);
float t12603 = length(t12602);
float t12604 = (t12603*t12603);
bool t12605 = (t12604>1);
bool t12606 = (t12601&&t12605);
float t12607;
float t12608;
float t12609;
float t12610;
if(t12606){
t12607 = 0;
t12608 = 0;
t12609 = 0;
t12610 = 1;
} else {
t12607 = 0;
t12608 = 0;
t12609 = 0;
t12610 = 0;
}
float t12611 = (1-t12573);
float t12612 = (t12539*t12611);
float t12613 = (t12573+t12612);
float t12614 = (1-t12613);
float t12615 = (t12610*t12614);
float t12616 = (t12607*t12615);
float t12617 = (t12577+t12616);
bool t12618 = (t12498>0);
bool t12619 = (t12591>0);
bool t12620 = (!t12619);
bool t12621 = (t12618&&t12620);
bool t12622 = (!t12618);
bool t12623 = (t12619&&t12622);
bool t12624 = (t12621||t12623);
bool t12625 = (t12600<196);
bool t12626 = (t12600>float(6.76));
bool t12627 = (t12625&&t12626);
bool t12628 = (t12624&&t12627);
float t12629;
float t12630;
float t12631;
float t12632;
if(t12628){
float t12633 = (t12591/t12589);
float t12634 = (-t12633);
float t12635 = (t12634*t12582);
float t12636 = (t12585+t12635);
float t12637 = atan(t12636,t12597);
float t12638 = (u1.u0/30);
float t12639 = (t12637+t12638);
float t12640 = (2*3.1415927);
float t12641 = (t12639+t12640);
float t12642 = mod(t12641,2);
float t12643 = (t12642*3.1415927);
float t12644 = (t12643/t12640);
float t12645 = (t12634*t12589);
float t12646 = (t12591+t12645);
float t12647 = (t12634*t12595);
float t12648 = (t12597+t12647);
vec3 t12649 = vec3(t12636,t12646,t12648);
float t12650 = length(t12649);
float t12651 = (t12650*t12650);
float t12652 = sqrt(t12651);
float t12653 = (t12652-float(2.6));
float t12654 = (t12653/float(11.4));
vec4 t12655 = texture(s4,vec2(t12644,t12654));
t12629 = t12655.x;
t12630 = t12655.y;
t12631 = t12655.z;
vec3 t12656 = vec3(t12655.x,t12655.y,t12655.z);
float t12657 = length(t12656);
float t12658 = (t12657*t12657);
float t12659 = (t12658/float(3.0));
bool t12660 = (t12659<=1);
float t12661;
if(t12660){
t12661 = t12659;
} else {
t12661 = 1;
}
bool t12662 = (t12661>=0);
float t12663;
if(t12662){
t12663 = t12661;
} else {
t12663 = 0;
}
t12632 = t12663;
} else {
t12629 = 0;
t12630 = 0;
t12631 = 0;
t12632 = 0;
}
float t12664 = (1-t12613);
float t12665 = (t12610*t12664);
float t12666 = (t12613+t12665);
float t12667 = (1-t12666);
float t12668 = (t12632*t12667);
float t12669 = (t12629*t12668);
float t12670 = (t12617+t12669);
float t12671 = (t115*t12585);
float t12672 = pow(t12600,float(2.5));
float t12673 = (t12671/t12672);
float t12674 = (t12673*t12583);
float t12675 = (t12582+t12674);
float t12676 = (t12583*u1.u4);
float t12677 = (t12675*t12676);
float t12678 = (t12585+t12677);
float t12679 = (t115*t12591);
float t12680 = (t12679/t12672);
float t12681 = (t12680*t12583);
float t12682 = (t12589+t12681);
float t12683 = (t12682*t12676);
float t12684 = (t12591+t12683);
float t12685 = (t115*t12597);
float t12686 = (t12685/t12672);
float t12687 = (t12686*t12583);
float t12688 = (t12595+t12687);
float t12689 = (t12688*t12676);
float t12690 = (t12597+t12689);
vec3 t12691 = vec3(t12678,t12684,t12690);
float t12692 = length(t12691);
float t12693 = (t12692*t12692);
bool t12694 = (t12693<1);
vec3 t12695 = vec3(t12585,t12591,t12597);
float t12696 = length(t12695);
float t12697 = (t12696*t12696);
bool t12698 = (t12697>1);
bool t12699 = (t12694&&t12698);
float t12700;
float t12701;
float t12702;
float t12703;
if(t12699){
t12700 = 0;
t12701 = 0;
t12702 = 0;
t12703 = 1;
} else {
t12700 = 0;
t12701 = 0;
t12702 = 0;
t12703 = 0;
}
float t12704 = (1-t12666);
float t12705 = (t12632*t12704);
float t12706 = (t12666+t12705);
float t12707 = (1-t12706);
float t12708 = (t12703*t12707);
float t12709 = (t12700*t12708);
float t12710 = (t12670+t12709);
bool t12711 = (t12591>0);
bool t12712 = (t12684>0);
bool t12713 = (!t12712);
bool t12714 = (t12711&&t12713);
bool t12715 = (!t12711);
bool t12716 = (t12712&&t12715);
bool t12717 = (t12714||t12716);
bool t12718 = (t12693<196);
bool t12719 = (t12693>float(6.76));
bool t12720 = (t12718&&t12719);
bool t12721 = (t12717&&t12720);
float t12722;
float t12723;
float t12724;
float t12725;
if(t12721){
float t12726 = (t12684/t12682);
float t12727 = (-t12726);
float t12728 = (t12727*t12675);
float t12729 = (t12678+t12728);
float t12730 = atan(t12729,t12690);
float t12731 = (u1.u0/30);
float t12732 = (t12730+t12731);
float t12733 = (2*3.1415927);
float t12734 = (t12732+t12733);
float t12735 = mod(t12734,2);
float t12736 = (t12735*3.1415927);
float t12737 = (t12736/t12733);
float t12738 = (t12727*t12682);
float t12739 = (t12684+t12738);
float t12740 = (t12727*t12688);
float t12741 = (t12690+t12740);
vec3 t12742 = vec3(t12729,t12739,t12741);
float t12743 = length(t12742);
float t12744 = (t12743*t12743);
float t12745 = sqrt(t12744);
float t12746 = (t12745-float(2.6));
float t12747 = (t12746/float(11.4));
vec4 t12748 = texture(s4,vec2(t12737,t12747));
t12722 = t12748.x;
t12723 = t12748.y;
t12724 = t12748.z;
vec3 t12749 = vec3(t12748.x,t12748.y,t12748.z);
float t12750 = length(t12749);
float t12751 = (t12750*t12750);
float t12752 = (t12751/float(3.0));
bool t12753 = (t12752<=1);
float t12754;
if(t12753){
t12754 = t12752;
} else {
t12754 = 1;
}
bool t12755 = (t12754>=0);
float t12756;
if(t12755){
t12756 = t12754;
} else {
t12756 = 0;
}
t12725 = t12756;
} else {
t12722 = 0;
t12723 = 0;
t12724 = 0;
t12725 = 0;
}
float t12757 = (1-t12706);
float t12758 = (t12703*t12757);
float t12759 = (t12706+t12758);
float t12760 = (1-t12759);
float t12761 = (t12725*t12760);
float t12762 = (t12722*t12761);
float t12763 = (t12710+t12762);
float t12764 = (t115*t12678);
float t12765 = pow(t12693,float(2.5));
float t12766 = (t12764/t12765);
float t12767 = (t12766*t12676);
float t12768 = (t12675+t12767);
float t12769 = (t12676*u1.u4);
float t12770 = (t12768*t12769);
float t12771 = (t12678+t12770);
float t12772 = (t115*t12684);
float t12773 = (t12772/t12765);
float t12774 = (t12773*t12676);
float t12775 = (t12682+t12774);
float t12776 = (t12775*t12769);
float t12777 = (t12684+t12776);
float t12778 = (t115*t12690);
float t12779 = (t12778/t12765);
float t12780 = (t12779*t12676);
float t12781 = (t12688+t12780);
float t12782 = (t12781*t12769);
float t12783 = (t12690+t12782);
vec3 t12784 = vec3(t12771,t12777,t12783);
float t12785 = length(t12784);
float t12786 = (t12785*t12785);
bool t12787 = (t12786<1);
vec3 t12788 = vec3(t12678,t12684,t12690);
float t12789 = length(t12788);
float t12790 = (t12789*t12789);
bool t12791 = (t12790>1);
bool t12792 = (t12787&&t12791);
float t12793;
float t12794;
float t12795;
float t12796;
if(t12792){
t12793 = 0;
t12794 = 0;
t12795 = 0;
t12796 = 1;
} else {
t12793 = 0;
t12794 = 0;
t12795 = 0;
t12796 = 0;
}
float t12797 = (1-t12759);
float t12798 = (t12725*t12797);
float t12799 = (t12759+t12798);
float t12800 = (1-t12799);
float t12801 = (t12796*t12800);
float t12802 = (t12793*t12801);
float t12803 = (t12763+t12802);
bool t12804 = (t12684>0);
bool t12805 = (t12777>0);
bool t12806 = (!t12805);
bool t12807 = (t12804&&t12806);
bool t12808 = (!t12804);
bool t12809 = (t12805&&t12808);
bool t12810 = (t12807||t12809);
bool t12811 = (t12786<196);
bool t12812 = (t12786>float(6.76));
bool t12813 = (t12811&&t12812);
bool t12814 = (t12810&&t12813);
float t12815;
float t12816;
float t12817;
float t12818;
if(t12814){
float t12819 = (t12777/t12775);
float t12820 = (-t12819);
float t12821 = (t12820*t12768);
float t12822 = (t12771+t12821);
float t12823 = atan(t12822,t12783);
float t12824 = (u1.u0/30);
float t12825 = (t12823+t12824);
float t12826 = (2*3.1415927);
float t12827 = (t12825+t12826);
float t12828 = mod(t12827,2);
float t12829 = (t12828*3.1415927);
float t12830 = (t12829/t12826);
float t12831 = (t12820*t12775);
float t12832 = (t12777+t12831);
float t12833 = (t12820*t12781);
float t12834 = (t12783+t12833);
vec3 t12835 = vec3(t12822,t12832,t12834);
float t12836 = length(t12835);
float t12837 = (t12836*t12836);
float t12838 = sqrt(t12837);
float t12839 = (t12838-float(2.6));
float t12840 = (t12839/float(11.4));
vec4 t12841 = texture(s4,vec2(t12830,t12840));
t12815 = t12841.x;
t12816 = t12841.y;
t12817 = t12841.z;
vec3 t12842 = vec3(t12841.x,t12841.y,t12841.z);
float t12843 = length(t12842);
float t12844 = (t12843*t12843);
float t12845 = (t12844/float(3.0));
bool t12846 = (t12845<=1);
float t12847;
if(t12846){
t12847 = t12845;
} else {
t12847 = 1;
}
bool t12848 = (t12847>=0);
float t12849;
if(t12848){
t12849 = t12847;
} else {
t12849 = 0;
}
t12818 = t12849;
} else {
t12815 = 0;
t12816 = 0;
t12817 = 0;
t12818 = 0;
}
float t12850 = (1-t12799);
float t12851 = (t12796*t12850);
float t12852 = (t12799+t12851);
float t12853 = (1-t12852);
float t12854 = (t12818*t12853);
float t12855 = (t12815*t12854);
float t12856 = (t12803+t12855);
float t12857 = (t115*t12771);
float t12858 = pow(t12786,float(2.5));
float t12859 = (t12857/t12858);
float t12860 = (t12859*t12769);
float t12861 = (t12768+t12860);
float t12862 = (t12769*u1.u4);
float t12863 = (t12861*t12862);
float t12864 = (t12771+t12863);
float t12865 = (t115*t12777);
float t12866 = (t12865/t12858);
float t12867 = (t12866*t12769);
float t12868 = (t12775+t12867);
float t12869 = (t12868*t12862);
float t12870 = (t12777+t12869);
float t12871 = (t115*t12783);
float t12872 = (t12871/t12858);
float t12873 = (t12872*t12769);
float t12874 = (t12781+t12873);
float t12875 = (t12874*t12862);
float t12876 = (t12783+t12875);
vec3 t12877 = vec3(t12864,t12870,t12876);
float t12878 = length(t12877);
float t12879 = (t12878*t12878);
bool t12880 = (t12879<1);
vec3 t12881 = vec3(t12771,t12777,t12783);
float t12882 = length(t12881);
float t12883 = (t12882*t12882);
bool t12884 = (t12883>1);
bool t12885 = (t12880&&t12884);
float t12886;
float t12887;
float t12888;
float t12889;
if(t12885){
t12886 = 0;
t12887 = 0;
t12888 = 0;
t12889 = 1;
} else {
t12886 = 0;
t12887 = 0;
t12888 = 0;
t12889 = 0;
}
float t12890 = (1-t12852);
float t12891 = (t12818*t12890);
float t12892 = (t12852+t12891);
float t12893 = (1-t12892);
float t12894 = (t12889*t12893);
float t12895 = (t12886*t12894);
float t12896 = (t12856+t12895);
bool t12897 = (t12777>0);
bool t12898 = (t12870>0);
bool t12899 = (!t12898);
bool t12900 = (t12897&&t12899);
bool t12901 = (!t12897);
bool t12902 = (t12898&&t12901);
bool t12903 = (t12900||t12902);
bool t12904 = (t12879<196);
bool t12905 = (t12879>float(6.76));
bool t12906 = (t12904&&t12905);
bool t12907 = (t12903&&t12906);
float t12908;
float t12909;
float t12910;
float t12911;
if(t12907){
float t12912 = (t12870/t12868);
float t12913 = (-t12912);
float t12914 = (t12913*t12861);
float t12915 = (t12864+t12914);
float t12916 = atan(t12915,t12876);
float t12917 = (u1.u0/30);
float t12918 = (t12916+t12917);
float t12919 = (2*3.1415927);
float t12920 = (t12918+t12919);
float t12921 = mod(t12920,2);
float t12922 = (t12921*3.1415927);
float t12923 = (t12922/t12919);
float t12924 = (t12913*t12868);
float t12925 = (t12870+t12924);
float t12926 = (t12913*t12874);
float t12927 = (t12876+t12926);
vec3 t12928 = vec3(t12915,t12925,t12927);
float t12929 = length(t12928);
float t12930 = (t12929*t12929);
float t12931 = sqrt(t12930);
float t12932 = (t12931-float(2.6));
float t12933 = (t12932/float(11.4));
vec4 t12934 = texture(s4,vec2(t12923,t12933));
t12908 = t12934.x;
t12909 = t12934.y;
t12910 = t12934.z;
vec3 t12935 = vec3(t12934.x,t12934.y,t12934.z);
float t12936 = length(t12935);
float t12937 = (t12936*t12936);
float t12938 = (t12937/float(3.0));
bool t12939 = (t12938<=1);
float t12940;
if(t12939){
t12940 = t12938;
} else {
t12940 = 1;
}
bool t12941 = (t12940>=0);
float t12942;
if(t12941){
t12942 = t12940;
} else {
t12942 = 0;
}
t12911 = t12942;
} else {
t12908 = 0;
t12909 = 0;
t12910 = 0;
t12911 = 0;
}
float t12943 = (1-t12892);
float t12944 = (t12889*t12943);
float t12945 = (t12892+t12944);
float t12946 = (1-t12945);
float t12947 = (t12911*t12946);
float t12948 = (t12908*t12947);
float t12949 = (t12896+t12948);
float t12950 = (t115*t12864);
float t12951 = pow(t12879,float(2.5));
float t12952 = (t12950/t12951);
float t12953 = (t12952*t12862);
float t12954 = (t12861+t12953);
float t12955 = (t12862*u1.u4);
float t12956 = (t12954*t12955);
float t12957 = (t12864+t12956);
float t12958 = (t115*t12870);
float t12959 = (t12958/t12951);
float t12960 = (t12959*t12862);
float t12961 = (t12868+t12960);
float t12962 = (t12961*t12955);
float t12963 = (t12870+t12962);
float t12964 = (t115*t12876);
float t12965 = (t12964/t12951);
float t12966 = (t12965*t12862);
float t12967 = (t12874+t12966);
float t12968 = (t12967*t12955);
float t12969 = (t12876+t12968);
vec3 t12970 = vec3(t12957,t12963,t12969);
float t12971 = length(t12970);
float t12972 = (t12971*t12971);
bool t12973 = (t12972<1);
vec3 t12974 = vec3(t12864,t12870,t12876);
float t12975 = length(t12974);
float t12976 = (t12975*t12975);
bool t12977 = (t12976>1);
bool t12978 = (t12973&&t12977);
float t12979;
float t12980;
float t12981;
float t12982;
if(t12978){
t12979 = 0;
t12980 = 0;
t12981 = 0;
t12982 = 1;
} else {
t12979 = 0;
t12980 = 0;
t12981 = 0;
t12982 = 0;
}
float t12983 = (1-t12945);
float t12984 = (t12911*t12983);
float t12985 = (t12945+t12984);
float t12986 = (1-t12985);
float t12987 = (t12982*t12986);
float t12988 = (t12979*t12987);
float t12989 = (t12949+t12988);
bool t12990 = (t12870>0);
bool t12991 = (t12963>0);
bool t12992 = (!t12991);
bool t12993 = (t12990&&t12992);
bool t12994 = (!t12990);
bool t12995 = (t12991&&t12994);
bool t12996 = (t12993||t12995);
bool t12997 = (t12972<196);
bool t12998 = (t12972>float(6.76));
bool t12999 = (t12997&&t12998);
bool t13000 = (t12996&&t12999);
float t13001;
float t13002;
float t13003;
float t13004;
if(t13000){
float t13005 = (t12963/t12961);
float t13006 = (-t13005);
float t13007 = (t13006*t12954);
float t13008 = (t12957+t13007);
float t13009 = atan(t13008,t12969);
float t13010 = (u1.u0/30);
float t13011 = (t13009+t13010);
float t13012 = (2*3.1415927);
float t13013 = (t13011+t13012);
float t13014 = mod(t13013,2);
float t13015 = (t13014*3.1415927);
float t13016 = (t13015/t13012);
float t13017 = (t13006*t12961);
float t13018 = (t12963+t13017);
float t13019 = (t13006*t12967);
float t13020 = (t12969+t13019);
vec3 t13021 = vec3(t13008,t13018,t13020);
float t13022 = length(t13021);
float t13023 = (t13022*t13022);
float t13024 = sqrt(t13023);
float t13025 = (t13024-float(2.6));
float t13026 = (t13025/float(11.4));
vec4 t13027 = texture(s4,vec2(t13016,t13026));
t13001 = t13027.x;
t13002 = t13027.y;
t13003 = t13027.z;
vec3 t13028 = vec3(t13027.x,t13027.y,t13027.z);
float t13029 = length(t13028);
float t13030 = (t13029*t13029);
float t13031 = (t13030/float(3.0));
bool t13032 = (t13031<=1);
float t13033;
if(t13032){
t13033 = t13031;
} else {
t13033 = 1;
}
bool t13034 = (t13033>=0);
float t13035;
if(t13034){
t13035 = t13033;
} else {
t13035 = 0;
}
t13004 = t13035;
} else {
t13001 = 0;
t13002 = 0;
t13003 = 0;
t13004 = 0;
}
float t13036 = (1-t12985);
float t13037 = (t12982*t13036);
float t13038 = (t12985+t13037);
float t13039 = (1-t13038);
float t13040 = (t13004*t13039);
float t13041 = (t13001*t13040);
float t13042 = (t12989+t13041);
float t13043 = (t115*t12957);
float t13044 = pow(t12972,float(2.5));
float t13045 = (t13043/t13044);
float t13046 = (t13045*t12955);
float t13047 = (t12954+t13046);
float t13048 = (t12955*u1.u4);
float t13049 = (t13047*t13048);
float t13050 = (t12957+t13049);
float t13051 = (t115*t12963);
float t13052 = (t13051/t13044);
float t13053 = (t13052*t12955);
float t13054 = (t12961+t13053);
float t13055 = (t13054*t13048);
float t13056 = (t12963+t13055);
float t13057 = (t115*t12969);
float t13058 = (t13057/t13044);
float t13059 = (t13058*t12955);
float t13060 = (t12967+t13059);
float t13061 = (t13060*t13048);
float t13062 = (t12969+t13061);
vec3 t13063 = vec3(t13050,t13056,t13062);
float t13064 = length(t13063);
float t13065 = (t13064*t13064);
bool t13066 = (t13065<1);
vec3 t13067 = vec3(t12957,t12963,t12969);
float t13068 = length(t13067);
float t13069 = (t13068*t13068);
bool t13070 = (t13069>1);
bool t13071 = (t13066&&t13070);
float t13072;
float t13073;
float t13074;
float t13075;
if(t13071){
t13072 = 0;
t13073 = 0;
t13074 = 0;
t13075 = 1;
} else {
t13072 = 0;
t13073 = 0;
t13074 = 0;
t13075 = 0;
}
float t13076 = (1-t13038);
float t13077 = (t13004*t13076);
float t13078 = (t13038+t13077);
float t13079 = (1-t13078);
float t13080 = (t13075*t13079);
float t13081 = (t13072*t13080);
float t13082 = (t13042+t13081);
bool t13083 = (t12963>0);
bool t13084 = (t13056>0);
bool t13085 = (!t13084);
bool t13086 = (t13083&&t13085);
bool t13087 = (!t13083);
bool t13088 = (t13084&&t13087);
bool t13089 = (t13086||t13088);
bool t13090 = (t13065<196);
bool t13091 = (t13065>float(6.76));
bool t13092 = (t13090&&t13091);
bool t13093 = (t13089&&t13092);
float t13094;
float t13095;
float t13096;
float t13097;
if(t13093){
float t13098 = (t13056/t13054);
float t13099 = (-t13098);
float t13100 = (t13099*t13047);
float t13101 = (t13050+t13100);
float t13102 = atan(t13101,t13062);
float t13103 = (u1.u0/30);
float t13104 = (t13102+t13103);
float t13105 = (2*3.1415927);
float t13106 = (t13104+t13105);
float t13107 = mod(t13106,2);
float t13108 = (t13107*3.1415927);
float t13109 = (t13108/t13105);
float t13110 = (t13099*t13054);
float t13111 = (t13056+t13110);
float t13112 = (t13099*t13060);
float t13113 = (t13062+t13112);
vec3 t13114 = vec3(t13101,t13111,t13113);
float t13115 = length(t13114);
float t13116 = (t13115*t13115);
float t13117 = sqrt(t13116);
float t13118 = (t13117-float(2.6));
float t13119 = (t13118/float(11.4));
vec4 t13120 = texture(s4,vec2(t13109,t13119));
t13094 = t13120.x;
t13095 = t13120.y;
t13096 = t13120.z;
vec3 t13121 = vec3(t13120.x,t13120.y,t13120.z);
float t13122 = length(t13121);
float t13123 = (t13122*t13122);
float t13124 = (t13123/float(3.0));
bool t13125 = (t13124<=1);
float t13126;
if(t13125){
t13126 = t13124;
} else {
t13126 = 1;
}
bool t13127 = (t13126>=0);
float t13128;
if(t13127){
t13128 = t13126;
} else {
t13128 = 0;
}
t13097 = t13128;
} else {
t13094 = 0;
t13095 = 0;
t13096 = 0;
t13097 = 0;
}
float t13129 = (1-t13078);
float t13130 = (t13075*t13129);
float t13131 = (t13078+t13130);
float t13132 = (1-t13131);
float t13133 = (t13097*t13132);
float t13134 = (t13094*t13133);
float t13135 = (t13082+t13134);
float t13136 = (t115*t13050);
float t13137 = pow(t13065,float(2.5));
float t13138 = (t13136/t13137);
float t13139 = (t13138*t13048);
float t13140 = (t13047+t13139);
float t13141 = (t13048*u1.u4);
float t13142 = (t13140*t13141);
float t13143 = (t13050+t13142);
float t13144 = (t115*t13056);
float t13145 = (t13144/t13137);
float t13146 = (t13145*t13048);
float t13147 = (t13054+t13146);
float t13148 = (t13147*t13141);
float t13149 = (t13056+t13148);
float t13150 = (t115*t13062);
float t13151 = (t13150/t13137);
float t13152 = (t13151*t13048);
float t13153 = (t13060+t13152);
float t13154 = (t13153*t13141);
float t13155 = (t13062+t13154);
vec3 t13156 = vec3(t13143,t13149,t13155);
float t13157 = length(t13156);
float t13158 = (t13157*t13157);
bool t13159 = (t13158<1);
vec3 t13160 = vec3(t13050,t13056,t13062);
float t13161 = length(t13160);
float t13162 = (t13161*t13161);
bool t13163 = (t13162>1);
bool t13164 = (t13159&&t13163);
float t13165;
float t13166;
float t13167;
float t13168;
if(t13164){
t13165 = 0;
t13166 = 0;
t13167 = 0;
t13168 = 1;
} else {
t13165 = 0;
t13166 = 0;
t13167 = 0;
t13168 = 0;
}
float t13169 = (1-t13131);
float t13170 = (t13097*t13169);
float t13171 = (t13131+t13170);
float t13172 = (1-t13171);
float t13173 = (t13168*t13172);
float t13174 = (t13165*t13173);
float t13175 = (t13135+t13174);
bool t13176 = (t13056>0);
bool t13177 = (t13149>0);
bool t13178 = (!t13177);
bool t13179 = (t13176&&t13178);
bool t13180 = (!t13176);
bool t13181 = (t13177&&t13180);
bool t13182 = (t13179||t13181);
bool t13183 = (t13158<196);
bool t13184 = (t13158>float(6.76));
bool t13185 = (t13183&&t13184);
bool t13186 = (t13182&&t13185);
float t13187;
float t13188;
float t13189;
float t13190;
if(t13186){
float t13191 = (t13149/t13147);
float t13192 = (-t13191);
float t13193 = (t13192*t13140);
float t13194 = (t13143+t13193);
float t13195 = atan(t13194,t13155);
float t13196 = (u1.u0/30);
float t13197 = (t13195+t13196);
float t13198 = (2*3.1415927);
float t13199 = (t13197+t13198);
float t13200 = mod(t13199,2);
float t13201 = (t13200*3.1415927);
float t13202 = (t13201/t13198);
float t13203 = (t13192*t13147);
float t13204 = (t13149+t13203);
float t13205 = (t13192*t13153);
float t13206 = (t13155+t13205);
vec3 t13207 = vec3(t13194,t13204,t13206);
float t13208 = length(t13207);
float t13209 = (t13208*t13208);
float t13210 = sqrt(t13209);
float t13211 = (t13210-float(2.6));
float t13212 = (t13211/float(11.4));
vec4 t13213 = texture(s4,vec2(t13202,t13212));
t13187 = t13213.x;
t13188 = t13213.y;
t13189 = t13213.z;
vec3 t13214 = vec3(t13213.x,t13213.y,t13213.z);
float t13215 = length(t13214);
float t13216 = (t13215*t13215);
float t13217 = (t13216/float(3.0));
bool t13218 = (t13217<=1);
float t13219;
if(t13218){
t13219 = t13217;
} else {
t13219 = 1;
}
bool t13220 = (t13219>=0);
float t13221;
if(t13220){
t13221 = t13219;
} else {
t13221 = 0;
}
t13190 = t13221;
} else {
t13187 = 0;
t13188 = 0;
t13189 = 0;
t13190 = 0;
}
float t13222 = (1-t13171);
float t13223 = (t13168*t13222);
float t13224 = (t13171+t13223);
float t13225 = (1-t13224);
float t13226 = (t13190*t13225);
float t13227 = (t13187*t13226);
float t13228 = (t13175+t13227);
float t13229 = (t115*t13143);
float t13230 = pow(t13158,float(2.5));
float t13231 = (t13229/t13230);
float t13232 = (t13231*t13141);
float t13233 = (t13140+t13232);
float t13234 = (t13141*u1.u4);
float t13235 = (t13233*t13234);
float t13236 = (t13143+t13235);
float t13237 = (t115*t13149);
float t13238 = (t13237/t13230);
float t13239 = (t13238*t13141);
float t13240 = (t13147+t13239);
float t13241 = (t13240*t13234);
float t13242 = (t13149+t13241);
float t13243 = (t115*t13155);
float t13244 = (t13243/t13230);
float t13245 = (t13244*t13141);
float t13246 = (t13153+t13245);
float t13247 = (t13246*t13234);
float t13248 = (t13155+t13247);
vec3 t13249 = vec3(t13236,t13242,t13248);
float t13250 = length(t13249);
float t13251 = (t13250*t13250);
bool t13252 = (t13251<1);
vec3 t13253 = vec3(t13143,t13149,t13155);
float t13254 = length(t13253);
float t13255 = (t13254*t13254);
bool t13256 = (t13255>1);
bool t13257 = (t13252&&t13256);
float t13258;
float t13259;
float t13260;
float t13261;
if(t13257){
t13258 = 0;
t13259 = 0;
t13260 = 0;
t13261 = 1;
} else {
t13258 = 0;
t13259 = 0;
t13260 = 0;
t13261 = 0;
}
float t13262 = (1-t13224);
float t13263 = (t13190*t13262);
float t13264 = (t13224+t13263);
float t13265 = (1-t13264);
float t13266 = (t13261*t13265);
float t13267 = (t13258*t13266);
float t13268 = (t13228+t13267);
bool t13269 = (t13149>0);
bool t13270 = (t13242>0);
bool t13271 = (!t13270);
bool t13272 = (t13269&&t13271);
bool t13273 = (!t13269);
bool t13274 = (t13270&&t13273);
bool t13275 = (t13272||t13274);
bool t13276 = (t13251<196);
bool t13277 = (t13251>float(6.76));
bool t13278 = (t13276&&t13277);
bool t13279 = (t13275&&t13278);
float t13280;
float t13281;
float t13282;
float t13283;
if(t13279){
float t13284 = (t13242/t13240);
float t13285 = (-t13284);
float t13286 = (t13285*t13233);
float t13287 = (t13236+t13286);
float t13288 = atan(t13287,t13248);
float t13289 = (u1.u0/30);
float t13290 = (t13288+t13289);
float t13291 = (2*3.1415927);
float t13292 = (t13290+t13291);
float t13293 = mod(t13292,2);
float t13294 = (t13293*3.1415927);
float t13295 = (t13294/t13291);
float t13296 = (t13285*t13240);
float t13297 = (t13242+t13296);
float t13298 = (t13285*t13246);
float t13299 = (t13248+t13298);
vec3 t13300 = vec3(t13287,t13297,t13299);
float t13301 = length(t13300);
float t13302 = (t13301*t13301);
float t13303 = sqrt(t13302);
float t13304 = (t13303-float(2.6));
float t13305 = (t13304/float(11.4));
vec4 t13306 = texture(s4,vec2(t13295,t13305));
t13280 = t13306.x;
t13281 = t13306.y;
t13282 = t13306.z;
vec3 t13307 = vec3(t13306.x,t13306.y,t13306.z);
float t13308 = length(t13307);
float t13309 = (t13308*t13308);
float t13310 = (t13309/float(3.0));
bool t13311 = (t13310<=1);
float t13312;
if(t13311){
t13312 = t13310;
} else {
t13312 = 1;
}
bool t13313 = (t13312>=0);
float t13314;
if(t13313){
t13314 = t13312;
} else {
t13314 = 0;
}
t13283 = t13314;
} else {
t13280 = 0;
t13281 = 0;
t13282 = 0;
t13283 = 0;
}
float t13315 = (1-t13264);
float t13316 = (t13261*t13315);
float t13317 = (t13264+t13316);
float t13318 = (1-t13317);
float t13319 = (t13283*t13318);
float t13320 = (t13280*t13319);
float t13321 = (t13268+t13320);
float t13322 = (t115*t13236);
float t13323 = pow(t13251,float(2.5));
float t13324 = (t13322/t13323);
float t13325 = (t13324*t13234);
float t13326 = (t13233+t13325);
float t13327 = (t13234*u1.u4);
float t13328 = (t13326*t13327);
float t13329 = (t13236+t13328);
float t13330 = (t115*t13242);
float t13331 = (t13330/t13323);
float t13332 = (t13331*t13234);
float t13333 = (t13240+t13332);
float t13334 = (t13333*t13327);
float t13335 = (t13242+t13334);
float t13336 = (t115*t13248);
float t13337 = (t13336/t13323);
float t13338 = (t13337*t13234);
float t13339 = (t13246+t13338);
float t13340 = (t13339*t13327);
float t13341 = (t13248+t13340);
vec3 t13342 = vec3(t13329,t13335,t13341);
float t13343 = length(t13342);
float t13344 = (t13343*t13343);
bool t13345 = (t13344<1);
vec3 t13346 = vec3(t13236,t13242,t13248);
float t13347 = length(t13346);
float t13348 = (t13347*t13347);
bool t13349 = (t13348>1);
bool t13350 = (t13345&&t13349);
float t13351;
float t13352;
float t13353;
float t13354;
if(t13350){
t13351 = 0;
t13352 = 0;
t13353 = 0;
t13354 = 1;
} else {
t13351 = 0;
t13352 = 0;
t13353 = 0;
t13354 = 0;
}
float t13355 = (1-t13317);
float t13356 = (t13283*t13355);
float t13357 = (t13317+t13356);
float t13358 = (1-t13357);
float t13359 = (t13354*t13358);
float t13360 = (t13351*t13359);
float t13361 = (t13321+t13360);
bool t13362 = (t13242>0);
bool t13363 = (t13335>0);
bool t13364 = (!t13363);
bool t13365 = (t13362&&t13364);
bool t13366 = (!t13362);
bool t13367 = (t13363&&t13366);
bool t13368 = (t13365||t13367);
bool t13369 = (t13344<196);
bool t13370 = (t13344>float(6.76));
bool t13371 = (t13369&&t13370);
bool t13372 = (t13368&&t13371);
float t13373;
float t13374;
float t13375;
float t13376;
if(t13372){
float t13377 = (t13335/t13333);
float t13378 = (-t13377);
float t13379 = (t13378*t13326);
float t13380 = (t13329+t13379);
float t13381 = atan(t13380,t13341);
float t13382 = (u1.u0/30);
float t13383 = (t13381+t13382);
float t13384 = (2*3.1415927);
float t13385 = (t13383+t13384);
float t13386 = mod(t13385,2);
float t13387 = (t13386*3.1415927);
float t13388 = (t13387/t13384);
float t13389 = (t13378*t13333);
float t13390 = (t13335+t13389);
float t13391 = (t13378*t13339);
float t13392 = (t13341+t13391);
vec3 t13393 = vec3(t13380,t13390,t13392);
float t13394 = length(t13393);
float t13395 = (t13394*t13394);
float t13396 = sqrt(t13395);
float t13397 = (t13396-float(2.6));
float t13398 = (t13397/float(11.4));
vec4 t13399 = texture(s4,vec2(t13388,t13398));
t13373 = t13399.x;
t13374 = t13399.y;
t13375 = t13399.z;
vec3 t13400 = vec3(t13399.x,t13399.y,t13399.z);
float t13401 = length(t13400);
float t13402 = (t13401*t13401);
float t13403 = (t13402/float(3.0));
bool t13404 = (t13403<=1);
float t13405;
if(t13404){
t13405 = t13403;
} else {
t13405 = 1;
}
bool t13406 = (t13405>=0);
float t13407;
if(t13406){
t13407 = t13405;
} else {
t13407 = 0;
}
t13376 = t13407;
} else {
t13373 = 0;
t13374 = 0;
t13375 = 0;
t13376 = 0;
}
float t13408 = (1-t13357);
float t13409 = (t13354*t13408);
float t13410 = (t13357+t13409);
float t13411 = (1-t13410);
float t13412 = (t13376*t13411);
float t13413 = (t13373*t13412);
float t13414 = (t13361+t13413);
float t13415 = (t115*t13329);
float t13416 = pow(t13344,float(2.5));
float t13417 = (t13415/t13416);
float t13418 = (t13417*t13327);
float t13419 = (t13326+t13418);
float t13420 = (t13327*u1.u4);
float t13421 = (t13419*t13420);
float t13422 = (t13329+t13421);
float t13423 = (t115*t13335);
float t13424 = (t13423/t13416);
float t13425 = (t13424*t13327);
float t13426 = (t13333+t13425);
float t13427 = (t13426*t13420);
float t13428 = (t13335+t13427);
float t13429 = (t115*t13341);
float t13430 = (t13429/t13416);
float t13431 = (t13430*t13327);
float t13432 = (t13339+t13431);
float t13433 = (t13432*t13420);
float t13434 = (t13341+t13433);
vec3 t13435 = vec3(t13422,t13428,t13434);
float t13436 = length(t13435);
float t13437 = (t13436*t13436);
bool t13438 = (t13437<1);
vec3 t13439 = vec3(t13329,t13335,t13341);
float t13440 = length(t13439);
float t13441 = (t13440*t13440);
bool t13442 = (t13441>1);
bool t13443 = (t13438&&t13442);
float t13444;
float t13445;
float t13446;
float t13447;
if(t13443){
t13444 = 0;
t13445 = 0;
t13446 = 0;
t13447 = 1;
} else {
t13444 = 0;
t13445 = 0;
t13446 = 0;
t13447 = 0;
}
float t13448 = (1-t13410);
float t13449 = (t13376*t13448);
float t13450 = (t13410+t13449);
float t13451 = (1-t13450);
float t13452 = (t13447*t13451);
float t13453 = (t13444*t13452);
float t13454 = (t13414+t13453);
bool t13455 = (t13335>0);
bool t13456 = (t13428>0);
bool t13457 = (!t13456);
bool t13458 = (t13455&&t13457);
bool t13459 = (!t13455);
bool t13460 = (t13456&&t13459);
bool t13461 = (t13458||t13460);
bool t13462 = (t13437<196);
bool t13463 = (t13437>float(6.76));
bool t13464 = (t13462&&t13463);
bool t13465 = (t13461&&t13464);
float t13466;
float t13467;
float t13468;
float t13469;
if(t13465){
float t13470 = (t13428/t13426);
float t13471 = (-t13470);
float t13472 = (t13471*t13419);
float t13473 = (t13422+t13472);
float t13474 = atan(t13473,t13434);
float t13475 = (u1.u0/30);
float t13476 = (t13474+t13475);
float t13477 = (2*3.1415927);
float t13478 = (t13476+t13477);
float t13479 = mod(t13478,2);
float t13480 = (t13479*3.1415927);
float t13481 = (t13480/t13477);
float t13482 = (t13471*t13426);
float t13483 = (t13428+t13482);
float t13484 = (t13471*t13432);
float t13485 = (t13434+t13484);
vec3 t13486 = vec3(t13473,t13483,t13485);
float t13487 = length(t13486);
float t13488 = (t13487*t13487);
float t13489 = sqrt(t13488);
float t13490 = (t13489-float(2.6));
float t13491 = (t13490/float(11.4));
vec4 t13492 = texture(s4,vec2(t13481,t13491));
t13466 = t13492.x;
t13467 = t13492.y;
t13468 = t13492.z;
vec3 t13493 = vec3(t13492.x,t13492.y,t13492.z);
float t13494 = length(t13493);
float t13495 = (t13494*t13494);
float t13496 = (t13495/float(3.0));
bool t13497 = (t13496<=1);
float t13498;
if(t13497){
t13498 = t13496;
} else {
t13498 = 1;
}
bool t13499 = (t13498>=0);
float t13500;
if(t13499){
t13500 = t13498;
} else {
t13500 = 0;
}
t13469 = t13500;
} else {
t13466 = 0;
t13467 = 0;
t13468 = 0;
t13469 = 0;
}
float t13501 = (1-t13450);
float t13502 = (t13447*t13501);
float t13503 = (t13450+t13502);
float t13504 = (1-t13503);
float t13505 = (t13469*t13504);
float t13506 = (t13466*t13505);
float t13507 = (t13454+t13506);
float t13508 = (t115*t13422);
float t13509 = pow(t13437,float(2.5));
float t13510 = (t13508/t13509);
float t13511 = (t13510*t13420);
float t13512 = (t13419+t13511);
float t13513 = (t13420*u1.u4);
float t13514 = (t13512*t13513);
float t13515 = (t13422+t13514);
float t13516 = (t115*t13428);
float t13517 = (t13516/t13509);
float t13518 = (t13517*t13420);
float t13519 = (t13426+t13518);
float t13520 = (t13519*t13513);
float t13521 = (t13428+t13520);
float t13522 = (t115*t13434);
float t13523 = (t13522/t13509);
float t13524 = (t13523*t13420);
float t13525 = (t13432+t13524);
float t13526 = (t13525*t13513);
float t13527 = (t13434+t13526);
vec3 t13528 = vec3(t13515,t13521,t13527);
float t13529 = length(t13528);
float t13530 = (t13529*t13529);
bool t13531 = (t13530<1);
vec3 t13532 = vec3(t13422,t13428,t13434);
float t13533 = length(t13532);
float t13534 = (t13533*t13533);
bool t13535 = (t13534>1);
bool t13536 = (t13531&&t13535);
float t13537;
float t13538;
float t13539;
float t13540;
if(t13536){
t13537 = 0;
t13538 = 0;
t13539 = 0;
t13540 = 1;
} else {
t13537 = 0;
t13538 = 0;
t13539 = 0;
t13540 = 0;
}
float t13541 = (1-t13503);
float t13542 = (t13469*t13541);
float t13543 = (t13503+t13542);
float t13544 = (1-t13543);
float t13545 = (t13540*t13544);
float t13546 = (t13537*t13545);
float t13547 = (t13507+t13546);
bool t13548 = (t13428>0);
bool t13549 = (t13521>0);
bool t13550 = (!t13549);
bool t13551 = (t13548&&t13550);
bool t13552 = (!t13548);
bool t13553 = (t13549&&t13552);
bool t13554 = (t13551||t13553);
bool t13555 = (t13530<196);
bool t13556 = (t13530>float(6.76));
bool t13557 = (t13555&&t13556);
bool t13558 = (t13554&&t13557);
float t13559;
float t13560;
float t13561;
float t13562;
if(t13558){
float t13563 = (t13521/t13519);
float t13564 = (-t13563);
float t13565 = (t13564*t13512);
float t13566 = (t13515+t13565);
float t13567 = atan(t13566,t13527);
float t13568 = (u1.u0/30);
float t13569 = (t13567+t13568);
float t13570 = (2*3.1415927);
float t13571 = (t13569+t13570);
float t13572 = mod(t13571,2);
float t13573 = (t13572*3.1415927);
float t13574 = (t13573/t13570);
float t13575 = (t13564*t13519);
float t13576 = (t13521+t13575);
float t13577 = (t13564*t13525);
float t13578 = (t13527+t13577);
vec3 t13579 = vec3(t13566,t13576,t13578);
float t13580 = length(t13579);
float t13581 = (t13580*t13580);
float t13582 = sqrt(t13581);
float t13583 = (t13582-float(2.6));
float t13584 = (t13583/float(11.4));
vec4 t13585 = texture(s4,vec2(t13574,t13584));
t13559 = t13585.x;
t13560 = t13585.y;
t13561 = t13585.z;
vec3 t13586 = vec3(t13585.x,t13585.y,t13585.z);
float t13587 = length(t13586);
float t13588 = (t13587*t13587);
float t13589 = (t13588/float(3.0));
bool t13590 = (t13589<=1);
float t13591;
if(t13590){
t13591 = t13589;
} else {
t13591 = 1;
}
bool t13592 = (t13591>=0);
float t13593;
if(t13592){
t13593 = t13591;
} else {
t13593 = 0;
}
t13562 = t13593;
} else {
t13559 = 0;
t13560 = 0;
t13561 = 0;
t13562 = 0;
}
float t13594 = (1-t13543);
float t13595 = (t13540*t13594);
float t13596 = (t13543+t13595);
float t13597 = (1-t13596);
float t13598 = (t13562*t13597);
float t13599 = (t13559*t13598);
float t13600 = (t13547+t13599);
float t13601 = (t115*t13515);
float t13602 = pow(t13530,float(2.5));
float t13603 = (t13601/t13602);
float t13604 = (t13603*t13513);
float t13605 = (t13512+t13604);
float t13606 = (t13513*u1.u4);
float t13607 = (t13605*t13606);
float t13608 = (t13515+t13607);
float t13609 = (t115*t13521);
float t13610 = (t13609/t13602);
float t13611 = (t13610*t13513);
float t13612 = (t13519+t13611);
float t13613 = (t13612*t13606);
float t13614 = (t13521+t13613);
float t13615 = (t115*t13527);
float t13616 = (t13615/t13602);
float t13617 = (t13616*t13513);
float t13618 = (t13525+t13617);
float t13619 = (t13618*t13606);
float t13620 = (t13527+t13619);
vec3 t13621 = vec3(t13608,t13614,t13620);
float t13622 = length(t13621);
float t13623 = (t13622*t13622);
bool t13624 = (t13623<1);
vec3 t13625 = vec3(t13515,t13521,t13527);
float t13626 = length(t13625);
float t13627 = (t13626*t13626);
bool t13628 = (t13627>1);
bool t13629 = (t13624&&t13628);
float t13630;
float t13631;
float t13632;
float t13633;
if(t13629){
t13630 = 0;
t13631 = 0;
t13632 = 0;
t13633 = 1;
} else {
t13630 = 0;
t13631 = 0;
t13632 = 0;
t13633 = 0;
}
float t13634 = (1-t13596);
float t13635 = (t13562*t13634);
float t13636 = (t13596+t13635);
float t13637 = (1-t13636);
float t13638 = (t13633*t13637);
float t13639 = (t13630*t13638);
float t13640 = (t13600+t13639);
bool t13641 = (t13521>0);
bool t13642 = (t13614>0);
bool t13643 = (!t13642);
bool t13644 = (t13641&&t13643);
bool t13645 = (!t13641);
bool t13646 = (t13642&&t13645);
bool t13647 = (t13644||t13646);
bool t13648 = (t13623<196);
bool t13649 = (t13623>float(6.76));
bool t13650 = (t13648&&t13649);
bool t13651 = (t13647&&t13650);
float t13652;
float t13653;
float t13654;
float t13655;
if(t13651){
float t13656 = (t13614/t13612);
float t13657 = (-t13656);
float t13658 = (t13657*t13605);
float t13659 = (t13608+t13658);
float t13660 = atan(t13659,t13620);
float t13661 = (u1.u0/30);
float t13662 = (t13660+t13661);
float t13663 = (2*3.1415927);
float t13664 = (t13662+t13663);
float t13665 = mod(t13664,2);
float t13666 = (t13665*3.1415927);
float t13667 = (t13666/t13663);
float t13668 = (t13657*t13612);
float t13669 = (t13614+t13668);
float t13670 = (t13657*t13618);
float t13671 = (t13620+t13670);
vec3 t13672 = vec3(t13659,t13669,t13671);
float t13673 = length(t13672);
float t13674 = (t13673*t13673);
float t13675 = sqrt(t13674);
float t13676 = (t13675-float(2.6));
float t13677 = (t13676/float(11.4));
vec4 t13678 = texture(s4,vec2(t13667,t13677));
t13652 = t13678.x;
t13653 = t13678.y;
t13654 = t13678.z;
vec3 t13679 = vec3(t13678.x,t13678.y,t13678.z);
float t13680 = length(t13679);
float t13681 = (t13680*t13680);
float t13682 = (t13681/float(3.0));
bool t13683 = (t13682<=1);
float t13684;
if(t13683){
t13684 = t13682;
} else {
t13684 = 1;
}
bool t13685 = (t13684>=0);
float t13686;
if(t13685){
t13686 = t13684;
} else {
t13686 = 0;
}
t13655 = t13686;
} else {
t13652 = 0;
t13653 = 0;
t13654 = 0;
t13655 = 0;
}
float t13687 = (1-t13636);
float t13688 = (t13633*t13687);
float t13689 = (t13636+t13688);
float t13690 = (1-t13689);
float t13691 = (t13655*t13690);
float t13692 = (t13652*t13691);
float t13693 = (t13640+t13692);
float t13694 = (t115*t13608);
float t13695 = pow(t13623,float(2.5));
float t13696 = (t13694/t13695);
float t13697 = (t13696*t13606);
float t13698 = (t13605+t13697);
float t13699 = (t13606*u1.u4);
float t13700 = (t13698*t13699);
float t13701 = (t13608+t13700);
float t13702 = (t115*t13614);
float t13703 = (t13702/t13695);
float t13704 = (t13703*t13606);
float t13705 = (t13612+t13704);
float t13706 = (t13705*t13699);
float t13707 = (t13614+t13706);
float t13708 = (t115*t13620);
float t13709 = (t13708/t13695);
float t13710 = (t13709*t13606);
float t13711 = (t13618+t13710);
float t13712 = (t13711*t13699);
float t13713 = (t13620+t13712);
vec3 t13714 = vec3(t13701,t13707,t13713);
float t13715 = length(t13714);
float t13716 = (t13715*t13715);
bool t13717 = (t13716<1);
vec3 t13718 = vec3(t13608,t13614,t13620);
float t13719 = length(t13718);
float t13720 = (t13719*t13719);
bool t13721 = (t13720>1);
bool t13722 = (t13717&&t13721);
float t13723;
float t13724;
float t13725;
float t13726;
if(t13722){
t13723 = 0;
t13724 = 0;
t13725 = 0;
t13726 = 1;
} else {
t13723 = 0;
t13724 = 0;
t13725 = 0;
t13726 = 0;
}
float t13727 = (1-t13689);
float t13728 = (t13655*t13727);
float t13729 = (t13689+t13728);
float t13730 = (1-t13729);
float t13731 = (t13726*t13730);
float t13732 = (t13723*t13731);
float t13733 = (t13693+t13732);
bool t13734 = (t13614>0);
bool t13735 = (t13707>0);
bool t13736 = (!t13735);
bool t13737 = (t13734&&t13736);
bool t13738 = (!t13734);
bool t13739 = (t13735&&t13738);
bool t13740 = (t13737||t13739);
bool t13741 = (t13716<196);
bool t13742 = (t13716>float(6.76));
bool t13743 = (t13741&&t13742);
bool t13744 = (t13740&&t13743);
float t13745;
float t13746;
float t13747;
float t13748;
if(t13744){
float t13749 = (t13707/t13705);
float t13750 = (-t13749);
float t13751 = (t13750*t13698);
float t13752 = (t13701+t13751);
float t13753 = atan(t13752,t13713);
float t13754 = (u1.u0/30);
float t13755 = (t13753+t13754);
float t13756 = (2*3.1415927);
float t13757 = (t13755+t13756);
float t13758 = mod(t13757,2);
float t13759 = (t13758*3.1415927);
float t13760 = (t13759/t13756);
float t13761 = (t13750*t13705);
float t13762 = (t13707+t13761);
float t13763 = (t13750*t13711);
float t13764 = (t13713+t13763);
vec3 t13765 = vec3(t13752,t13762,t13764);
float t13766 = length(t13765);
float t13767 = (t13766*t13766);
float t13768 = sqrt(t13767);
float t13769 = (t13768-float(2.6));
float t13770 = (t13769/float(11.4));
vec4 t13771 = texture(s4,vec2(t13760,t13770));
t13745 = t13771.x;
t13746 = t13771.y;
t13747 = t13771.z;
vec3 t13772 = vec3(t13771.x,t13771.y,t13771.z);
float t13773 = length(t13772);
float t13774 = (t13773*t13773);
float t13775 = (t13774/float(3.0));
bool t13776 = (t13775<=1);
float t13777;
if(t13776){
t13777 = t13775;
} else {
t13777 = 1;
}
bool t13778 = (t13777>=0);
float t13779;
if(t13778){
t13779 = t13777;
} else {
t13779 = 0;
}
t13748 = t13779;
} else {
t13745 = 0;
t13746 = 0;
t13747 = 0;
t13748 = 0;
}
float t13780 = (1-t13729);
float t13781 = (t13726*t13780);
float t13782 = (t13729+t13781);
float t13783 = (1-t13782);
float t13784 = (t13748*t13783);
float t13785 = (t13745*t13784);
float t13786 = (t13733+t13785);
float t13787 = (t115*t13701);
float t13788 = pow(t13716,float(2.5));
float t13789 = (t13787/t13788);
float t13790 = (t13789*t13699);
float t13791 = (t13698+t13790);
float t13792 = (t13699*u1.u4);
float t13793 = (t13791*t13792);
float t13794 = (t13701+t13793);
float t13795 = (t115*t13707);
float t13796 = (t13795/t13788);
float t13797 = (t13796*t13699);
float t13798 = (t13705+t13797);
float t13799 = (t13798*t13792);
float t13800 = (t13707+t13799);
float t13801 = (t115*t13713);
float t13802 = (t13801/t13788);
float t13803 = (t13802*t13699);
float t13804 = (t13711+t13803);
float t13805 = (t13804*t13792);
float t13806 = (t13713+t13805);
vec3 t13807 = vec3(t13794,t13800,t13806);
float t13808 = length(t13807);
float t13809 = (t13808*t13808);
bool t13810 = (t13809<1);
vec3 t13811 = vec3(t13701,t13707,t13713);
float t13812 = length(t13811);
float t13813 = (t13812*t13812);
bool t13814 = (t13813>1);
bool t13815 = (t13810&&t13814);
float t13816;
float t13817;
float t13818;
float t13819;
if(t13815){
t13816 = 0;
t13817 = 0;
t13818 = 0;
t13819 = 1;
} else {
t13816 = 0;
t13817 = 0;
t13818 = 0;
t13819 = 0;
}
float t13820 = (1-t13782);
float t13821 = (t13748*t13820);
float t13822 = (t13782+t13821);
float t13823 = (1-t13822);
float t13824 = (t13819*t13823);
float t13825 = (t13816*t13824);
float t13826 = (t13786+t13825);
bool t13827 = (t13707>0);
bool t13828 = (t13800>0);
bool t13829 = (!t13828);
bool t13830 = (t13827&&t13829);
bool t13831 = (!t13827);
bool t13832 = (t13828&&t13831);
bool t13833 = (t13830||t13832);
bool t13834 = (t13809<196);
bool t13835 = (t13809>float(6.76));
bool t13836 = (t13834&&t13835);
bool t13837 = (t13833&&t13836);
float t13838;
float t13839;
float t13840;
float t13841;
if(t13837){
float t13842 = (t13800/t13798);
float t13843 = (-t13842);
float t13844 = (t13843*t13791);
float t13845 = (t13794+t13844);
float t13846 = atan(t13845,t13806);
float t13847 = (u1.u0/30);
float t13848 = (t13846+t13847);
float t13849 = (2*3.1415927);
float t13850 = (t13848+t13849);
float t13851 = mod(t13850,2);
float t13852 = (t13851*3.1415927);
float t13853 = (t13852/t13849);
float t13854 = (t13843*t13798);
float t13855 = (t13800+t13854);
float t13856 = (t13843*t13804);
float t13857 = (t13806+t13856);
vec3 t13858 = vec3(t13845,t13855,t13857);
float t13859 = length(t13858);
float t13860 = (t13859*t13859);
float t13861 = sqrt(t13860);
float t13862 = (t13861-float(2.6));
float t13863 = (t13862/float(11.4));
vec4 t13864 = texture(s4,vec2(t13853,t13863));
t13838 = t13864.x;
t13839 = t13864.y;
t13840 = t13864.z;
vec3 t13865 = vec3(t13864.x,t13864.y,t13864.z);
float t13866 = length(t13865);
float t13867 = (t13866*t13866);
float t13868 = (t13867/float(3.0));
bool t13869 = (t13868<=1);
float t13870;
if(t13869){
t13870 = t13868;
} else {
t13870 = 1;
}
bool t13871 = (t13870>=0);
float t13872;
if(t13871){
t13872 = t13870;
} else {
t13872 = 0;
}
t13841 = t13872;
} else {
t13838 = 0;
t13839 = 0;
t13840 = 0;
t13841 = 0;
}
float t13873 = (1-t13822);
float t13874 = (t13819*t13873);
float t13875 = (t13822+t13874);
float t13876 = (1-t13875);
float t13877 = (t13841*t13876);
float t13878 = (t13838*t13877);
float t13879 = (t13826+t13878);
float t13880 = (t115*t13794);
float t13881 = pow(t13809,float(2.5));
float t13882 = (t13880/t13881);
float t13883 = (t13882*t13792);
float t13884 = (t13791+t13883);
float t13885 = (t13792*u1.u4);
float t13886 = (t13884*t13885);
float t13887 = (t13794+t13886);
float t13888 = (t115*t13800);
float t13889 = (t13888/t13881);
float t13890 = (t13889*t13792);
float t13891 = (t13798+t13890);
float t13892 = (t13891*t13885);
float t13893 = (t13800+t13892);
float t13894 = (t115*t13806);
float t13895 = (t13894/t13881);
float t13896 = (t13895*t13792);
float t13897 = (t13804+t13896);
float t13898 = (t13897*t13885);
float t13899 = (t13806+t13898);
vec3 t13900 = vec3(t13887,t13893,t13899);
float t13901 = length(t13900);
float t13902 = (t13901*t13901);
bool t13903 = (t13902<1);
vec3 t13904 = vec3(t13794,t13800,t13806);
float t13905 = length(t13904);
float t13906 = (t13905*t13905);
bool t13907 = (t13906>1);
bool t13908 = (t13903&&t13907);
float t13909;
float t13910;
float t13911;
float t13912;
if(t13908){
t13909 = 0;
t13910 = 0;
t13911 = 0;
t13912 = 1;
} else {
t13909 = 0;
t13910 = 0;
t13911 = 0;
t13912 = 0;
}
float t13913 = (1-t13875);
float t13914 = (t13841*t13913);
float t13915 = (t13875+t13914);
float t13916 = (1-t13915);
float t13917 = (t13912*t13916);
float t13918 = (t13909*t13917);
float t13919 = (t13879+t13918);
bool t13920 = (t13800>0);
bool t13921 = (t13893>0);
bool t13922 = (!t13921);
bool t13923 = (t13920&&t13922);
bool t13924 = (!t13920);
bool t13925 = (t13921&&t13924);
bool t13926 = (t13923||t13925);
bool t13927 = (t13902<196);
bool t13928 = (t13902>float(6.76));
bool t13929 = (t13927&&t13928);
bool t13930 = (t13926&&t13929);
float t13931;
float t13932;
float t13933;
float t13934;
if(t13930){
float t13935 = (t13893/t13891);
float t13936 = (-t13935);
float t13937 = (t13936*t13884);
float t13938 = (t13887+t13937);
float t13939 = atan(t13938,t13899);
float t13940 = (u1.u0/30);
float t13941 = (t13939+t13940);
float t13942 = (2*3.1415927);
float t13943 = (t13941+t13942);
float t13944 = mod(t13943,2);
float t13945 = (t13944*3.1415927);
float t13946 = (t13945/t13942);
float t13947 = (t13936*t13891);
float t13948 = (t13893+t13947);
float t13949 = (t13936*t13897);
float t13950 = (t13899+t13949);
vec3 t13951 = vec3(t13938,t13948,t13950);
float t13952 = length(t13951);
float t13953 = (t13952*t13952);
float t13954 = sqrt(t13953);
float t13955 = (t13954-float(2.6));
float t13956 = (t13955/float(11.4));
vec4 t13957 = texture(s4,vec2(t13946,t13956));
t13931 = t13957.x;
t13932 = t13957.y;
t13933 = t13957.z;
vec3 t13958 = vec3(t13957.x,t13957.y,t13957.z);
float t13959 = length(t13958);
float t13960 = (t13959*t13959);
float t13961 = (t13960/float(3.0));
bool t13962 = (t13961<=1);
float t13963;
if(t13962){
t13963 = t13961;
} else {
t13963 = 1;
}
bool t13964 = (t13963>=0);
float t13965;
if(t13964){
t13965 = t13963;
} else {
t13965 = 0;
}
t13934 = t13965;
} else {
t13931 = 0;
t13932 = 0;
t13933 = 0;
t13934 = 0;
}
float t13966 = (1-t13915);
float t13967 = (t13912*t13966);
float t13968 = (t13915+t13967);
float t13969 = (1-t13968);
float t13970 = (t13934*t13969);
float t13971 = (t13931*t13970);
float t13972 = (t13919+t13971);
float t13973 = (t115*t13887);
float t13974 = pow(t13902,float(2.5));
float t13975 = (t13973/t13974);
float t13976 = (t13975*t13885);
float t13977 = (t13884+t13976);
float t13978 = (t13885*u1.u4);
float t13979 = (t13977*t13978);
float t13980 = (t13887+t13979);
float t13981 = (t115*t13893);
float t13982 = (t13981/t13974);
float t13983 = (t13982*t13885);
float t13984 = (t13891+t13983);
float t13985 = (t13984*t13978);
float t13986 = (t13893+t13985);
float t13987 = (t115*t13899);
float t13988 = (t13987/t13974);
float t13989 = (t13988*t13885);
float t13990 = (t13897+t13989);
float t13991 = (t13990*t13978);
float t13992 = (t13899+t13991);
vec3 t13993 = vec3(t13980,t13986,t13992);
float t13994 = length(t13993);
float t13995 = (t13994*t13994);
bool t13996 = (t13995<1);
vec3 t13997 = vec3(t13887,t13893,t13899);
float t13998 = length(t13997);
float t13999 = (t13998*t13998);
bool t14000 = (t13999>1);
bool t14001 = (t13996&&t14000);
float t14002;
float t14003;
float t14004;
float t14005;
if(t14001){
t14002 = 0;
t14003 = 0;
t14004 = 0;
t14005 = 1;
} else {
t14002 = 0;
t14003 = 0;
t14004 = 0;
t14005 = 0;
}
float t14006 = (1-t13968);
float t14007 = (t13934*t14006);
float t14008 = (t13968+t14007);
float t14009 = (1-t14008);
float t14010 = (t14005*t14009);
float t14011 = (t14002*t14010);
float t14012 = (t13972+t14011);
bool t14013 = (t13893>0);
bool t14014 = (t13986>0);
bool t14015 = (!t14014);
bool t14016 = (t14013&&t14015);
bool t14017 = (!t14013);
bool t14018 = (t14014&&t14017);
bool t14019 = (t14016||t14018);
bool t14020 = (t13995<196);
bool t14021 = (t13995>float(6.76));
bool t14022 = (t14020&&t14021);
bool t14023 = (t14019&&t14022);
float t14024;
float t14025;
float t14026;
float t14027;
if(t14023){
float t14028 = (t13986/t13984);
float t14029 = (-t14028);
float t14030 = (t14029*t13977);
float t14031 = (t13980+t14030);
float t14032 = atan(t14031,t13992);
float t14033 = (u1.u0/30);
float t14034 = (t14032+t14033);
float t14035 = (2*3.1415927);
float t14036 = (t14034+t14035);
float t14037 = mod(t14036,2);
float t14038 = (t14037*3.1415927);
float t14039 = (t14038/t14035);
float t14040 = (t14029*t13984);
float t14041 = (t13986+t14040);
float t14042 = (t14029*t13990);
float t14043 = (t13992+t14042);
vec3 t14044 = vec3(t14031,t14041,t14043);
float t14045 = length(t14044);
float t14046 = (t14045*t14045);
float t14047 = sqrt(t14046);
float t14048 = (t14047-float(2.6));
float t14049 = (t14048/float(11.4));
vec4 t14050 = texture(s4,vec2(t14039,t14049));
t14024 = t14050.x;
t14025 = t14050.y;
t14026 = t14050.z;
vec3 t14051 = vec3(t14050.x,t14050.y,t14050.z);
float t14052 = length(t14051);
float t14053 = (t14052*t14052);
float t14054 = (t14053/float(3.0));
bool t14055 = (t14054<=1);
float t14056;
if(t14055){
t14056 = t14054;
} else {
t14056 = 1;
}
bool t14057 = (t14056>=0);
float t14058;
if(t14057){
t14058 = t14056;
} else {
t14058 = 0;
}
t14027 = t14058;
} else {
t14024 = 0;
t14025 = 0;
t14026 = 0;
t14027 = 0;
}
float t14059 = (1-t14008);
float t14060 = (t14005*t14059);
float t14061 = (t14008+t14060);
float t14062 = (1-t14061);
float t14063 = (t14027*t14062);
float t14064 = (t14024*t14063);
float t14065 = (t14012+t14064);
float t14066 = (t115*t13980);
float t14067 = pow(t13995,float(2.5));
float t14068 = (t14066/t14067);
float t14069 = (t14068*t13978);
float t14070 = (t13977+t14069);
float t14071 = (t13978*u1.u4);
float t14072 = (t14070*t14071);
float t14073 = (t13980+t14072);
float t14074 = (t115*t13986);
float t14075 = (t14074/t14067);
float t14076 = (t14075*t13978);
float t14077 = (t13984+t14076);
float t14078 = (t14077*t14071);
float t14079 = (t13986+t14078);
float t14080 = (t115*t13992);
float t14081 = (t14080/t14067);
float t14082 = (t14081*t13978);
float t14083 = (t13990+t14082);
float t14084 = (t14083*t14071);
float t14085 = (t13992+t14084);
vec3 t14086 = vec3(t14073,t14079,t14085);
float t14087 = length(t14086);
float t14088 = (t14087*t14087);
bool t14089 = (t14088<1);
vec3 t14090 = vec3(t13980,t13986,t13992);
float t14091 = length(t14090);
float t14092 = (t14091*t14091);
bool t14093 = (t14092>1);
bool t14094 = (t14089&&t14093);
float t14095;
float t14096;
float t14097;
float t14098;
if(t14094){
t14095 = 0;
t14096 = 0;
t14097 = 0;
t14098 = 1;
} else {
t14095 = 0;
t14096 = 0;
t14097 = 0;
t14098 = 0;
}
float t14099 = (1-t14061);
float t14100 = (t14027*t14099);
float t14101 = (t14061+t14100);
float t14102 = (1-t14101);
float t14103 = (t14098*t14102);
float t14104 = (t14095*t14103);
float t14105 = (t14065+t14104);
bool t14106 = (t13986>0);
bool t14107 = (t14079>0);
bool t14108 = (!t14107);
bool t14109 = (t14106&&t14108);
bool t14110 = (!t14106);
bool t14111 = (t14107&&t14110);
bool t14112 = (t14109||t14111);
bool t14113 = (t14088<196);
bool t14114 = (t14088>float(6.76));
bool t14115 = (t14113&&t14114);
bool t14116 = (t14112&&t14115);
float t14117;
float t14118;
float t14119;
float t14120;
if(t14116){
float t14121 = (t14079/t14077);
float t14122 = (-t14121);
float t14123 = (t14122*t14070);
float t14124 = (t14073+t14123);
float t14125 = atan(t14124,t14085);
float t14126 = (u1.u0/30);
float t14127 = (t14125+t14126);
float t14128 = (2*3.1415927);
float t14129 = (t14127+t14128);
float t14130 = mod(t14129,2);
float t14131 = (t14130*3.1415927);
float t14132 = (t14131/t14128);
float t14133 = (t14122*t14077);
float t14134 = (t14079+t14133);
float t14135 = (t14122*t14083);
float t14136 = (t14085+t14135);
vec3 t14137 = vec3(t14124,t14134,t14136);
float t14138 = length(t14137);
float t14139 = (t14138*t14138);
float t14140 = sqrt(t14139);
float t14141 = (t14140-float(2.6));
float t14142 = (t14141/float(11.4));
vec4 t14143 = texture(s4,vec2(t14132,t14142));
t14117 = t14143.x;
t14118 = t14143.y;
t14119 = t14143.z;
vec3 t14144 = vec3(t14143.x,t14143.y,t14143.z);
float t14145 = length(t14144);
float t14146 = (t14145*t14145);
float t14147 = (t14146/float(3.0));
bool t14148 = (t14147<=1);
float t14149;
if(t14148){
t14149 = t14147;
} else {
t14149 = 1;
}
bool t14150 = (t14149>=0);
float t14151;
if(t14150){
t14151 = t14149;
} else {
t14151 = 0;
}
t14120 = t14151;
} else {
t14117 = 0;
t14118 = 0;
t14119 = 0;
t14120 = 0;
}
float t14152 = (1-t14101);
float t14153 = (t14098*t14152);
float t14154 = (t14101+t14153);
float t14155 = (1-t14154);
float t14156 = (t14120*t14155);
float t14157 = (t14117*t14156);
float t14158 = (t14105+t14157);
float t14159 = (t115*t14073);
float t14160 = pow(t14088,float(2.5));
float t14161 = (t14159/t14160);
float t14162 = (t14161*t14071);
float t14163 = (t14070+t14162);
float t14164 = (t14071*u1.u4);
float t14165 = (t14163*t14164);
float t14166 = (t14073+t14165);
float t14167 = (t115*t14079);
float t14168 = (t14167/t14160);
float t14169 = (t14168*t14071);
float t14170 = (t14077+t14169);
float t14171 = (t14170*t14164);
float t14172 = (t14079+t14171);
float t14173 = (t115*t14085);
float t14174 = (t14173/t14160);
float t14175 = (t14174*t14071);
float t14176 = (t14083+t14175);
float t14177 = (t14176*t14164);
float t14178 = (t14085+t14177);
vec3 t14179 = vec3(t14166,t14172,t14178);
float t14180 = length(t14179);
float t14181 = (t14180*t14180);
bool t14182 = (t14181<1);
vec3 t14183 = vec3(t14073,t14079,t14085);
float t14184 = length(t14183);
float t14185 = (t14184*t14184);
bool t14186 = (t14185>1);
bool t14187 = (t14182&&t14186);
float t14188;
float t14189;
float t14190;
float t14191;
if(t14187){
t14188 = 0;
t14189 = 0;
t14190 = 0;
t14191 = 1;
} else {
t14188 = 0;
t14189 = 0;
t14190 = 0;
t14191 = 0;
}
float t14192 = (1-t14154);
float t14193 = (t14120*t14192);
float t14194 = (t14154+t14193);
float t14195 = (1-t14194);
float t14196 = (t14191*t14195);
float t14197 = (t14188*t14196);
float t14198 = (t14158+t14197);
bool t14199 = (t14079>0);
bool t14200 = (t14172>0);
bool t14201 = (!t14200);
bool t14202 = (t14199&&t14201);
bool t14203 = (!t14199);
bool t14204 = (t14200&&t14203);
bool t14205 = (t14202||t14204);
bool t14206 = (t14181<196);
bool t14207 = (t14181>float(6.76));
bool t14208 = (t14206&&t14207);
bool t14209 = (t14205&&t14208);
float t14210;
float t14211;
float t14212;
float t14213;
if(t14209){
float t14214 = (t14172/t14170);
float t14215 = (-t14214);
float t14216 = (t14215*t14163);
float t14217 = (t14166+t14216);
float t14218 = atan(t14217,t14178);
float t14219 = (u1.u0/30);
float t14220 = (t14218+t14219);
float t14221 = (2*3.1415927);
float t14222 = (t14220+t14221);
float t14223 = mod(t14222,2);
float t14224 = (t14223*3.1415927);
float t14225 = (t14224/t14221);
float t14226 = (t14215*t14170);
float t14227 = (t14172+t14226);
float t14228 = (t14215*t14176);
float t14229 = (t14178+t14228);
vec3 t14230 = vec3(t14217,t14227,t14229);
float t14231 = length(t14230);
float t14232 = (t14231*t14231);
float t14233 = sqrt(t14232);
float t14234 = (t14233-float(2.6));
float t14235 = (t14234/float(11.4));
vec4 t14236 = texture(s4,vec2(t14225,t14235));
t14210 = t14236.x;
t14211 = t14236.y;
t14212 = t14236.z;
vec3 t14237 = vec3(t14236.x,t14236.y,t14236.z);
float t14238 = length(t14237);
float t14239 = (t14238*t14238);
float t14240 = (t14239/float(3.0));
bool t14241 = (t14240<=1);
float t14242;
if(t14241){
t14242 = t14240;
} else {
t14242 = 1;
}
bool t14243 = (t14242>=0);
float t14244;
if(t14243){
t14244 = t14242;
} else {
t14244 = 0;
}
t14213 = t14244;
} else {
t14210 = 0;
t14211 = 0;
t14212 = 0;
t14213 = 0;
}
float t14245 = (1-t14194);
float t14246 = (t14191*t14245);
float t14247 = (t14194+t14246);
float t14248 = (1-t14247);
float t14249 = (t14213*t14248);
float t14250 = (t14210*t14249);
float t14251 = (t14198+t14250);
float t14252 = (t115*t14166);
float t14253 = pow(t14181,float(2.5));
float t14254 = (t14252/t14253);
float t14255 = (t14254*t14164);
float t14256 = (t14163+t14255);
float t14257 = (t14164*u1.u4);
float t14258 = (t14256*t14257);
float t14259 = (t14166+t14258);
float t14260 = (t115*t14172);
float t14261 = (t14260/t14253);
float t14262 = (t14261*t14164);
float t14263 = (t14170+t14262);
float t14264 = (t14263*t14257);
float t14265 = (t14172+t14264);
float t14266 = (t115*t14178);
float t14267 = (t14266/t14253);
float t14268 = (t14267*t14164);
float t14269 = (t14176+t14268);
float t14270 = (t14269*t14257);
float t14271 = (t14178+t14270);
vec3 t14272 = vec3(t14259,t14265,t14271);
float t14273 = length(t14272);
float t14274 = (t14273*t14273);
bool t14275 = (t14274<1);
vec3 t14276 = vec3(t14166,t14172,t14178);
float t14277 = length(t14276);
float t14278 = (t14277*t14277);
bool t14279 = (t14278>1);
bool t14280 = (t14275&&t14279);
float t14281;
float t14282;
float t14283;
float t14284;
if(t14280){
t14281 = 0;
t14282 = 0;
t14283 = 0;
t14284 = 1;
} else {
t14281 = 0;
t14282 = 0;
t14283 = 0;
t14284 = 0;
}
float t14285 = (1-t14247);
float t14286 = (t14213*t14285);
float t14287 = (t14247+t14286);
float t14288 = (1-t14287);
float t14289 = (t14284*t14288);
float t14290 = (t14281*t14289);
float t14291 = (t14251+t14290);
bool t14292 = (t14172>0);
bool t14293 = (t14265>0);
bool t14294 = (!t14293);
bool t14295 = (t14292&&t14294);
bool t14296 = (!t14292);
bool t14297 = (t14293&&t14296);
bool t14298 = (t14295||t14297);
bool t14299 = (t14274<196);
bool t14300 = (t14274>float(6.76));
bool t14301 = (t14299&&t14300);
bool t14302 = (t14298&&t14301);
float t14303;
float t14304;
float t14305;
float t14306;
if(t14302){
float t14307 = (t14265/t14263);
float t14308 = (-t14307);
float t14309 = (t14308*t14256);
float t14310 = (t14259+t14309);
float t14311 = atan(t14310,t14271);
float t14312 = (u1.u0/30);
float t14313 = (t14311+t14312);
float t14314 = (2*3.1415927);
float t14315 = (t14313+t14314);
float t14316 = mod(t14315,2);
float t14317 = (t14316*3.1415927);
float t14318 = (t14317/t14314);
float t14319 = (t14308*t14263);
float t14320 = (t14265+t14319);
float t14321 = (t14308*t14269);
float t14322 = (t14271+t14321);
vec3 t14323 = vec3(t14310,t14320,t14322);
float t14324 = length(t14323);
float t14325 = (t14324*t14324);
float t14326 = sqrt(t14325);
float t14327 = (t14326-float(2.6));
float t14328 = (t14327/float(11.4));
vec4 t14329 = texture(s4,vec2(t14318,t14328));
t14303 = t14329.x;
t14304 = t14329.y;
t14305 = t14329.z;
vec3 t14330 = vec3(t14329.x,t14329.y,t14329.z);
float t14331 = length(t14330);
float t14332 = (t14331*t14331);
float t14333 = (t14332/float(3.0));
bool t14334 = (t14333<=1);
float t14335;
if(t14334){
t14335 = t14333;
} else {
t14335 = 1;
}
bool t14336 = (t14335>=0);
float t14337;
if(t14336){
t14337 = t14335;
} else {
t14337 = 0;
}
t14306 = t14337;
} else {
t14303 = 0;
t14304 = 0;
t14305 = 0;
t14306 = 0;
}
float t14338 = (1-t14287);
float t14339 = (t14284*t14338);
float t14340 = (t14287+t14339);
float t14341 = (1-t14340);
float t14342 = (t14306*t14341);
float t14343 = (t14303*t14342);
float t14344 = (t14291+t14343);
float t14345 = (t115*t14259);
float t14346 = pow(t14274,float(2.5));
float t14347 = (t14345/t14346);
float t14348 = (t14347*t14257);
float t14349 = (t14256+t14348);
float t14350 = (t14257*u1.u4);
float t14351 = (t14349*t14350);
float t14352 = (t14259+t14351);
float t14353 = (t115*t14265);
float t14354 = (t14353/t14346);
float t14355 = (t14354*t14257);
float t14356 = (t14263+t14355);
float t14357 = (t14356*t14350);
float t14358 = (t14265+t14357);
float t14359 = (t115*t14271);
float t14360 = (t14359/t14346);
float t14361 = (t14360*t14257);
float t14362 = (t14269+t14361);
float t14363 = (t14362*t14350);
float t14364 = (t14271+t14363);
vec3 t14365 = vec3(t14352,t14358,t14364);
float t14366 = length(t14365);
float t14367 = (t14366*t14366);
bool t14368 = (t14367<1);
vec3 t14369 = vec3(t14259,t14265,t14271);
float t14370 = length(t14369);
float t14371 = (t14370*t14370);
bool t14372 = (t14371>1);
bool t14373 = (t14368&&t14372);
float t14374;
float t14375;
float t14376;
float t14377;
if(t14373){
t14374 = 0;
t14375 = 0;
t14376 = 0;
t14377 = 1;
} else {
t14374 = 0;
t14375 = 0;
t14376 = 0;
t14377 = 0;
}
float t14378 = (1-t14340);
float t14379 = (t14306*t14378);
float t14380 = (t14340+t14379);
float t14381 = (1-t14380);
float t14382 = (t14377*t14381);
float t14383 = (t14374*t14382);
float t14384 = (t14344+t14383);
bool t14385 = (t14265>0);
bool t14386 = (t14358>0);
bool t14387 = (!t14386);
bool t14388 = (t14385&&t14387);
bool t14389 = (!t14385);
bool t14390 = (t14386&&t14389);
bool t14391 = (t14388||t14390);
bool t14392 = (t14367<196);
bool t14393 = (t14367>float(6.76));
bool t14394 = (t14392&&t14393);
bool t14395 = (t14391&&t14394);
float t14396;
float t14397;
float t14398;
float t14399;
if(t14395){
float t14400 = (t14358/t14356);
float t14401 = (-t14400);
float t14402 = (t14401*t14349);
float t14403 = (t14352+t14402);
float t14404 = atan(t14403,t14364);
float t14405 = (u1.u0/30);
float t14406 = (t14404+t14405);
float t14407 = (2*3.1415927);
float t14408 = (t14406+t14407);
float t14409 = mod(t14408,2);
float t14410 = (t14409*3.1415927);
float t14411 = (t14410/t14407);
float t14412 = (t14401*t14356);
float t14413 = (t14358+t14412);
float t14414 = (t14401*t14362);
float t14415 = (t14364+t14414);
vec3 t14416 = vec3(t14403,t14413,t14415);
float t14417 = length(t14416);
float t14418 = (t14417*t14417);
float t14419 = sqrt(t14418);
float t14420 = (t14419-float(2.6));
float t14421 = (t14420/float(11.4));
vec4 t14422 = texture(s4,vec2(t14411,t14421));
t14396 = t14422.x;
t14397 = t14422.y;
t14398 = t14422.z;
vec3 t14423 = vec3(t14422.x,t14422.y,t14422.z);
float t14424 = length(t14423);
float t14425 = (t14424*t14424);
float t14426 = (t14425/float(3.0));
bool t14427 = (t14426<=1);
float t14428;
if(t14427){
t14428 = t14426;
} else {
t14428 = 1;
}
bool t14429 = (t14428>=0);
float t14430;
if(t14429){
t14430 = t14428;
} else {
t14430 = 0;
}
t14399 = t14430;
} else {
t14396 = 0;
t14397 = 0;
t14398 = 0;
t14399 = 0;
}
float t14431 = (1-t14380);
float t14432 = (t14377*t14431);
float t14433 = (t14380+t14432);
float t14434 = (1-t14433);
float t14435 = (t14399*t14434);
float t14436 = (t14396*t14435);
float t14437 = (t14384+t14436);
float t14438 = (t115*t14352);
float t14439 = pow(t14367,float(2.5));
float t14440 = (t14438/t14439);
float t14441 = (t14440*t14350);
float t14442 = (t14349+t14441);
float t14443 = (t14350*u1.u4);
float t14444 = (t14442*t14443);
float t14445 = (t14352+t14444);
float t14446 = (t115*t14358);
float t14447 = (t14446/t14439);
float t14448 = (t14447*t14350);
float t14449 = (t14356+t14448);
float t14450 = (t14449*t14443);
float t14451 = (t14358+t14450);
float t14452 = (t115*t14364);
float t14453 = (t14452/t14439);
float t14454 = (t14453*t14350);
float t14455 = (t14362+t14454);
float t14456 = (t14455*t14443);
float t14457 = (t14364+t14456);
vec3 t14458 = vec3(t14445,t14451,t14457);
float t14459 = length(t14458);
float t14460 = (t14459*t14459);
bool t14461 = (t14460<1);
vec3 t14462 = vec3(t14352,t14358,t14364);
float t14463 = length(t14462);
float t14464 = (t14463*t14463);
bool t14465 = (t14464>1);
bool t14466 = (t14461&&t14465);
float t14467;
float t14468;
float t14469;
float t14470;
if(t14466){
t14467 = 0;
t14468 = 0;
t14469 = 0;
t14470 = 1;
} else {
t14467 = 0;
t14468 = 0;
t14469 = 0;
t14470 = 0;
}
float t14471 = (1-t14433);
float t14472 = (t14399*t14471);
float t14473 = (t14433+t14472);
float t14474 = (1-t14473);
float t14475 = (t14470*t14474);
float t14476 = (t14467*t14475);
float t14477 = (t14437+t14476);
bool t14478 = (t14358>0);
bool t14479 = (t14451>0);
bool t14480 = (!t14479);
bool t14481 = (t14478&&t14480);
bool t14482 = (!t14478);
bool t14483 = (t14479&&t14482);
bool t14484 = (t14481||t14483);
bool t14485 = (t14460<196);
bool t14486 = (t14460>float(6.76));
bool t14487 = (t14485&&t14486);
bool t14488 = (t14484&&t14487);
float t14489;
float t14490;
float t14491;
float t14492;
if(t14488){
float t14493 = (t14451/t14449);
float t14494 = (-t14493);
float t14495 = (t14494*t14442);
float t14496 = (t14445+t14495);
float t14497 = atan(t14496,t14457);
float t14498 = (u1.u0/30);
float t14499 = (t14497+t14498);
float t14500 = (2*3.1415927);
float t14501 = (t14499+t14500);
float t14502 = mod(t14501,2);
float t14503 = (t14502*3.1415927);
float t14504 = (t14503/t14500);
float t14505 = (t14494*t14449);
float t14506 = (t14451+t14505);
float t14507 = (t14494*t14455);
float t14508 = (t14457+t14507);
vec3 t14509 = vec3(t14496,t14506,t14508);
float t14510 = length(t14509);
float t14511 = (t14510*t14510);
float t14512 = sqrt(t14511);
float t14513 = (t14512-float(2.6));
float t14514 = (t14513/float(11.4));
vec4 t14515 = texture(s4,vec2(t14504,t14514));
t14489 = t14515.x;
t14490 = t14515.y;
t14491 = t14515.z;
vec3 t14516 = vec3(t14515.x,t14515.y,t14515.z);
float t14517 = length(t14516);
float t14518 = (t14517*t14517);
float t14519 = (t14518/float(3.0));
bool t14520 = (t14519<=1);
float t14521;
if(t14520){
t14521 = t14519;
} else {
t14521 = 1;
}
bool t14522 = (t14521>=0);
float t14523;
if(t14522){
t14523 = t14521;
} else {
t14523 = 0;
}
t14492 = t14523;
} else {
t14489 = 0;
t14490 = 0;
t14491 = 0;
t14492 = 0;
}
float t14524 = (1-t14473);
float t14525 = (t14470*t14524);
float t14526 = (t14473+t14525);
float t14527 = (1-t14526);
float t14528 = (t14492*t14527);
float t14529 = (t14489*t14528);
float t14530 = (t14477+t14529);
float t14531 = (t115*t14445);
float t14532 = pow(t14460,float(2.5));
float t14533 = (t14531/t14532);
float t14534 = (t14533*t14443);
float t14535 = (t14442+t14534);
float t14536 = (t14443*u1.u4);
float t14537 = (t14535*t14536);
float t14538 = (t14445+t14537);
float t14539 = (t115*t14451);
float t14540 = (t14539/t14532);
float t14541 = (t14540*t14443);
float t14542 = (t14449+t14541);
float t14543 = (t14542*t14536);
float t14544 = (t14451+t14543);
float t14545 = (t115*t14457);
float t14546 = (t14545/t14532);
float t14547 = (t14546*t14443);
float t14548 = (t14455+t14547);
float t14549 = (t14548*t14536);
float t14550 = (t14457+t14549);
vec3 t14551 = vec3(t14538,t14544,t14550);
float t14552 = length(t14551);
float t14553 = (t14552*t14552);
bool t14554 = (t14553<1);
vec3 t14555 = vec3(t14445,t14451,t14457);
float t14556 = length(t14555);
float t14557 = (t14556*t14556);
bool t14558 = (t14557>1);
bool t14559 = (t14554&&t14558);
float t14560;
float t14561;
float t14562;
float t14563;
if(t14559){
t14560 = 0;
t14561 = 0;
t14562 = 0;
t14563 = 1;
} else {
t14560 = 0;
t14561 = 0;
t14562 = 0;
t14563 = 0;
}
float t14564 = (1-t14526);
float t14565 = (t14492*t14564);
float t14566 = (t14526+t14565);
float t14567 = (1-t14566);
float t14568 = (t14563*t14567);
float t14569 = (t14560*t14568);
float t14570 = (t14530+t14569);
bool t14571 = (t14451>0);
bool t14572 = (t14544>0);
bool t14573 = (!t14572);
bool t14574 = (t14571&&t14573);
bool t14575 = (!t14571);
bool t14576 = (t14572&&t14575);
bool t14577 = (t14574||t14576);
bool t14578 = (t14553<196);
bool t14579 = (t14553>float(6.76));
bool t14580 = (t14578&&t14579);
bool t14581 = (t14577&&t14580);
float t14582;
float t14583;
float t14584;
float t14585;
if(t14581){
float t14586 = (t14544/t14542);
float t14587 = (-t14586);
float t14588 = (t14587*t14535);
float t14589 = (t14538+t14588);
float t14590 = atan(t14589,t14550);
float t14591 = (u1.u0/30);
float t14592 = (t14590+t14591);
float t14593 = (2*3.1415927);
float t14594 = (t14592+t14593);
float t14595 = mod(t14594,2);
float t14596 = (t14595*3.1415927);
float t14597 = (t14596/t14593);
float t14598 = (t14587*t14542);
float t14599 = (t14544+t14598);
float t14600 = (t14587*t14548);
float t14601 = (t14550+t14600);
vec3 t14602 = vec3(t14589,t14599,t14601);
float t14603 = length(t14602);
float t14604 = (t14603*t14603);
float t14605 = sqrt(t14604);
float t14606 = (t14605-float(2.6));
float t14607 = (t14606/float(11.4));
vec4 t14608 = texture(s4,vec2(t14597,t14607));
t14582 = t14608.x;
t14583 = t14608.y;
t14584 = t14608.z;
vec3 t14609 = vec3(t14608.x,t14608.y,t14608.z);
float t14610 = length(t14609);
float t14611 = (t14610*t14610);
float t14612 = (t14611/float(3.0));
bool t14613 = (t14612<=1);
float t14614;
if(t14613){
t14614 = t14612;
} else {
t14614 = 1;
}
bool t14615 = (t14614>=0);
float t14616;
if(t14615){
t14616 = t14614;
} else {
t14616 = 0;
}
t14585 = t14616;
} else {
t14582 = 0;
t14583 = 0;
t14584 = 0;
t14585 = 0;
}
float t14617 = (1-t14566);
float t14618 = (t14563*t14617);
float t14619 = (t14566+t14618);
float t14620 = (1-t14619);
float t14621 = (t14585*t14620);
float t14622 = (t14582*t14621);
float t14623 = (t14570+t14622);
float t14624 = (t115*t14538);
float t14625 = pow(t14553,float(2.5));
float t14626 = (t14624/t14625);
float t14627 = (t14626*t14536);
float t14628 = (t14535+t14627);
float t14629 = (t14536*u1.u4);
float t14630 = (t14628*t14629);
float t14631 = (t14538+t14630);
float t14632 = (t115*t14544);
float t14633 = (t14632/t14625);
float t14634 = (t14633*t14536);
float t14635 = (t14542+t14634);
float t14636 = (t14635*t14629);
float t14637 = (t14544+t14636);
float t14638 = (t115*t14550);
float t14639 = (t14638/t14625);
float t14640 = (t14639*t14536);
float t14641 = (t14548+t14640);
float t14642 = (t14641*t14629);
float t14643 = (t14550+t14642);
vec3 t14644 = vec3(t14631,t14637,t14643);
float t14645 = length(t14644);
float t14646 = (t14645*t14645);
bool t14647 = (t14646<1);
vec3 t14648 = vec3(t14538,t14544,t14550);
float t14649 = length(t14648);
float t14650 = (t14649*t14649);
bool t14651 = (t14650>1);
bool t14652 = (t14647&&t14651);
float t14653;
float t14654;
float t14655;
float t14656;
if(t14652){
t14653 = 0;
t14654 = 0;
t14655 = 0;
t14656 = 1;
} else {
t14653 = 0;
t14654 = 0;
t14655 = 0;
t14656 = 0;
}
float t14657 = (1-t14619);
float t14658 = (t14585*t14657);
float t14659 = (t14619+t14658);
float t14660 = (1-t14659);
float t14661 = (t14656*t14660);
float t14662 = (t14653*t14661);
float t14663 = (t14623+t14662);
bool t14664 = (t14544>0);
bool t14665 = (t14637>0);
bool t14666 = (!t14665);
bool t14667 = (t14664&&t14666);
bool t14668 = (!t14664);
bool t14669 = (t14665&&t14668);
bool t14670 = (t14667||t14669);
bool t14671 = (t14646<196);
bool t14672 = (t14646>float(6.76));
bool t14673 = (t14671&&t14672);
bool t14674 = (t14670&&t14673);
float t14675;
float t14676;
float t14677;
float t14678;
if(t14674){
float t14679 = (t14637/t14635);
float t14680 = (-t14679);
float t14681 = (t14680*t14628);
float t14682 = (t14631+t14681);
float t14683 = atan(t14682,t14643);
float t14684 = (u1.u0/30);
float t14685 = (t14683+t14684);
float t14686 = (2*3.1415927);
float t14687 = (t14685+t14686);
float t14688 = mod(t14687,2);
float t14689 = (t14688*3.1415927);
float t14690 = (t14689/t14686);
float t14691 = (t14680*t14635);
float t14692 = (t14637+t14691);
float t14693 = (t14680*t14641);
float t14694 = (t14643+t14693);
vec3 t14695 = vec3(t14682,t14692,t14694);
float t14696 = length(t14695);
float t14697 = (t14696*t14696);
float t14698 = sqrt(t14697);
float t14699 = (t14698-float(2.6));
float t14700 = (t14699/float(11.4));
vec4 t14701 = texture(s4,vec2(t14690,t14700));
t14675 = t14701.x;
t14676 = t14701.y;
t14677 = t14701.z;
vec3 t14702 = vec3(t14701.x,t14701.y,t14701.z);
float t14703 = length(t14702);
float t14704 = (t14703*t14703);
float t14705 = (t14704/float(3.0));
bool t14706 = (t14705<=1);
float t14707;
if(t14706){
t14707 = t14705;
} else {
t14707 = 1;
}
bool t14708 = (t14707>=0);
float t14709;
if(t14708){
t14709 = t14707;
} else {
t14709 = 0;
}
t14678 = t14709;
} else {
t14675 = 0;
t14676 = 0;
t14677 = 0;
t14678 = 0;
}
float t14710 = (1-t14659);
float t14711 = (t14656*t14710);
float t14712 = (t14659+t14711);
float t14713 = (1-t14712);
float t14714 = (t14678*t14713);
float t14715 = (t14675*t14714);
float t14716 = (t14663+t14715);
float t14717 = (t115*t14631);
float t14718 = pow(t14646,float(2.5));
float t14719 = (t14717/t14718);
float t14720 = (t14719*t14629);
float t14721 = (t14628+t14720);
float t14722 = (t14629*u1.u4);
float t14723 = (t14721*t14722);
float t14724 = (t14631+t14723);
float t14725 = (t115*t14637);
float t14726 = (t14725/t14718);
float t14727 = (t14726*t14629);
float t14728 = (t14635+t14727);
float t14729 = (t14728*t14722);
float t14730 = (t14637+t14729);
float t14731 = (t115*t14643);
float t14732 = (t14731/t14718);
float t14733 = (t14732*t14629);
float t14734 = (t14641+t14733);
float t14735 = (t14734*t14722);
float t14736 = (t14643+t14735);
vec3 t14737 = vec3(t14724,t14730,t14736);
float t14738 = length(t14737);
float t14739 = (t14738*t14738);
bool t14740 = (t14739<1);
vec3 t14741 = vec3(t14631,t14637,t14643);
float t14742 = length(t14741);
float t14743 = (t14742*t14742);
bool t14744 = (t14743>1);
bool t14745 = (t14740&&t14744);
float t14746;
float t14747;
float t14748;
float t14749;
if(t14745){
t14746 = 0;
t14747 = 0;
t14748 = 0;
t14749 = 1;
} else {
t14746 = 0;
t14747 = 0;
t14748 = 0;
t14749 = 0;
}
float t14750 = (1-t14712);
float t14751 = (t14678*t14750);
float t14752 = (t14712+t14751);
float t14753 = (1-t14752);
float t14754 = (t14749*t14753);
float t14755 = (t14746*t14754);
float t14756 = (t14716+t14755);
bool t14757 = (t14637>0);
bool t14758 = (t14730>0);
bool t14759 = (!t14758);
bool t14760 = (t14757&&t14759);
bool t14761 = (!t14757);
bool t14762 = (t14758&&t14761);
bool t14763 = (t14760||t14762);
bool t14764 = (t14739<196);
bool t14765 = (t14739>float(6.76));
bool t14766 = (t14764&&t14765);
bool t14767 = (t14763&&t14766);
float t14768;
float t14769;
float t14770;
float t14771;
if(t14767){
float t14772 = (t14730/t14728);
float t14773 = (-t14772);
float t14774 = (t14773*t14721);
float t14775 = (t14724+t14774);
float t14776 = atan(t14775,t14736);
float t14777 = (u1.u0/30);
float t14778 = (t14776+t14777);
float t14779 = (2*3.1415927);
float t14780 = (t14778+t14779);
float t14781 = mod(t14780,2);
float t14782 = (t14781*3.1415927);
float t14783 = (t14782/t14779);
float t14784 = (t14773*t14728);
float t14785 = (t14730+t14784);
float t14786 = (t14773*t14734);
float t14787 = (t14736+t14786);
vec3 t14788 = vec3(t14775,t14785,t14787);
float t14789 = length(t14788);
float t14790 = (t14789*t14789);
float t14791 = sqrt(t14790);
float t14792 = (t14791-float(2.6));
float t14793 = (t14792/float(11.4));
vec4 t14794 = texture(s4,vec2(t14783,t14793));
t14768 = t14794.x;
t14769 = t14794.y;
t14770 = t14794.z;
vec3 t14795 = vec3(t14794.x,t14794.y,t14794.z);
float t14796 = length(t14795);
float t14797 = (t14796*t14796);
float t14798 = (t14797/float(3.0));
bool t14799 = (t14798<=1);
float t14800;
if(t14799){
t14800 = t14798;
} else {
t14800 = 1;
}
bool t14801 = (t14800>=0);
float t14802;
if(t14801){
t14802 = t14800;
} else {
t14802 = 0;
}
t14771 = t14802;
} else {
t14768 = 0;
t14769 = 0;
t14770 = 0;
t14771 = 0;
}
float t14803 = (1-t14752);
float t14804 = (t14749*t14803);
float t14805 = (t14752+t14804);
float t14806 = (1-t14805);
float t14807 = (t14771*t14806);
float t14808 = (t14768*t14807);
float t14809 = (t14756+t14808);
float t14810 = (t115*t14724);
float t14811 = pow(t14739,float(2.5));
float t14812 = (t14810/t14811);
float t14813 = (t14812*t14722);
float t14814 = (t14721+t14813);
float t14815 = (t14722*u1.u4);
float t14816 = (t14814*t14815);
float t14817 = (t14724+t14816);
float t14818 = (t115*t14730);
float t14819 = (t14818/t14811);
float t14820 = (t14819*t14722);
float t14821 = (t14728+t14820);
float t14822 = (t14821*t14815);
float t14823 = (t14730+t14822);
float t14824 = (t115*t14736);
float t14825 = (t14824/t14811);
float t14826 = (t14825*t14722);
float t14827 = (t14734+t14826);
float t14828 = (t14827*t14815);
float t14829 = (t14736+t14828);
vec3 t14830 = vec3(t14817,t14823,t14829);
float t14831 = length(t14830);
float t14832 = (t14831*t14831);
bool t14833 = (t14832<1);
vec3 t14834 = vec3(t14724,t14730,t14736);
float t14835 = length(t14834);
float t14836 = (t14835*t14835);
bool t14837 = (t14836>1);
bool t14838 = (t14833&&t14837);
float t14839;
float t14840;
float t14841;
float t14842;
if(t14838){
t14839 = 0;
t14840 = 0;
t14841 = 0;
t14842 = 1;
} else {
t14839 = 0;
t14840 = 0;
t14841 = 0;
t14842 = 0;
}
float t14843 = (1-t14805);
float t14844 = (t14771*t14843);
float t14845 = (t14805+t14844);
float t14846 = (1-t14845);
float t14847 = (t14842*t14846);
float t14848 = (t14839*t14847);
float t14849 = (t14809+t14848);
bool t14850 = (t14730>0);
bool t14851 = (t14823>0);
bool t14852 = (!t14851);
bool t14853 = (t14850&&t14852);
bool t14854 = (!t14850);
bool t14855 = (t14851&&t14854);
bool t14856 = (t14853||t14855);
bool t14857 = (t14832<196);
bool t14858 = (t14832>float(6.76));
bool t14859 = (t14857&&t14858);
bool t14860 = (t14856&&t14859);
float t14861;
float t14862;
float t14863;
float t14864;
if(t14860){
float t14865 = (t14823/t14821);
float t14866 = (-t14865);
float t14867 = (t14866*t14814);
float t14868 = (t14817+t14867);
float t14869 = atan(t14868,t14829);
float t14870 = (u1.u0/30);
float t14871 = (t14869+t14870);
float t14872 = (2*3.1415927);
float t14873 = (t14871+t14872);
float t14874 = mod(t14873,2);
float t14875 = (t14874*3.1415927);
float t14876 = (t14875/t14872);
float t14877 = (t14866*t14821);
float t14878 = (t14823+t14877);
float t14879 = (t14866*t14827);
float t14880 = (t14829+t14879);
vec3 t14881 = vec3(t14868,t14878,t14880);
float t14882 = length(t14881);
float t14883 = (t14882*t14882);
float t14884 = sqrt(t14883);
float t14885 = (t14884-float(2.6));
float t14886 = (t14885/float(11.4));
vec4 t14887 = texture(s4,vec2(t14876,t14886));
t14861 = t14887.x;
t14862 = t14887.y;
t14863 = t14887.z;
vec3 t14888 = vec3(t14887.x,t14887.y,t14887.z);
float t14889 = length(t14888);
float t14890 = (t14889*t14889);
float t14891 = (t14890/float(3.0));
bool t14892 = (t14891<=1);
float t14893;
if(t14892){
t14893 = t14891;
} else {
t14893 = 1;
}
bool t14894 = (t14893>=0);
float t14895;
if(t14894){
t14895 = t14893;
} else {
t14895 = 0;
}
t14864 = t14895;
} else {
t14861 = 0;
t14862 = 0;
t14863 = 0;
t14864 = 0;
}
float t14896 = (1-t14845);
float t14897 = (t14842*t14896);
float t14898 = (t14845+t14897);
float t14899 = (1-t14898);
float t14900 = (t14864*t14899);
float t14901 = (t14861*t14900);
float t14902 = (t14849+t14901);
float t14903 = (t115*t14817);
float t14904 = pow(t14832,float(2.5));
float t14905 = (t14903/t14904);
float t14906 = (t14905*t14815);
float t14907 = (t14814+t14906);
float t14908 = (t14815*u1.u4);
float t14909 = (t14907*t14908);
float t14910 = (t14817+t14909);
float t14911 = (t115*t14823);
float t14912 = (t14911/t14904);
float t14913 = (t14912*t14815);
float t14914 = (t14821+t14913);
float t14915 = (t14914*t14908);
float t14916 = (t14823+t14915);
float t14917 = (t115*t14829);
float t14918 = (t14917/t14904);
float t14919 = (t14918*t14815);
float t14920 = (t14827+t14919);
float t14921 = (t14920*t14908);
float t14922 = (t14829+t14921);
vec3 t14923 = vec3(t14910,t14916,t14922);
float t14924 = length(t14923);
float t14925 = (t14924*t14924);
bool t14926 = (t14925<1);
vec3 t14927 = vec3(t14817,t14823,t14829);
float t14928 = length(t14927);
float t14929 = (t14928*t14928);
bool t14930 = (t14929>1);
bool t14931 = (t14926&&t14930);
float t14932;
float t14933;
float t14934;
float t14935;
if(t14931){
t14932 = 0;
t14933 = 0;
t14934 = 0;
t14935 = 1;
} else {
t14932 = 0;
t14933 = 0;
t14934 = 0;
t14935 = 0;
}
float t14936 = (1-t14898);
float t14937 = (t14864*t14936);
float t14938 = (t14898+t14937);
float t14939 = (1-t14938);
float t14940 = (t14935*t14939);
float t14941 = (t14932*t14940);
float t14942 = (t14902+t14941);
bool t14943 = (t14823>0);
bool t14944 = (t14916>0);
bool t14945 = (!t14944);
bool t14946 = (t14943&&t14945);
bool t14947 = (!t14943);
bool t14948 = (t14944&&t14947);
bool t14949 = (t14946||t14948);
bool t14950 = (t14925<196);
bool t14951 = (t14925>float(6.76));
bool t14952 = (t14950&&t14951);
bool t14953 = (t14949&&t14952);
float t14954;
float t14955;
float t14956;
float t14957;
if(t14953){
float t14958 = (t14916/t14914);
float t14959 = (-t14958);
float t14960 = (t14959*t14907);
float t14961 = (t14910+t14960);
float t14962 = atan(t14961,t14922);
float t14963 = (u1.u0/30);
float t14964 = (t14962+t14963);
float t14965 = (2*3.1415927);
float t14966 = (t14964+t14965);
float t14967 = mod(t14966,2);
float t14968 = (t14967*3.1415927);
float t14969 = (t14968/t14965);
float t14970 = (t14959*t14914);
float t14971 = (t14916+t14970);
float t14972 = (t14959*t14920);
float t14973 = (t14922+t14972);
vec3 t14974 = vec3(t14961,t14971,t14973);
float t14975 = length(t14974);
float t14976 = (t14975*t14975);
float t14977 = sqrt(t14976);
float t14978 = (t14977-float(2.6));
float t14979 = (t14978/float(11.4));
vec4 t14980 = texture(s4,vec2(t14969,t14979));
t14954 = t14980.x;
t14955 = t14980.y;
t14956 = t14980.z;
vec3 t14981 = vec3(t14980.x,t14980.y,t14980.z);
float t14982 = length(t14981);
float t14983 = (t14982*t14982);
float t14984 = (t14983/float(3.0));
bool t14985 = (t14984<=1);
float t14986;
if(t14985){
t14986 = t14984;
} else {
t14986 = 1;
}
bool t14987 = (t14986>=0);
float t14988;
if(t14987){
t14988 = t14986;
} else {
t14988 = 0;
}
t14957 = t14988;
} else {
t14954 = 0;
t14955 = 0;
t14956 = 0;
t14957 = 0;
}
float t14989 = (1-t14938);
float t14990 = (t14935*t14989);
float t14991 = (t14938+t14990);
float t14992 = (1-t14991);
float t14993 = (t14957*t14992);
float t14994 = (t14954*t14993);
float t14995 = (t14942+t14994);
float t14996 = (t115*t14910);
float t14997 = pow(t14925,float(2.5));
float t14998 = (t14996/t14997);
float t14999 = (t14998*t14908);
float t15000 = (t14907+t14999);
float t15001 = (t14908*u1.u4);
float t15002 = (t15000*t15001);
float t15003 = (t14910+t15002);
float t15004 = (t115*t14916);
float t15005 = (t15004/t14997);
float t15006 = (t15005*t14908);
float t15007 = (t14914+t15006);
float t15008 = (t15007*t15001);
float t15009 = (t14916+t15008);
float t15010 = (t115*t14922);
float t15011 = (t15010/t14997);
float t15012 = (t15011*t14908);
float t15013 = (t14920+t15012);
float t15014 = (t15013*t15001);
float t15015 = (t14922+t15014);
vec3 t15016 = vec3(t15003,t15009,t15015);
float t15017 = length(t15016);
float t15018 = (t15017*t15017);
bool t15019 = (t15018<1);
vec3 t15020 = vec3(t14910,t14916,t14922);
float t15021 = length(t15020);
float t15022 = (t15021*t15021);
bool t15023 = (t15022>1);
bool t15024 = (t15019&&t15023);
float t15025;
float t15026;
float t15027;
float t15028;
if(t15024){
t15025 = 0;
t15026 = 0;
t15027 = 0;
t15028 = 1;
} else {
t15025 = 0;
t15026 = 0;
t15027 = 0;
t15028 = 0;
}
float t15029 = (1-t14991);
float t15030 = (t14957*t15029);
float t15031 = (t14991+t15030);
float t15032 = (1-t15031);
float t15033 = (t15028*t15032);
float t15034 = (t15025*t15033);
float t15035 = (t14995+t15034);
bool t15036 = (t14916>0);
bool t15037 = (t15009>0);
bool t15038 = (!t15037);
bool t15039 = (t15036&&t15038);
bool t15040 = (!t15036);
bool t15041 = (t15037&&t15040);
bool t15042 = (t15039||t15041);
bool t15043 = (t15018<196);
bool t15044 = (t15018>float(6.76));
bool t15045 = (t15043&&t15044);
bool t15046 = (t15042&&t15045);
float t15047;
float t15048;
float t15049;
float t15050;
if(t15046){
float t15051 = (t15009/t15007);
float t15052 = (-t15051);
float t15053 = (t15052*t15000);
float t15054 = (t15003+t15053);
float t15055 = atan(t15054,t15015);
float t15056 = (u1.u0/30);
float t15057 = (t15055+t15056);
float t15058 = (2*3.1415927);
float t15059 = (t15057+t15058);
float t15060 = mod(t15059,2);
float t15061 = (t15060*3.1415927);
float t15062 = (t15061/t15058);
float t15063 = (t15052*t15007);
float t15064 = (t15009+t15063);
float t15065 = (t15052*t15013);
float t15066 = (t15015+t15065);
vec3 t15067 = vec3(t15054,t15064,t15066);
float t15068 = length(t15067);
float t15069 = (t15068*t15068);
float t15070 = sqrt(t15069);
float t15071 = (t15070-float(2.6));
float t15072 = (t15071/float(11.4));
vec4 t15073 = texture(s4,vec2(t15062,t15072));
t15047 = t15073.x;
t15048 = t15073.y;
t15049 = t15073.z;
vec3 t15074 = vec3(t15073.x,t15073.y,t15073.z);
float t15075 = length(t15074);
float t15076 = (t15075*t15075);
float t15077 = (t15076/float(3.0));
bool t15078 = (t15077<=1);
float t15079;
if(t15078){
t15079 = t15077;
} else {
t15079 = 1;
}
bool t15080 = (t15079>=0);
float t15081;
if(t15080){
t15081 = t15079;
} else {
t15081 = 0;
}
t15050 = t15081;
} else {
t15047 = 0;
t15048 = 0;
t15049 = 0;
t15050 = 0;
}
float t15082 = (1-t15031);
float t15083 = (t15028*t15082);
float t15084 = (t15031+t15083);
float t15085 = (1-t15084);
float t15086 = (t15050*t15085);
float t15087 = (t15047*t15086);
float t15088 = (t15035+t15087);
float t15089 = (t115*t15003);
float t15090 = pow(t15018,float(2.5));
float t15091 = (t15089/t15090);
float t15092 = (t15091*t15001);
float t15093 = (t15000+t15092);
float t15094 = (t15001*u1.u4);
float t15095 = (t15093*t15094);
float t15096 = (t15003+t15095);
float t15097 = (t115*t15009);
float t15098 = (t15097/t15090);
float t15099 = (t15098*t15001);
float t15100 = (t15007+t15099);
float t15101 = (t15100*t15094);
float t15102 = (t15009+t15101);
float t15103 = (t115*t15015);
float t15104 = (t15103/t15090);
float t15105 = (t15104*t15001);
float t15106 = (t15013+t15105);
float t15107 = (t15106*t15094);
float t15108 = (t15015+t15107);
vec3 t15109 = vec3(t15096,t15102,t15108);
float t15110 = length(t15109);
float t15111 = (t15110*t15110);
bool t15112 = (t15111<1);
vec3 t15113 = vec3(t15003,t15009,t15015);
float t15114 = length(t15113);
float t15115 = (t15114*t15114);
bool t15116 = (t15115>1);
bool t15117 = (t15112&&t15116);
float t15118;
float t15119;
float t15120;
float t15121;
if(t15117){
t15118 = 0;
t15119 = 0;
t15120 = 0;
t15121 = 1;
} else {
t15118 = 0;
t15119 = 0;
t15120 = 0;
t15121 = 0;
}
float t15122 = (1-t15084);
float t15123 = (t15050*t15122);
float t15124 = (t15084+t15123);
float t15125 = (1-t15124);
float t15126 = (t15121*t15125);
float t15127 = (t15118*t15126);
float t15128 = (t15088+t15127);
bool t15129 = (t15009>0);
bool t15130 = (t15102>0);
bool t15131 = (!t15130);
bool t15132 = (t15129&&t15131);
bool t15133 = (!t15129);
bool t15134 = (t15130&&t15133);
bool t15135 = (t15132||t15134);
bool t15136 = (t15111<196);
bool t15137 = (t15111>float(6.76));
bool t15138 = (t15136&&t15137);
bool t15139 = (t15135&&t15138);
float t15140;
float t15141;
float t15142;
float t15143;
if(t15139){
float t15144 = (t15102/t15100);
float t15145 = (-t15144);
float t15146 = (t15145*t15093);
float t15147 = (t15096+t15146);
float t15148 = atan(t15147,t15108);
float t15149 = (u1.u0/30);
float t15150 = (t15148+t15149);
float t15151 = (2*3.1415927);
float t15152 = (t15150+t15151);
float t15153 = mod(t15152,2);
float t15154 = (t15153*3.1415927);
float t15155 = (t15154/t15151);
float t15156 = (t15145*t15100);
float t15157 = (t15102+t15156);
float t15158 = (t15145*t15106);
float t15159 = (t15108+t15158);
vec3 t15160 = vec3(t15147,t15157,t15159);
float t15161 = length(t15160);
float t15162 = (t15161*t15161);
float t15163 = sqrt(t15162);
float t15164 = (t15163-float(2.6));
float t15165 = (t15164/float(11.4));
vec4 t15166 = texture(s4,vec2(t15155,t15165));
t15140 = t15166.x;
t15141 = t15166.y;
t15142 = t15166.z;
vec3 t15167 = vec3(t15166.x,t15166.y,t15166.z);
float t15168 = length(t15167);
float t15169 = (t15168*t15168);
float t15170 = (t15169/float(3.0));
bool t15171 = (t15170<=1);
float t15172;
if(t15171){
t15172 = t15170;
} else {
t15172 = 1;
}
bool t15173 = (t15172>=0);
float t15174;
if(t15173){
t15174 = t15172;
} else {
t15174 = 0;
}
t15143 = t15174;
} else {
t15140 = 0;
t15141 = 0;
t15142 = 0;
t15143 = 0;
}
float t15175 = (1-t15124);
float t15176 = (t15121*t15175);
float t15177 = (t15124+t15176);
float t15178 = (1-t15177);
float t15179 = (t15143*t15178);
float t15180 = (t15140*t15179);
float t15181 = (t15128+t15180);
float t15182 = (t115*t15096);
float t15183 = pow(t15111,float(2.5));
float t15184 = (t15182/t15183);
float t15185 = (t15184*t15094);
float t15186 = (t15093+t15185);
float t15187 = (t15094*u1.u4);
float t15188 = (t15186*t15187);
float t15189 = (t15096+t15188);
float t15190 = (t115*t15102);
float t15191 = (t15190/t15183);
float t15192 = (t15191*t15094);
float t15193 = (t15100+t15192);
float t15194 = (t15193*t15187);
float t15195 = (t15102+t15194);
float t15196 = (t115*t15108);
float t15197 = (t15196/t15183);
float t15198 = (t15197*t15094);
float t15199 = (t15106+t15198);
float t15200 = (t15199*t15187);
float t15201 = (t15108+t15200);
vec3 t15202 = vec3(t15189,t15195,t15201);
float t15203 = length(t15202);
float t15204 = (t15203*t15203);
bool t15205 = (t15204<1);
vec3 t15206 = vec3(t15096,t15102,t15108);
float t15207 = length(t15206);
float t15208 = (t15207*t15207);
bool t15209 = (t15208>1);
bool t15210 = (t15205&&t15209);
float t15211;
float t15212;
float t15213;
float t15214;
if(t15210){
t15211 = 0;
t15212 = 0;
t15213 = 0;
t15214 = 1;
} else {
t15211 = 0;
t15212 = 0;
t15213 = 0;
t15214 = 0;
}
float t15215 = (1-t15177);
float t15216 = (t15143*t15215);
float t15217 = (t15177+t15216);
float t15218 = (1-t15217);
float t15219 = (t15214*t15218);
float t15220 = (t15211*t15219);
float t15221 = (t15181+t15220);
bool t15222 = (t15102>0);
bool t15223 = (t15195>0);
bool t15224 = (!t15223);
bool t15225 = (t15222&&t15224);
bool t15226 = (!t15222);
bool t15227 = (t15223&&t15226);
bool t15228 = (t15225||t15227);
bool t15229 = (t15204<196);
bool t15230 = (t15204>float(6.76));
bool t15231 = (t15229&&t15230);
bool t15232 = (t15228&&t15231);
float t15233;
float t15234;
float t15235;
float t15236;
if(t15232){
float t15237 = (t15195/t15193);
float t15238 = (-t15237);
float t15239 = (t15238*t15186);
float t15240 = (t15189+t15239);
float t15241 = atan(t15240,t15201);
float t15242 = (u1.u0/30);
float t15243 = (t15241+t15242);
float t15244 = (2*3.1415927);
float t15245 = (t15243+t15244);
float t15246 = mod(t15245,2);
float t15247 = (t15246*3.1415927);
float t15248 = (t15247/t15244);
float t15249 = (t15238*t15193);
float t15250 = (t15195+t15249);
float t15251 = (t15238*t15199);
float t15252 = (t15201+t15251);
vec3 t15253 = vec3(t15240,t15250,t15252);
float t15254 = length(t15253);
float t15255 = (t15254*t15254);
float t15256 = sqrt(t15255);
float t15257 = (t15256-float(2.6));
float t15258 = (t15257/float(11.4));
vec4 t15259 = texture(s4,vec2(t15248,t15258));
t15233 = t15259.x;
t15234 = t15259.y;
t15235 = t15259.z;
vec3 t15260 = vec3(t15259.x,t15259.y,t15259.z);
float t15261 = length(t15260);
float t15262 = (t15261*t15261);
float t15263 = (t15262/float(3.0));
bool t15264 = (t15263<=1);
float t15265;
if(t15264){
t15265 = t15263;
} else {
t15265 = 1;
}
bool t15266 = (t15265>=0);
float t15267;
if(t15266){
t15267 = t15265;
} else {
t15267 = 0;
}
t15236 = t15267;
} else {
t15233 = 0;
t15234 = 0;
t15235 = 0;
t15236 = 0;
}
float t15268 = (1-t15217);
float t15269 = (t15214*t15268);
float t15270 = (t15217+t15269);
float t15271 = (1-t15270);
float t15272 = (t15236*t15271);
float t15273 = (t15233*t15272);
float t15274 = (t15221+t15273);
float t15275 = (t115*t15189);
float t15276 = pow(t15204,float(2.5));
float t15277 = (t15275/t15276);
float t15278 = (t15277*t15187);
float t15279 = (t15186+t15278);
float t15280 = (t15187*u1.u4);
float t15281 = (t15279*t15280);
float t15282 = (t15189+t15281);
float t15283 = (t115*t15195);
float t15284 = (t15283/t15276);
float t15285 = (t15284*t15187);
float t15286 = (t15193+t15285);
float t15287 = (t15286*t15280);
float t15288 = (t15195+t15287);
float t15289 = (t115*t15201);
float t15290 = (t15289/t15276);
float t15291 = (t15290*t15187);
float t15292 = (t15199+t15291);
float t15293 = (t15292*t15280);
float t15294 = (t15201+t15293);
vec3 t15295 = vec3(t15282,t15288,t15294);
float t15296 = length(t15295);
float t15297 = (t15296*t15296);
bool t15298 = (t15297<1);
vec3 t15299 = vec3(t15189,t15195,t15201);
float t15300 = length(t15299);
float t15301 = (t15300*t15300);
bool t15302 = (t15301>1);
bool t15303 = (t15298&&t15302);
float t15304;
float t15305;
float t15306;
float t15307;
if(t15303){
t15304 = 0;
t15305 = 0;
t15306 = 0;
t15307 = 1;
} else {
t15304 = 0;
t15305 = 0;
t15306 = 0;
t15307 = 0;
}
float t15308 = (1-t15270);
float t15309 = (t15236*t15308);
float t15310 = (t15270+t15309);
float t15311 = (1-t15310);
float t15312 = (t15307*t15311);
float t15313 = (t15304*t15312);
float t15314 = (t15274+t15313);
bool t15315 = (t15195>0);
bool t15316 = (t15288>0);
bool t15317 = (!t15316);
bool t15318 = (t15315&&t15317);
bool t15319 = (!t15315);
bool t15320 = (t15316&&t15319);
bool t15321 = (t15318||t15320);
bool t15322 = (t15297<196);
bool t15323 = (t15297>float(6.76));
bool t15324 = (t15322&&t15323);
bool t15325 = (t15321&&t15324);
float t15326;
float t15327;
float t15328;
float t15329;
if(t15325){
float t15330 = (t15288/t15286);
float t15331 = (-t15330);
float t15332 = (t15331*t15279);
float t15333 = (t15282+t15332);
float t15334 = atan(t15333,t15294);
float t15335 = (u1.u0/30);
float t15336 = (t15334+t15335);
float t15337 = (2*3.1415927);
float t15338 = (t15336+t15337);
float t15339 = mod(t15338,2);
float t15340 = (t15339*3.1415927);
float t15341 = (t15340/t15337);
float t15342 = (t15331*t15286);
float t15343 = (t15288+t15342);
float t15344 = (t15331*t15292);
float t15345 = (t15294+t15344);
vec3 t15346 = vec3(t15333,t15343,t15345);
float t15347 = length(t15346);
float t15348 = (t15347*t15347);
float t15349 = sqrt(t15348);
float t15350 = (t15349-float(2.6));
float t15351 = (t15350/float(11.4));
vec4 t15352 = texture(s4,vec2(t15341,t15351));
t15326 = t15352.x;
t15327 = t15352.y;
t15328 = t15352.z;
vec3 t15353 = vec3(t15352.x,t15352.y,t15352.z);
float t15354 = length(t15353);
float t15355 = (t15354*t15354);
float t15356 = (t15355/float(3.0));
bool t15357 = (t15356<=1);
float t15358;
if(t15357){
t15358 = t15356;
} else {
t15358 = 1;
}
bool t15359 = (t15358>=0);
float t15360;
if(t15359){
t15360 = t15358;
} else {
t15360 = 0;
}
t15329 = t15360;
} else {
t15326 = 0;
t15327 = 0;
t15328 = 0;
t15329 = 0;
}
float t15361 = (1-t15310);
float t15362 = (t15307*t15361);
float t15363 = (t15310+t15362);
float t15364 = (1-t15363);
float t15365 = (t15329*t15364);
float t15366 = (t15326*t15365);
float t15367 = (t15314+t15366);
float t15368 = (t115*t15282);
float t15369 = pow(t15297,float(2.5));
float t15370 = (t15368/t15369);
float t15371 = (t15370*t15280);
float t15372 = (t15279+t15371);
float t15373 = (t15280*u1.u4);
float t15374 = (t15372*t15373);
float t15375 = (t15282+t15374);
float t15376 = (t115*t15288);
float t15377 = (t15376/t15369);
float t15378 = (t15377*t15280);
float t15379 = (t15286+t15378);
float t15380 = (t15379*t15373);
float t15381 = (t15288+t15380);
float t15382 = (t115*t15294);
float t15383 = (t15382/t15369);
float t15384 = (t15383*t15280);
float t15385 = (t15292+t15384);
float t15386 = (t15385*t15373);
float t15387 = (t15294+t15386);
vec3 t15388 = vec3(t15375,t15381,t15387);
float t15389 = length(t15388);
float t15390 = (t15389*t15389);
bool t15391 = (t15390<1);
vec3 t15392 = vec3(t15282,t15288,t15294);
float t15393 = length(t15392);
float t15394 = (t15393*t15393);
bool t15395 = (t15394>1);
bool t15396 = (t15391&&t15395);
float t15397;
float t15398;
float t15399;
float t15400;
if(t15396){
t15397 = 0;
t15398 = 0;
t15399 = 0;
t15400 = 1;
} else {
t15397 = 0;
t15398 = 0;
t15399 = 0;
t15400 = 0;
}
float t15401 = (1-t15363);
float t15402 = (t15329*t15401);
float t15403 = (t15363+t15402);
float t15404 = (1-t15403);
float t15405 = (t15400*t15404);
float t15406 = (t15397*t15405);
float t15407 = (t15367+t15406);
bool t15408 = (t15288>0);
bool t15409 = (t15381>0);
bool t15410 = (!t15409);
bool t15411 = (t15408&&t15410);
bool t15412 = (!t15408);
bool t15413 = (t15409&&t15412);
bool t15414 = (t15411||t15413);
bool t15415 = (t15390<196);
bool t15416 = (t15390>float(6.76));
bool t15417 = (t15415&&t15416);
bool t15418 = (t15414&&t15417);
float t15419;
float t15420;
float t15421;
float t15422;
if(t15418){
float t15423 = (t15381/t15379);
float t15424 = (-t15423);
float t15425 = (t15424*t15372);
float t15426 = (t15375+t15425);
float t15427 = atan(t15426,t15387);
float t15428 = (u1.u0/30);
float t15429 = (t15427+t15428);
float t15430 = (2*3.1415927);
float t15431 = (t15429+t15430);
float t15432 = mod(t15431,2);
float t15433 = (t15432*3.1415927);
float t15434 = (t15433/t15430);
float t15435 = (t15424*t15379);
float t15436 = (t15381+t15435);
float t15437 = (t15424*t15385);
float t15438 = (t15387+t15437);
vec3 t15439 = vec3(t15426,t15436,t15438);
float t15440 = length(t15439);
float t15441 = (t15440*t15440);
float t15442 = sqrt(t15441);
float t15443 = (t15442-float(2.6));
float t15444 = (t15443/float(11.4));
vec4 t15445 = texture(s4,vec2(t15434,t15444));
t15419 = t15445.x;
t15420 = t15445.y;
t15421 = t15445.z;
vec3 t15446 = vec3(t15445.x,t15445.y,t15445.z);
float t15447 = length(t15446);
float t15448 = (t15447*t15447);
float t15449 = (t15448/float(3.0));
bool t15450 = (t15449<=1);
float t15451;
if(t15450){
t15451 = t15449;
} else {
t15451 = 1;
}
bool t15452 = (t15451>=0);
float t15453;
if(t15452){
t15453 = t15451;
} else {
t15453 = 0;
}
t15422 = t15453;
} else {
t15419 = 0;
t15420 = 0;
t15421 = 0;
t15422 = 0;
}
float t15454 = (1-t15403);
float t15455 = (t15400*t15454);
float t15456 = (t15403+t15455);
float t15457 = (1-t15456);
float t15458 = (t15422*t15457);
float t15459 = (t15419*t15458);
float t15460 = (t15407+t15459);
float t15461 = (t115*t15375);
float t15462 = pow(t15390,float(2.5));
float t15463 = (t15461/t15462);
float t15464 = (t15463*t15373);
float t15465 = (t15372+t15464);
float t15466 = (t15373*u1.u4);
float t15467 = (t15465*t15466);
float t15468 = (t15375+t15467);
float t15469 = (t115*t15381);
float t15470 = (t15469/t15462);
float t15471 = (t15470*t15373);
float t15472 = (t15379+t15471);
float t15473 = (t15472*t15466);
float t15474 = (t15381+t15473);
float t15475 = (t115*t15387);
float t15476 = (t15475/t15462);
float t15477 = (t15476*t15373);
float t15478 = (t15385+t15477);
float t15479 = (t15478*t15466);
float t15480 = (t15387+t15479);
vec3 t15481 = vec3(t15468,t15474,t15480);
float t15482 = length(t15481);
float t15483 = (t15482*t15482);
bool t15484 = (t15483<1);
vec3 t15485 = vec3(t15375,t15381,t15387);
float t15486 = length(t15485);
float t15487 = (t15486*t15486);
bool t15488 = (t15487>1);
bool t15489 = (t15484&&t15488);
float t15490;
float t15491;
float t15492;
float t15493;
if(t15489){
t15490 = 0;
t15491 = 0;
t15492 = 0;
t15493 = 1;
} else {
t15490 = 0;
t15491 = 0;
t15492 = 0;
t15493 = 0;
}
float t15494 = (1-t15456);
float t15495 = (t15422*t15494);
float t15496 = (t15456+t15495);
float t15497 = (1-t15496);
float t15498 = (t15493*t15497);
float t15499 = (t15490*t15498);
float t15500 = (t15460+t15499);
bool t15501 = (t15381>0);
bool t15502 = (t15474>0);
bool t15503 = (!t15502);
bool t15504 = (t15501&&t15503);
bool t15505 = (!t15501);
bool t15506 = (t15502&&t15505);
bool t15507 = (t15504||t15506);
bool t15508 = (t15483<196);
bool t15509 = (t15483>float(6.76));
bool t15510 = (t15508&&t15509);
bool t15511 = (t15507&&t15510);
float t15512;
float t15513;
float t15514;
float t15515;
if(t15511){
float t15516 = (t15474/t15472);
float t15517 = (-t15516);
float t15518 = (t15517*t15465);
float t15519 = (t15468+t15518);
float t15520 = atan(t15519,t15480);
float t15521 = (u1.u0/30);
float t15522 = (t15520+t15521);
float t15523 = (2*3.1415927);
float t15524 = (t15522+t15523);
float t15525 = mod(t15524,2);
float t15526 = (t15525*3.1415927);
float t15527 = (t15526/t15523);
float t15528 = (t15517*t15472);
float t15529 = (t15474+t15528);
float t15530 = (t15517*t15478);
float t15531 = (t15480+t15530);
vec3 t15532 = vec3(t15519,t15529,t15531);
float t15533 = length(t15532);
float t15534 = (t15533*t15533);
float t15535 = sqrt(t15534);
float t15536 = (t15535-float(2.6));
float t15537 = (t15536/float(11.4));
vec4 t15538 = texture(s4,vec2(t15527,t15537));
t15512 = t15538.x;
t15513 = t15538.y;
t15514 = t15538.z;
vec3 t15539 = vec3(t15538.x,t15538.y,t15538.z);
float t15540 = length(t15539);
float t15541 = (t15540*t15540);
float t15542 = (t15541/float(3.0));
bool t15543 = (t15542<=1);
float t15544;
if(t15543){
t15544 = t15542;
} else {
t15544 = 1;
}
bool t15545 = (t15544>=0);
float t15546;
if(t15545){
t15546 = t15544;
} else {
t15546 = 0;
}
t15515 = t15546;
} else {
t15512 = 0;
t15513 = 0;
t15514 = 0;
t15515 = 0;
}
float t15547 = (1-t15496);
float t15548 = (t15493*t15547);
float t15549 = (t15496+t15548);
float t15550 = (1-t15549);
float t15551 = (t15515*t15550);
float t15552 = (t15512*t15551);
float t15553 = (t15500+t15552);
float t15554 = (t115*t15468);
float t15555 = pow(t15483,float(2.5));
float t15556 = (t15554/t15555);
float t15557 = (t15556*t15466);
float t15558 = (t15465+t15557);
float t15559 = (t15466*u1.u4);
float t15560 = (t15558*t15559);
float t15561 = (t15468+t15560);
float t15562 = (t115*t15474);
float t15563 = (t15562/t15555);
float t15564 = (t15563*t15466);
float t15565 = (t15472+t15564);
float t15566 = (t15565*t15559);
float t15567 = (t15474+t15566);
float t15568 = (t115*t15480);
float t15569 = (t15568/t15555);
float t15570 = (t15569*t15466);
float t15571 = (t15478+t15570);
float t15572 = (t15571*t15559);
float t15573 = (t15480+t15572);
vec3 t15574 = vec3(t15561,t15567,t15573);
float t15575 = length(t15574);
float t15576 = (t15575*t15575);
bool t15577 = (t15576<1);
vec3 t15578 = vec3(t15468,t15474,t15480);
float t15579 = length(t15578);
float t15580 = (t15579*t15579);
bool t15581 = (t15580>1);
bool t15582 = (t15577&&t15581);
float t15583;
float t15584;
float t15585;
float t15586;
if(t15582){
t15583 = 0;
t15584 = 0;
t15585 = 0;
t15586 = 1;
} else {
t15583 = 0;
t15584 = 0;
t15585 = 0;
t15586 = 0;
}
float t15587 = (1-t15549);
float t15588 = (t15515*t15587);
float t15589 = (t15549+t15588);
float t15590 = (1-t15589);
float t15591 = (t15586*t15590);
float t15592 = (t15583*t15591);
float t15593 = (t15553+t15592);
bool t15594 = (t15474>0);
bool t15595 = (t15567>0);
bool t15596 = (!t15595);
bool t15597 = (t15594&&t15596);
bool t15598 = (!t15594);
bool t15599 = (t15595&&t15598);
bool t15600 = (t15597||t15599);
bool t15601 = (t15576<196);
bool t15602 = (t15576>float(6.76));
bool t15603 = (t15601&&t15602);
bool t15604 = (t15600&&t15603);
float t15605;
float t15606;
float t15607;
float t15608;
if(t15604){
float t15609 = (t15567/t15565);
float t15610 = (-t15609);
float t15611 = (t15610*t15558);
float t15612 = (t15561+t15611);
float t15613 = atan(t15612,t15573);
float t15614 = (u1.u0/30);
float t15615 = (t15613+t15614);
float t15616 = (2*3.1415927);
float t15617 = (t15615+t15616);
float t15618 = mod(t15617,2);
float t15619 = (t15618*3.1415927);
float t15620 = (t15619/t15616);
float t15621 = (t15610*t15565);
float t15622 = (t15567+t15621);
float t15623 = (t15610*t15571);
float t15624 = (t15573+t15623);
vec3 t15625 = vec3(t15612,t15622,t15624);
float t15626 = length(t15625);
float t15627 = (t15626*t15626);
float t15628 = sqrt(t15627);
float t15629 = (t15628-float(2.6));
float t15630 = (t15629/float(11.4));
vec4 t15631 = texture(s4,vec2(t15620,t15630));
t15605 = t15631.x;
t15606 = t15631.y;
t15607 = t15631.z;
vec3 t15632 = vec3(t15631.x,t15631.y,t15631.z);
float t15633 = length(t15632);
float t15634 = (t15633*t15633);
float t15635 = (t15634/float(3.0));
bool t15636 = (t15635<=1);
float t15637;
if(t15636){
t15637 = t15635;
} else {
t15637 = 1;
}
bool t15638 = (t15637>=0);
float t15639;
if(t15638){
t15639 = t15637;
} else {
t15639 = 0;
}
t15608 = t15639;
} else {
t15605 = 0;
t15606 = 0;
t15607 = 0;
t15608 = 0;
}
float t15640 = (1-t15589);
float t15641 = (t15586*t15640);
float t15642 = (t15589+t15641);
float t15643 = (1-t15642);
float t15644 = (t15608*t15643);
float t15645 = (t15605*t15644);
float t15646 = (t15593+t15645);
float t15647 = (t115*t15561);
float t15648 = pow(t15576,float(2.5));
float t15649 = (t15647/t15648);
float t15650 = (t15649*t15559);
float t15651 = (t15558+t15650);
float t15652 = (t15559*u1.u4);
float t15653 = (t15651*t15652);
float t15654 = (t15561+t15653);
float t15655 = (t115*t15567);
float t15656 = (t15655/t15648);
float t15657 = (t15656*t15559);
float t15658 = (t15565+t15657);
float t15659 = (t15658*t15652);
float t15660 = (t15567+t15659);
float t15661 = (t115*t15573);
float t15662 = (t15661/t15648);
float t15663 = (t15662*t15559);
float t15664 = (t15571+t15663);
float t15665 = (t15664*t15652);
float t15666 = (t15573+t15665);
vec3 t15667 = vec3(t15654,t15660,t15666);
float t15668 = length(t15667);
float t15669 = (t15668*t15668);
bool t15670 = (t15669<1);
vec3 t15671 = vec3(t15561,t15567,t15573);
float t15672 = length(t15671);
float t15673 = (t15672*t15672);
bool t15674 = (t15673>1);
bool t15675 = (t15670&&t15674);
float t15676;
float t15677;
float t15678;
float t15679;
if(t15675){
t15676 = 0;
t15677 = 0;
t15678 = 0;
t15679 = 1;
} else {
t15676 = 0;
t15677 = 0;
t15678 = 0;
t15679 = 0;
}
float t15680 = (1-t15642);
float t15681 = (t15608*t15680);
float t15682 = (t15642+t15681);
float t15683 = (1-t15682);
float t15684 = (t15679*t15683);
float t15685 = (t15676*t15684);
float t15686 = (t15646+t15685);
bool t15687 = (t15567>0);
bool t15688 = (t15660>0);
bool t15689 = (!t15688);
bool t15690 = (t15687&&t15689);
bool t15691 = (!t15687);
bool t15692 = (t15688&&t15691);
bool t15693 = (t15690||t15692);
bool t15694 = (t15669<196);
bool t15695 = (t15669>float(6.76));
bool t15696 = (t15694&&t15695);
bool t15697 = (t15693&&t15696);
float t15698;
float t15699;
float t15700;
float t15701;
if(t15697){
float t15702 = (t15660/t15658);
float t15703 = (-t15702);
float t15704 = (t15703*t15651);
float t15705 = (t15654+t15704);
float t15706 = atan(t15705,t15666);
float t15707 = (u1.u0/30);
float t15708 = (t15706+t15707);
float t15709 = (2*3.1415927);
float t15710 = (t15708+t15709);
float t15711 = mod(t15710,2);
float t15712 = (t15711*3.1415927);
float t15713 = (t15712/t15709);
float t15714 = (t15703*t15658);
float t15715 = (t15660+t15714);
float t15716 = (t15703*t15664);
float t15717 = (t15666+t15716);
vec3 t15718 = vec3(t15705,t15715,t15717);
float t15719 = length(t15718);
float t15720 = (t15719*t15719);
float t15721 = sqrt(t15720);
float t15722 = (t15721-float(2.6));
float t15723 = (t15722/float(11.4));
vec4 t15724 = texture(s4,vec2(t15713,t15723));
t15698 = t15724.x;
t15699 = t15724.y;
t15700 = t15724.z;
vec3 t15725 = vec3(t15724.x,t15724.y,t15724.z);
float t15726 = length(t15725);
float t15727 = (t15726*t15726);
float t15728 = (t15727/float(3.0));
bool t15729 = (t15728<=1);
float t15730;
if(t15729){
t15730 = t15728;
} else {
t15730 = 1;
}
bool t15731 = (t15730>=0);
float t15732;
if(t15731){
t15732 = t15730;
} else {
t15732 = 0;
}
t15701 = t15732;
} else {
t15698 = 0;
t15699 = 0;
t15700 = 0;
t15701 = 0;
}
float t15733 = (1-t15682);
float t15734 = (t15679*t15733);
float t15735 = (t15682+t15734);
float t15736 = (1-t15735);
float t15737 = (t15701*t15736);
float t15738 = (t15698*t15737);
float t15739 = (t15686+t15738);
float t15740 = (t115*t15654);
float t15741 = pow(t15669,float(2.5));
float t15742 = (t15740/t15741);
float t15743 = (t15742*t15652);
float t15744 = (t15651+t15743);
float t15745 = (t15652*u1.u4);
float t15746 = (t15744*t15745);
float t15747 = (t15654+t15746);
float t15748 = (t115*t15660);
float t15749 = (t15748/t15741);
float t15750 = (t15749*t15652);
float t15751 = (t15658+t15750);
float t15752 = (t15751*t15745);
float t15753 = (t15660+t15752);
float t15754 = (t115*t15666);
float t15755 = (t15754/t15741);
float t15756 = (t15755*t15652);
float t15757 = (t15664+t15756);
float t15758 = (t15757*t15745);
float t15759 = (t15666+t15758);
vec3 t15760 = vec3(t15747,t15753,t15759);
float t15761 = length(t15760);
float t15762 = (t15761*t15761);
bool t15763 = (t15762<1);
vec3 t15764 = vec3(t15654,t15660,t15666);
float t15765 = length(t15764);
float t15766 = (t15765*t15765);
bool t15767 = (t15766>1);
bool t15768 = (t15763&&t15767);
float t15769;
float t15770;
float t15771;
float t15772;
if(t15768){
t15769 = 0;
t15770 = 0;
t15771 = 0;
t15772 = 1;
} else {
t15769 = 0;
t15770 = 0;
t15771 = 0;
t15772 = 0;
}
float t15773 = (1-t15735);
float t15774 = (t15701*t15773);
float t15775 = (t15735+t15774);
float t15776 = (1-t15775);
float t15777 = (t15772*t15776);
float t15778 = (t15769*t15777);
float t15779 = (t15739+t15778);
bool t15780 = (t15660>0);
bool t15781 = (t15753>0);
bool t15782 = (!t15781);
bool t15783 = (t15780&&t15782);
bool t15784 = (!t15780);
bool t15785 = (t15781&&t15784);
bool t15786 = (t15783||t15785);
bool t15787 = (t15762<196);
bool t15788 = (t15762>float(6.76));
bool t15789 = (t15787&&t15788);
bool t15790 = (t15786&&t15789);
float t15791;
float t15792;
float t15793;
float t15794;
if(t15790){
float t15795 = (t15753/t15751);
float t15796 = (-t15795);
float t15797 = (t15796*t15744);
float t15798 = (t15747+t15797);
float t15799 = atan(t15798,t15759);
float t15800 = (u1.u0/30);
float t15801 = (t15799+t15800);
float t15802 = (2*3.1415927);
float t15803 = (t15801+t15802);
float t15804 = mod(t15803,2);
float t15805 = (t15804*3.1415927);
float t15806 = (t15805/t15802);
float t15807 = (t15796*t15751);
float t15808 = (t15753+t15807);
float t15809 = (t15796*t15757);
float t15810 = (t15759+t15809);
vec3 t15811 = vec3(t15798,t15808,t15810);
float t15812 = length(t15811);
float t15813 = (t15812*t15812);
float t15814 = sqrt(t15813);
float t15815 = (t15814-float(2.6));
float t15816 = (t15815/float(11.4));
vec4 t15817 = texture(s4,vec2(t15806,t15816));
t15791 = t15817.x;
t15792 = t15817.y;
t15793 = t15817.z;
vec3 t15818 = vec3(t15817.x,t15817.y,t15817.z);
float t15819 = length(t15818);
float t15820 = (t15819*t15819);
float t15821 = (t15820/float(3.0));
bool t15822 = (t15821<=1);
float t15823;
if(t15822){
t15823 = t15821;
} else {
t15823 = 1;
}
bool t15824 = (t15823>=0);
float t15825;
if(t15824){
t15825 = t15823;
} else {
t15825 = 0;
}
t15794 = t15825;
} else {
t15791 = 0;
t15792 = 0;
t15793 = 0;
t15794 = 0;
}
float t15826 = (1-t15775);
float t15827 = (t15772*t15826);
float t15828 = (t15775+t15827);
float t15829 = (1-t15828);
float t15830 = (t15794*t15829);
float t15831 = (t15791*t15830);
float t15832 = (t15779+t15831);
float t15833 = (t115*t15747);
float t15834 = pow(t15762,float(2.5));
float t15835 = (t15833/t15834);
float t15836 = (t15835*t15745);
float t15837 = (t15744+t15836);
float t15838 = (t15745*u1.u4);
float t15839 = (t15837*t15838);
float t15840 = (t15747+t15839);
float t15841 = (t115*t15753);
float t15842 = (t15841/t15834);
float t15843 = (t15842*t15745);
float t15844 = (t15751+t15843);
float t15845 = (t15844*t15838);
float t15846 = (t15753+t15845);
float t15847 = (t115*t15759);
float t15848 = (t15847/t15834);
float t15849 = (t15848*t15745);
float t15850 = (t15757+t15849);
float t15851 = (t15850*t15838);
float t15852 = (t15759+t15851);
vec3 t15853 = vec3(t15840,t15846,t15852);
float t15854 = length(t15853);
float t15855 = (t15854*t15854);
bool t15856 = (t15855<1);
vec3 t15857 = vec3(t15747,t15753,t15759);
float t15858 = length(t15857);
float t15859 = (t15858*t15858);
bool t15860 = (t15859>1);
bool t15861 = (t15856&&t15860);
float t15862;
float t15863;
float t15864;
float t15865;
if(t15861){
t15862 = 0;
t15863 = 0;
t15864 = 0;
t15865 = 1;
} else {
t15862 = 0;
t15863 = 0;
t15864 = 0;
t15865 = 0;
}
float t15866 = (1-t15828);
float t15867 = (t15794*t15866);
float t15868 = (t15828+t15867);
float t15869 = (1-t15868);
float t15870 = (t15865*t15869);
float t15871 = (t15862*t15870);
float t15872 = (t15832+t15871);
bool t15873 = (t15753>0);
bool t15874 = (t15846>0);
bool t15875 = (!t15874);
bool t15876 = (t15873&&t15875);
bool t15877 = (!t15873);
bool t15878 = (t15874&&t15877);
bool t15879 = (t15876||t15878);
bool t15880 = (t15855<196);
bool t15881 = (t15855>float(6.76));
bool t15882 = (t15880&&t15881);
bool t15883 = (t15879&&t15882);
float t15884;
float t15885;
float t15886;
float t15887;
if(t15883){
float t15888 = (t15846/t15844);
float t15889 = (-t15888);
float t15890 = (t15889*t15837);
float t15891 = (t15840+t15890);
float t15892 = atan(t15891,t15852);
float t15893 = (u1.u0/30);
float t15894 = (t15892+t15893);
float t15895 = (2*3.1415927);
float t15896 = (t15894+t15895);
float t15897 = mod(t15896,2);
float t15898 = (t15897*3.1415927);
float t15899 = (t15898/t15895);
float t15900 = (t15889*t15844);
float t15901 = (t15846+t15900);
float t15902 = (t15889*t15850);
float t15903 = (t15852+t15902);
vec3 t15904 = vec3(t15891,t15901,t15903);
float t15905 = length(t15904);
float t15906 = (t15905*t15905);
float t15907 = sqrt(t15906);
float t15908 = (t15907-float(2.6));
float t15909 = (t15908/float(11.4));
vec4 t15910 = texture(s4,vec2(t15899,t15909));
t15884 = t15910.x;
t15885 = t15910.y;
t15886 = t15910.z;
vec3 t15911 = vec3(t15910.x,t15910.y,t15910.z);
float t15912 = length(t15911);
float t15913 = (t15912*t15912);
float t15914 = (t15913/float(3.0));
bool t15915 = (t15914<=1);
float t15916;
if(t15915){
t15916 = t15914;
} else {
t15916 = 1;
}
bool t15917 = (t15916>=0);
float t15918;
if(t15917){
t15918 = t15916;
} else {
t15918 = 0;
}
t15887 = t15918;
} else {
t15884 = 0;
t15885 = 0;
t15886 = 0;
t15887 = 0;
}
float t15919 = (1-t15868);
float t15920 = (t15865*t15919);
float t15921 = (t15868+t15920);
float t15922 = (1-t15921);
float t15923 = (t15887*t15922);
float t15924 = (t15884*t15923);
float t15925 = (t15872+t15924);
float t15926 = (t115*t15840);
float t15927 = pow(t15855,float(2.5));
float t15928 = (t15926/t15927);
float t15929 = (t15928*t15838);
float t15930 = (t15837+t15929);
float t15931 = (t15838*u1.u4);
float t15932 = (t15930*t15931);
float t15933 = (t15840+t15932);
float t15934 = (t115*t15846);
float t15935 = (t15934/t15927);
float t15936 = (t15935*t15838);
float t15937 = (t15844+t15936);
float t15938 = (t15937*t15931);
float t15939 = (t15846+t15938);
float t15940 = (t115*t15852);
float t15941 = (t15940/t15927);
float t15942 = (t15941*t15838);
float t15943 = (t15850+t15942);
float t15944 = (t15943*t15931);
float t15945 = (t15852+t15944);
vec3 t15946 = vec3(t15933,t15939,t15945);
float t15947 = length(t15946);
float t15948 = (t15947*t15947);
bool t15949 = (t15948<1);
vec3 t15950 = vec3(t15840,t15846,t15852);
float t15951 = length(t15950);
float t15952 = (t15951*t15951);
bool t15953 = (t15952>1);
bool t15954 = (t15949&&t15953);
float t15955;
float t15956;
float t15957;
float t15958;
if(t15954){
t15955 = 0;
t15956 = 0;
t15957 = 0;
t15958 = 1;
} else {
t15955 = 0;
t15956 = 0;
t15957 = 0;
t15958 = 0;
}
float t15959 = (1-t15921);
float t15960 = (t15887*t15959);
float t15961 = (t15921+t15960);
float t15962 = (1-t15961);
float t15963 = (t15958*t15962);
float t15964 = (t15955*t15963);
float t15965 = (t15925+t15964);
bool t15966 = (t15846>0);
bool t15967 = (t15939>0);
bool t15968 = (!t15967);
bool t15969 = (t15966&&t15968);
bool t15970 = (!t15966);
bool t15971 = (t15967&&t15970);
bool t15972 = (t15969||t15971);
bool t15973 = (t15948<196);
bool t15974 = (t15948>float(6.76));
bool t15975 = (t15973&&t15974);
bool t15976 = (t15972&&t15975);
float t15977;
float t15978;
float t15979;
float t15980;
if(t15976){
float t15981 = (t15939/t15937);
float t15982 = (-t15981);
float t15983 = (t15982*t15930);
float t15984 = (t15933+t15983);
float t15985 = atan(t15984,t15945);
float t15986 = (u1.u0/30);
float t15987 = (t15985+t15986);
float t15988 = (2*3.1415927);
float t15989 = (t15987+t15988);
float t15990 = mod(t15989,2);
float t15991 = (t15990*3.1415927);
float t15992 = (t15991/t15988);
float t15993 = (t15982*t15937);
float t15994 = (t15939+t15993);
float t15995 = (t15982*t15943);
float t15996 = (t15945+t15995);
vec3 t15997 = vec3(t15984,t15994,t15996);
float t15998 = length(t15997);
float t15999 = (t15998*t15998);
float t16000 = sqrt(t15999);
float t16001 = (t16000-float(2.6));
float t16002 = (t16001/float(11.4));
vec4 t16003 = texture(s4,vec2(t15992,t16002));
t15977 = t16003.x;
t15978 = t16003.y;
t15979 = t16003.z;
vec3 t16004 = vec3(t16003.x,t16003.y,t16003.z);
float t16005 = length(t16004);
float t16006 = (t16005*t16005);
float t16007 = (t16006/float(3.0));
bool t16008 = (t16007<=1);
float t16009;
if(t16008){
t16009 = t16007;
} else {
t16009 = 1;
}
bool t16010 = (t16009>=0);
float t16011;
if(t16010){
t16011 = t16009;
} else {
t16011 = 0;
}
t15980 = t16011;
} else {
t15977 = 0;
t15978 = 0;
t15979 = 0;
t15980 = 0;
}
float t16012 = (1-t15961);
float t16013 = (t15958*t16012);
float t16014 = (t15961+t16013);
float t16015 = (1-t16014);
float t16016 = (t15980*t16015);
float t16017 = (t15977*t16016);
float t16018 = (t15965+t16017);
float t16019 = (t115*t15933);
float t16020 = pow(t15948,float(2.5));
float t16021 = (t16019/t16020);
float t16022 = (t16021*t15931);
float t16023 = (t15930+t16022);
float t16024 = (t15931*u1.u4);
float t16025 = (t16023*t16024);
float t16026 = (t15933+t16025);
float t16027 = (t115*t15939);
float t16028 = (t16027/t16020);
float t16029 = (t16028*t15931);
float t16030 = (t15937+t16029);
float t16031 = (t16030*t16024);
float t16032 = (t15939+t16031);
float t16033 = (t115*t15945);
float t16034 = (t16033/t16020);
float t16035 = (t16034*t15931);
float t16036 = (t15943+t16035);
float t16037 = (t16036*t16024);
float t16038 = (t15945+t16037);
vec3 t16039 = vec3(t16026,t16032,t16038);
float t16040 = length(t16039);
float t16041 = (t16040*t16040);
bool t16042 = (t16041<1);
vec3 t16043 = vec3(t15933,t15939,t15945);
float t16044 = length(t16043);
float t16045 = (t16044*t16044);
bool t16046 = (t16045>1);
bool t16047 = (t16042&&t16046);
float t16048;
float t16049;
float t16050;
float t16051;
if(t16047){
t16048 = 0;
t16049 = 0;
t16050 = 0;
t16051 = 1;
} else {
t16048 = 0;
t16049 = 0;
t16050 = 0;
t16051 = 0;
}
float t16052 = (1-t16014);
float t16053 = (t15980*t16052);
float t16054 = (t16014+t16053);
float t16055 = (1-t16054);
float t16056 = (t16051*t16055);
float t16057 = (t16048*t16056);
float t16058 = (t16018+t16057);
bool t16059 = (t15939>0);
bool t16060 = (t16032>0);
bool t16061 = (!t16060);
bool t16062 = (t16059&&t16061);
bool t16063 = (!t16059);
bool t16064 = (t16060&&t16063);
bool t16065 = (t16062||t16064);
bool t16066 = (t16041<196);
bool t16067 = (t16041>float(6.76));
bool t16068 = (t16066&&t16067);
bool t16069 = (t16065&&t16068);
float t16070;
float t16071;
float t16072;
float t16073;
if(t16069){
float t16074 = (t16032/t16030);
float t16075 = (-t16074);
float t16076 = (t16075*t16023);
float t16077 = (t16026+t16076);
float t16078 = atan(t16077,t16038);
float t16079 = (u1.u0/30);
float t16080 = (t16078+t16079);
float t16081 = (2*3.1415927);
float t16082 = (t16080+t16081);
float t16083 = mod(t16082,2);
float t16084 = (t16083*3.1415927);
float t16085 = (t16084/t16081);
float t16086 = (t16075*t16030);
float t16087 = (t16032+t16086);
float t16088 = (t16075*t16036);
float t16089 = (t16038+t16088);
vec3 t16090 = vec3(t16077,t16087,t16089);
float t16091 = length(t16090);
float t16092 = (t16091*t16091);
float t16093 = sqrt(t16092);
float t16094 = (t16093-float(2.6));
float t16095 = (t16094/float(11.4));
vec4 t16096 = texture(s4,vec2(t16085,t16095));
t16070 = t16096.x;
t16071 = t16096.y;
t16072 = t16096.z;
vec3 t16097 = vec3(t16096.x,t16096.y,t16096.z);
float t16098 = length(t16097);
float t16099 = (t16098*t16098);
float t16100 = (t16099/float(3.0));
bool t16101 = (t16100<=1);
float t16102;
if(t16101){
t16102 = t16100;
} else {
t16102 = 1;
}
bool t16103 = (t16102>=0);
float t16104;
if(t16103){
t16104 = t16102;
} else {
t16104 = 0;
}
t16073 = t16104;
} else {
t16070 = 0;
t16071 = 0;
t16072 = 0;
t16073 = 0;
}
float t16105 = (1-t16054);
float t16106 = (t16051*t16105);
float t16107 = (t16054+t16106);
float t16108 = (1-t16107);
float t16109 = (t16073*t16108);
float t16110 = (t16070*t16109);
float t16111 = (t16058+t16110);
float t16112 = (t115*t16026);
float t16113 = pow(t16041,float(2.5));
float t16114 = (t16112/t16113);
float t16115 = (t16114*t16024);
float t16116 = (t16023+t16115);
float t16117 = (t16024*u1.u4);
float t16118 = (t16116*t16117);
float t16119 = (t16026+t16118);
float t16120 = (t115*t16032);
float t16121 = (t16120/t16113);
float t16122 = (t16121*t16024);
float t16123 = (t16030+t16122);
float t16124 = (t16123*t16117);
float t16125 = (t16032+t16124);
float t16126 = (t115*t16038);
float t16127 = (t16126/t16113);
float t16128 = (t16127*t16024);
float t16129 = (t16036+t16128);
float t16130 = (t16129*t16117);
float t16131 = (t16038+t16130);
vec3 t16132 = vec3(t16119,t16125,t16131);
float t16133 = length(t16132);
float t16134 = (t16133*t16133);
bool t16135 = (t16134<1);
vec3 t16136 = vec3(t16026,t16032,t16038);
float t16137 = length(t16136);
float t16138 = (t16137*t16137);
bool t16139 = (t16138>1);
bool t16140 = (t16135&&t16139);
float t16141;
float t16142;
float t16143;
float t16144;
if(t16140){
t16141 = 0;
t16142 = 0;
t16143 = 0;
t16144 = 1;
} else {
t16141 = 0;
t16142 = 0;
t16143 = 0;
t16144 = 0;
}
float t16145 = (1-t16107);
float t16146 = (t16073*t16145);
float t16147 = (t16107+t16146);
float t16148 = (1-t16147);
float t16149 = (t16144*t16148);
float t16150 = (t16141*t16149);
float t16151 = (t16111+t16150);
bool t16152 = (t16032>0);
bool t16153 = (t16125>0);
bool t16154 = (!t16153);
bool t16155 = (t16152&&t16154);
bool t16156 = (!t16152);
bool t16157 = (t16153&&t16156);
bool t16158 = (t16155||t16157);
bool t16159 = (t16134<196);
bool t16160 = (t16134>float(6.76));
bool t16161 = (t16159&&t16160);
bool t16162 = (t16158&&t16161);
float t16163;
float t16164;
float t16165;
float t16166;
if(t16162){
float t16167 = (t16125/t16123);
float t16168 = (-t16167);
float t16169 = (t16168*t16116);
float t16170 = (t16119+t16169);
float t16171 = atan(t16170,t16131);
float t16172 = (u1.u0/30);
float t16173 = (t16171+t16172);
float t16174 = (2*3.1415927);
float t16175 = (t16173+t16174);
float t16176 = mod(t16175,2);
float t16177 = (t16176*3.1415927);
float t16178 = (t16177/t16174);
float t16179 = (t16168*t16123);
float t16180 = (t16125+t16179);
float t16181 = (t16168*t16129);
float t16182 = (t16131+t16181);
vec3 t16183 = vec3(t16170,t16180,t16182);
float t16184 = length(t16183);
float t16185 = (t16184*t16184);
float t16186 = sqrt(t16185);
float t16187 = (t16186-float(2.6));
float t16188 = (t16187/float(11.4));
vec4 t16189 = texture(s4,vec2(t16178,t16188));
t16163 = t16189.x;
t16164 = t16189.y;
t16165 = t16189.z;
vec3 t16190 = vec3(t16189.x,t16189.y,t16189.z);
float t16191 = length(t16190);
float t16192 = (t16191*t16191);
float t16193 = (t16192/float(3.0));
bool t16194 = (t16193<=1);
float t16195;
if(t16194){
t16195 = t16193;
} else {
t16195 = 1;
}
bool t16196 = (t16195>=0);
float t16197;
if(t16196){
t16197 = t16195;
} else {
t16197 = 0;
}
t16166 = t16197;
} else {
t16163 = 0;
t16164 = 0;
t16165 = 0;
t16166 = 0;
}
float t16198 = (1-t16147);
float t16199 = (t16144*t16198);
float t16200 = (t16147+t16199);
float t16201 = (1-t16200);
float t16202 = (t16166*t16201);
float t16203 = (t16163*t16202);
float t16204 = (t16151+t16203);
float t16205 = (t115*t16119);
float t16206 = pow(t16134,float(2.5));
float t16207 = (t16205/t16206);
float t16208 = (t16207*t16117);
float t16209 = (t16116+t16208);
float t16210 = (t16117*u1.u4);
float t16211 = (t16209*t16210);
float t16212 = (t16119+t16211);
float t16213 = (t115*t16125);
float t16214 = (t16213/t16206);
float t16215 = (t16214*t16117);
float t16216 = (t16123+t16215);
float t16217 = (t16216*t16210);
float t16218 = (t16125+t16217);
float t16219 = (t115*t16131);
float t16220 = (t16219/t16206);
float t16221 = (t16220*t16117);
float t16222 = (t16129+t16221);
float t16223 = (t16222*t16210);
float t16224 = (t16131+t16223);
vec3 t16225 = vec3(t16212,t16218,t16224);
float t16226 = length(t16225);
float t16227 = (t16226*t16226);
bool t16228 = (t16227<1);
vec3 t16229 = vec3(t16119,t16125,t16131);
float t16230 = length(t16229);
float t16231 = (t16230*t16230);
bool t16232 = (t16231>1);
bool t16233 = (t16228&&t16232);
float t16234;
float t16235;
float t16236;
float t16237;
if(t16233){
t16234 = 0;
t16235 = 0;
t16236 = 0;
t16237 = 1;
} else {
t16234 = 0;
t16235 = 0;
t16236 = 0;
t16237 = 0;
}
float t16238 = (1-t16200);
float t16239 = (t16166*t16238);
float t16240 = (t16200+t16239);
float t16241 = (1-t16240);
float t16242 = (t16237*t16241);
float t16243 = (t16234*t16242);
float t16244 = (t16204+t16243);
bool t16245 = (t16125>0);
bool t16246 = (t16218>0);
bool t16247 = (!t16246);
bool t16248 = (t16245&&t16247);
bool t16249 = (!t16245);
bool t16250 = (t16246&&t16249);
bool t16251 = (t16248||t16250);
bool t16252 = (t16227<196);
bool t16253 = (t16227>float(6.76));
bool t16254 = (t16252&&t16253);
bool t16255 = (t16251&&t16254);
float t16256;
float t16257;
float t16258;
float t16259;
if(t16255){
float t16260 = (t16218/t16216);
float t16261 = (-t16260);
float t16262 = (t16261*t16209);
float t16263 = (t16212+t16262);
float t16264 = atan(t16263,t16224);
float t16265 = (u1.u0/30);
float t16266 = (t16264+t16265);
float t16267 = (2*3.1415927);
float t16268 = (t16266+t16267);
float t16269 = mod(t16268,2);
float t16270 = (t16269*3.1415927);
float t16271 = (t16270/t16267);
float t16272 = (t16261*t16216);
float t16273 = (t16218+t16272);
float t16274 = (t16261*t16222);
float t16275 = (t16224+t16274);
vec3 t16276 = vec3(t16263,t16273,t16275);
float t16277 = length(t16276);
float t16278 = (t16277*t16277);
float t16279 = sqrt(t16278);
float t16280 = (t16279-float(2.6));
float t16281 = (t16280/float(11.4));
vec4 t16282 = texture(s4,vec2(t16271,t16281));
t16256 = t16282.x;
t16257 = t16282.y;
t16258 = t16282.z;
vec3 t16283 = vec3(t16282.x,t16282.y,t16282.z);
float t16284 = length(t16283);
float t16285 = (t16284*t16284);
float t16286 = (t16285/float(3.0));
bool t16287 = (t16286<=1);
float t16288;
if(t16287){
t16288 = t16286;
} else {
t16288 = 1;
}
bool t16289 = (t16288>=0);
float t16290;
if(t16289){
t16290 = t16288;
} else {
t16290 = 0;
}
t16259 = t16290;
} else {
t16256 = 0;
t16257 = 0;
t16258 = 0;
t16259 = 0;
}
float t16291 = (1-t16240);
float t16292 = (t16237*t16291);
float t16293 = (t16240+t16292);
float t16294 = (1-t16293);
float t16295 = (t16259*t16294);
float t16296 = (t16256*t16295);
float t16297 = (t16244+t16296);
float t16298 = (t115*t16212);
float t16299 = pow(t16227,float(2.5));
float t16300 = (t16298/t16299);
float t16301 = (t16300*t16210);
float t16302 = (t16209+t16301);
float t16303 = (t16210*u1.u4);
float t16304 = (t16302*t16303);
float t16305 = (t16212+t16304);
float t16306 = (t115*t16218);
float t16307 = (t16306/t16299);
float t16308 = (t16307*t16210);
float t16309 = (t16216+t16308);
float t16310 = (t16309*t16303);
float t16311 = (t16218+t16310);
float t16312 = (t115*t16224);
float t16313 = (t16312/t16299);
float t16314 = (t16313*t16210);
float t16315 = (t16222+t16314);
float t16316 = (t16315*t16303);
float t16317 = (t16224+t16316);
vec3 t16318 = vec3(t16305,t16311,t16317);
float t16319 = length(t16318);
float t16320 = (t16319*t16319);
bool t16321 = (t16320<1);
vec3 t16322 = vec3(t16212,t16218,t16224);
float t16323 = length(t16322);
float t16324 = (t16323*t16323);
bool t16325 = (t16324>1);
bool t16326 = (t16321&&t16325);
float t16327;
float t16328;
float t16329;
float t16330;
if(t16326){
t16327 = 0;
t16328 = 0;
t16329 = 0;
t16330 = 1;
} else {
t16327 = 0;
t16328 = 0;
t16329 = 0;
t16330 = 0;
}
float t16331 = (1-t16293);
float t16332 = (t16259*t16331);
float t16333 = (t16293+t16332);
float t16334 = (1-t16333);
float t16335 = (t16330*t16334);
float t16336 = (t16327*t16335);
float t16337 = (t16297+t16336);
bool t16338 = (t16218>0);
bool t16339 = (t16311>0);
bool t16340 = (!t16339);
bool t16341 = (t16338&&t16340);
bool t16342 = (!t16338);
bool t16343 = (t16339&&t16342);
bool t16344 = (t16341||t16343);
bool t16345 = (t16320<196);
bool t16346 = (t16320>float(6.76));
bool t16347 = (t16345&&t16346);
bool t16348 = (t16344&&t16347);
float t16349;
float t16350;
float t16351;
float t16352;
if(t16348){
float t16353 = (t16311/t16309);
float t16354 = (-t16353);
float t16355 = (t16354*t16302);
float t16356 = (t16305+t16355);
float t16357 = atan(t16356,t16317);
float t16358 = (u1.u0/30);
float t16359 = (t16357+t16358);
float t16360 = (2*3.1415927);
float t16361 = (t16359+t16360);
float t16362 = mod(t16361,2);
float t16363 = (t16362*3.1415927);
float t16364 = (t16363/t16360);
float t16365 = (t16354*t16309);
float t16366 = (t16311+t16365);
float t16367 = (t16354*t16315);
float t16368 = (t16317+t16367);
vec3 t16369 = vec3(t16356,t16366,t16368);
float t16370 = length(t16369);
float t16371 = (t16370*t16370);
float t16372 = sqrt(t16371);
float t16373 = (t16372-float(2.6));
float t16374 = (t16373/float(11.4));
vec4 t16375 = texture(s4,vec2(t16364,t16374));
t16349 = t16375.x;
t16350 = t16375.y;
t16351 = t16375.z;
vec3 t16376 = vec3(t16375.x,t16375.y,t16375.z);
float t16377 = length(t16376);
float t16378 = (t16377*t16377);
float t16379 = (t16378/float(3.0));
bool t16380 = (t16379<=1);
float t16381;
if(t16380){
t16381 = t16379;
} else {
t16381 = 1;
}
bool t16382 = (t16381>=0);
float t16383;
if(t16382){
t16383 = t16381;
} else {
t16383 = 0;
}
t16352 = t16383;
} else {
t16349 = 0;
t16350 = 0;
t16351 = 0;
t16352 = 0;
}
float t16384 = (1-t16333);
float t16385 = (t16330*t16384);
float t16386 = (t16333+t16385);
float t16387 = (1-t16386);
float t16388 = (t16352*t16387);
float t16389 = (t16349*t16388);
float t16390 = (t16337+t16389);
float t16391 = (t115*t16305);
float t16392 = pow(t16320,float(2.5));
float t16393 = (t16391/t16392);
float t16394 = (t16393*t16303);
float t16395 = (t16302+t16394);
float t16396 = (t16303*u1.u4);
float t16397 = (t16395*t16396);
float t16398 = (t16305+t16397);
float t16399 = (t115*t16311);
float t16400 = (t16399/t16392);
float t16401 = (t16400*t16303);
float t16402 = (t16309+t16401);
float t16403 = (t16402*t16396);
float t16404 = (t16311+t16403);
float t16405 = (t115*t16317);
float t16406 = (t16405/t16392);
float t16407 = (t16406*t16303);
float t16408 = (t16315+t16407);
float t16409 = (t16408*t16396);
float t16410 = (t16317+t16409);
vec3 t16411 = vec3(t16398,t16404,t16410);
float t16412 = length(t16411);
float t16413 = (t16412*t16412);
bool t16414 = (t16413<1);
vec3 t16415 = vec3(t16305,t16311,t16317);
float t16416 = length(t16415);
float t16417 = (t16416*t16416);
bool t16418 = (t16417>1);
bool t16419 = (t16414&&t16418);
float t16420;
float t16421;
float t16422;
float t16423;
if(t16419){
t16420 = 0;
t16421 = 0;
t16422 = 0;
t16423 = 1;
} else {
t16420 = 0;
t16421 = 0;
t16422 = 0;
t16423 = 0;
}
float t16424 = (1-t16386);
float t16425 = (t16352*t16424);
float t16426 = (t16386+t16425);
float t16427 = (1-t16426);
float t16428 = (t16423*t16427);
float t16429 = (t16420*t16428);
float t16430 = (t16390+t16429);
bool t16431 = (t16311>0);
bool t16432 = (t16404>0);
bool t16433 = (!t16432);
bool t16434 = (t16431&&t16433);
bool t16435 = (!t16431);
bool t16436 = (t16432&&t16435);
bool t16437 = (t16434||t16436);
bool t16438 = (t16413<196);
bool t16439 = (t16413>float(6.76));
bool t16440 = (t16438&&t16439);
bool t16441 = (t16437&&t16440);
float t16442;
float t16443;
float t16444;
float t16445;
if(t16441){
float t16446 = (t16404/t16402);
float t16447 = (-t16446);
float t16448 = (t16447*t16395);
float t16449 = (t16398+t16448);
float t16450 = atan(t16449,t16410);
float t16451 = (u1.u0/30);
float t16452 = (t16450+t16451);
float t16453 = (2*3.1415927);
float t16454 = (t16452+t16453);
float t16455 = mod(t16454,2);
float t16456 = (t16455*3.1415927);
float t16457 = (t16456/t16453);
float t16458 = (t16447*t16402);
float t16459 = (t16404+t16458);
float t16460 = (t16447*t16408);
float t16461 = (t16410+t16460);
vec3 t16462 = vec3(t16449,t16459,t16461);
float t16463 = length(t16462);
float t16464 = (t16463*t16463);
float t16465 = sqrt(t16464);
float t16466 = (t16465-float(2.6));
float t16467 = (t16466/float(11.4));
vec4 t16468 = texture(s4,vec2(t16457,t16467));
t16442 = t16468.x;
t16443 = t16468.y;
t16444 = t16468.z;
vec3 t16469 = vec3(t16468.x,t16468.y,t16468.z);
float t16470 = length(t16469);
float t16471 = (t16470*t16470);
float t16472 = (t16471/float(3.0));
bool t16473 = (t16472<=1);
float t16474;
if(t16473){
t16474 = t16472;
} else {
t16474 = 1;
}
bool t16475 = (t16474>=0);
float t16476;
if(t16475){
t16476 = t16474;
} else {
t16476 = 0;
}
t16445 = t16476;
} else {
t16442 = 0;
t16443 = 0;
t16444 = 0;
t16445 = 0;
}
float t16477 = (1-t16426);
float t16478 = (t16423*t16477);
float t16479 = (t16426+t16478);
float t16480 = (1-t16479);
float t16481 = (t16445*t16480);
float t16482 = (t16442*t16481);
float t16483 = (t16430+t16482);
float t16484 = (t115*t16398);
float t16485 = pow(t16413,float(2.5));
float t16486 = (t16484/t16485);
float t16487 = (t16486*t16396);
float t16488 = (t16395+t16487);
float t16489 = (t16396*u1.u4);
float t16490 = (t16488*t16489);
float t16491 = (t16398+t16490);
float t16492 = (t115*t16404);
float t16493 = (t16492/t16485);
float t16494 = (t16493*t16396);
float t16495 = (t16402+t16494);
float t16496 = (t16495*t16489);
float t16497 = (t16404+t16496);
float t16498 = (t115*t16410);
float t16499 = (t16498/t16485);
float t16500 = (t16499*t16396);
float t16501 = (t16408+t16500);
float t16502 = (t16501*t16489);
float t16503 = (t16410+t16502);
vec3 t16504 = vec3(t16491,t16497,t16503);
float t16505 = length(t16504);
float t16506 = (t16505*t16505);
bool t16507 = (t16506<1);
vec3 t16508 = vec3(t16398,t16404,t16410);
float t16509 = length(t16508);
float t16510 = (t16509*t16509);
bool t16511 = (t16510>1);
bool t16512 = (t16507&&t16511);
float t16513;
float t16514;
float t16515;
float t16516;
if(t16512){
t16513 = 0;
t16514 = 0;
t16515 = 0;
t16516 = 1;
} else {
t16513 = 0;
t16514 = 0;
t16515 = 0;
t16516 = 0;
}
float t16517 = (1-t16479);
float t16518 = (t16445*t16517);
float t16519 = (t16479+t16518);
float t16520 = (1-t16519);
float t16521 = (t16516*t16520);
float t16522 = (t16513*t16521);
float t16523 = (t16483+t16522);
bool t16524 = (t16404>0);
bool t16525 = (t16497>0);
bool t16526 = (!t16525);
bool t16527 = (t16524&&t16526);
bool t16528 = (!t16524);
bool t16529 = (t16525&&t16528);
bool t16530 = (t16527||t16529);
bool t16531 = (t16506<196);
bool t16532 = (t16506>float(6.76));
bool t16533 = (t16531&&t16532);
bool t16534 = (t16530&&t16533);
float t16535;
float t16536;
float t16537;
float t16538;
if(t16534){
float t16539 = (t16497/t16495);
float t16540 = (-t16539);
float t16541 = (t16540*t16488);
float t16542 = (t16491+t16541);
float t16543 = atan(t16542,t16503);
float t16544 = (u1.u0/30);
float t16545 = (t16543+t16544);
float t16546 = (2*3.1415927);
float t16547 = (t16545+t16546);
float t16548 = mod(t16547,2);
float t16549 = (t16548*3.1415927);
float t16550 = (t16549/t16546);
float t16551 = (t16540*t16495);
float t16552 = (t16497+t16551);
float t16553 = (t16540*t16501);
float t16554 = (t16503+t16553);
vec3 t16555 = vec3(t16542,t16552,t16554);
float t16556 = length(t16555);
float t16557 = (t16556*t16556);
float t16558 = sqrt(t16557);
float t16559 = (t16558-float(2.6));
float t16560 = (t16559/float(11.4));
vec4 t16561 = texture(s4,vec2(t16550,t16560));
t16535 = t16561.x;
t16536 = t16561.y;
t16537 = t16561.z;
vec3 t16562 = vec3(t16561.x,t16561.y,t16561.z);
float t16563 = length(t16562);
float t16564 = (t16563*t16563);
float t16565 = (t16564/float(3.0));
bool t16566 = (t16565<=1);
float t16567;
if(t16566){
t16567 = t16565;
} else {
t16567 = 1;
}
bool t16568 = (t16567>=0);
float t16569;
if(t16568){
t16569 = t16567;
} else {
t16569 = 0;
}
t16538 = t16569;
} else {
t16535 = 0;
t16536 = 0;
t16537 = 0;
t16538 = 0;
}
float t16570 = (1-t16519);
float t16571 = (t16516*t16570);
float t16572 = (t16519+t16571);
float t16573 = (1-t16572);
float t16574 = (t16538*t16573);
float t16575 = (t16535*t16574);
float t16576 = (t16523+t16575);
float t16577 = (t115*t16491);
float t16578 = pow(t16506,float(2.5));
float t16579 = (t16577/t16578);
float t16580 = (t16579*t16489);
float t16581 = (t16488+t16580);
float t16582 = (t16489*u1.u4);
float t16583 = (t16581*t16582);
float t16584 = (t16491+t16583);
float t16585 = (t115*t16497);
float t16586 = (t16585/t16578);
float t16587 = (t16586*t16489);
float t16588 = (t16495+t16587);
float t16589 = (t16588*t16582);
float t16590 = (t16497+t16589);
float t16591 = (t115*t16503);
float t16592 = (t16591/t16578);
float t16593 = (t16592*t16489);
float t16594 = (t16501+t16593);
float t16595 = (t16594*t16582);
float t16596 = (t16503+t16595);
vec3 t16597 = vec3(t16584,t16590,t16596);
float t16598 = length(t16597);
float t16599 = (t16598*t16598);
bool t16600 = (t16599<1);
vec3 t16601 = vec3(t16491,t16497,t16503);
float t16602 = length(t16601);
float t16603 = (t16602*t16602);
bool t16604 = (t16603>1);
bool t16605 = (t16600&&t16604);
float t16606;
float t16607;
float t16608;
float t16609;
if(t16605){
t16606 = 0;
t16607 = 0;
t16608 = 0;
t16609 = 1;
} else {
t16606 = 0;
t16607 = 0;
t16608 = 0;
t16609 = 0;
}
float t16610 = (1-t16572);
float t16611 = (t16538*t16610);
float t16612 = (t16572+t16611);
float t16613 = (1-t16612);
float t16614 = (t16609*t16613);
float t16615 = (t16606*t16614);
float t16616 = (t16576+t16615);
bool t16617 = (t16497>0);
bool t16618 = (t16590>0);
bool t16619 = (!t16618);
bool t16620 = (t16617&&t16619);
bool t16621 = (!t16617);
bool t16622 = (t16618&&t16621);
bool t16623 = (t16620||t16622);
bool t16624 = (t16599<196);
bool t16625 = (t16599>float(6.76));
bool t16626 = (t16624&&t16625);
bool t16627 = (t16623&&t16626);
float t16628;
float t16629;
float t16630;
float t16631;
if(t16627){
float t16632 = (t16590/t16588);
float t16633 = (-t16632);
float t16634 = (t16633*t16581);
float t16635 = (t16584+t16634);
float t16636 = atan(t16635,t16596);
float t16637 = (u1.u0/30);
float t16638 = (t16636+t16637);
float t16639 = (2*3.1415927);
float t16640 = (t16638+t16639);
float t16641 = mod(t16640,2);
float t16642 = (t16641*3.1415927);
float t16643 = (t16642/t16639);
float t16644 = (t16633*t16588);
float t16645 = (t16590+t16644);
float t16646 = (t16633*t16594);
float t16647 = (t16596+t16646);
vec3 t16648 = vec3(t16635,t16645,t16647);
float t16649 = length(t16648);
float t16650 = (t16649*t16649);
float t16651 = sqrt(t16650);
float t16652 = (t16651-float(2.6));
float t16653 = (t16652/float(11.4));
vec4 t16654 = texture(s4,vec2(t16643,t16653));
t16628 = t16654.x;
t16629 = t16654.y;
t16630 = t16654.z;
vec3 t16655 = vec3(t16654.x,t16654.y,t16654.z);
float t16656 = length(t16655);
float t16657 = (t16656*t16656);
float t16658 = (t16657/float(3.0));
bool t16659 = (t16658<=1);
float t16660;
if(t16659){
t16660 = t16658;
} else {
t16660 = 1;
}
bool t16661 = (t16660>=0);
float t16662;
if(t16661){
t16662 = t16660;
} else {
t16662 = 0;
}
t16631 = t16662;
} else {
t16628 = 0;
t16629 = 0;
t16630 = 0;
t16631 = 0;
}
float t16663 = (1-t16612);
float t16664 = (t16609*t16663);
float t16665 = (t16612+t16664);
float t16666 = (1-t16665);
float t16667 = (t16631*t16666);
float t16668 = (t16628*t16667);
float t16669 = (t16616+t16668);
float t16670 = (t115*t16584);
float t16671 = pow(t16599,float(2.5));
float t16672 = (t16670/t16671);
float t16673 = (t16672*t16582);
float t16674 = (t16581+t16673);
float t16675 = (t16582*u1.u4);
float t16676 = (t16674*t16675);
float t16677 = (t16584+t16676);
float t16678 = (t115*t16590);
float t16679 = (t16678/t16671);
float t16680 = (t16679*t16582);
float t16681 = (t16588+t16680);
float t16682 = (t16681*t16675);
float t16683 = (t16590+t16682);
float t16684 = (t115*t16596);
float t16685 = (t16684/t16671);
float t16686 = (t16685*t16582);
float t16687 = (t16594+t16686);
float t16688 = (t16687*t16675);
float t16689 = (t16596+t16688);
vec3 t16690 = vec3(t16677,t16683,t16689);
float t16691 = length(t16690);
float t16692 = (t16691*t16691);
bool t16693 = (t16692<1);
vec3 t16694 = vec3(t16584,t16590,t16596);
float t16695 = length(t16694);
float t16696 = (t16695*t16695);
bool t16697 = (t16696>1);
bool t16698 = (t16693&&t16697);
float t16699;
float t16700;
float t16701;
float t16702;
if(t16698){
t16699 = 0;
t16700 = 0;
t16701 = 0;
t16702 = 1;
} else {
t16699 = 0;
t16700 = 0;
t16701 = 0;
t16702 = 0;
}
float t16703 = (1-t16665);
float t16704 = (t16631*t16703);
float t16705 = (t16665+t16704);
float t16706 = (1-t16705);
float t16707 = (t16702*t16706);
float t16708 = (t16699*t16707);
float t16709 = (t16669+t16708);
bool t16710 = (t16590>0);
bool t16711 = (t16683>0);
bool t16712 = (!t16711);
bool t16713 = (t16710&&t16712);
bool t16714 = (!t16710);
bool t16715 = (t16711&&t16714);
bool t16716 = (t16713||t16715);
bool t16717 = (t16692<196);
bool t16718 = (t16692>float(6.76));
bool t16719 = (t16717&&t16718);
bool t16720 = (t16716&&t16719);
float t16721;
float t16722;
float t16723;
float t16724;
if(t16720){
float t16725 = (t16683/t16681);
float t16726 = (-t16725);
float t16727 = (t16726*t16674);
float t16728 = (t16677+t16727);
float t16729 = atan(t16728,t16689);
float t16730 = (u1.u0/30);
float t16731 = (t16729+t16730);
float t16732 = (2*3.1415927);
float t16733 = (t16731+t16732);
float t16734 = mod(t16733,2);
float t16735 = (t16734*3.1415927);
float t16736 = (t16735/t16732);
float t16737 = (t16726*t16681);
float t16738 = (t16683+t16737);
float t16739 = (t16726*t16687);
float t16740 = (t16689+t16739);
vec3 t16741 = vec3(t16728,t16738,t16740);
float t16742 = length(t16741);
float t16743 = (t16742*t16742);
float t16744 = sqrt(t16743);
float t16745 = (t16744-float(2.6));
float t16746 = (t16745/float(11.4));
vec4 t16747 = texture(s4,vec2(t16736,t16746));
t16721 = t16747.x;
t16722 = t16747.y;
t16723 = t16747.z;
vec3 t16748 = vec3(t16747.x,t16747.y,t16747.z);
float t16749 = length(t16748);
float t16750 = (t16749*t16749);
float t16751 = (t16750/float(3.0));
bool t16752 = (t16751<=1);
float t16753;
if(t16752){
t16753 = t16751;
} else {
t16753 = 1;
}
bool t16754 = (t16753>=0);
float t16755;
if(t16754){
t16755 = t16753;
} else {
t16755 = 0;
}
t16724 = t16755;
} else {
t16721 = 0;
t16722 = 0;
t16723 = 0;
t16724 = 0;
}
float t16756 = (1-t16705);
float t16757 = (t16702*t16756);
float t16758 = (t16705+t16757);
float t16759 = (1-t16758);
float t16760 = (t16724*t16759);
float t16761 = (t16721*t16760);
float t16762 = (t16709+t16761);
float t16763 = (t115*t16677);
float t16764 = pow(t16692,float(2.5));
float t16765 = (t16763/t16764);
float t16766 = (t16765*t16675);
float t16767 = (t16674+t16766);
float t16768 = (t16675*u1.u4);
float t16769 = (t16767*t16768);
float t16770 = (t16677+t16769);
float t16771 = (t115*t16683);
float t16772 = (t16771/t16764);
float t16773 = (t16772*t16675);
float t16774 = (t16681+t16773);
float t16775 = (t16774*t16768);
float t16776 = (t16683+t16775);
float t16777 = (t115*t16689);
float t16778 = (t16777/t16764);
float t16779 = (t16778*t16675);
float t16780 = (t16687+t16779);
float t16781 = (t16780*t16768);
float t16782 = (t16689+t16781);
vec3 t16783 = vec3(t16770,t16776,t16782);
float t16784 = length(t16783);
float t16785 = (t16784*t16784);
bool t16786 = (t16785<1);
vec3 t16787 = vec3(t16677,t16683,t16689);
float t16788 = length(t16787);
float t16789 = (t16788*t16788);
bool t16790 = (t16789>1);
bool t16791 = (t16786&&t16790);
float t16792;
float t16793;
float t16794;
float t16795;
if(t16791){
t16792 = 0;
t16793 = 0;
t16794 = 0;
t16795 = 1;
} else {
t16792 = 0;
t16793 = 0;
t16794 = 0;
t16795 = 0;
}
float t16796 = (1-t16758);
float t16797 = (t16724*t16796);
float t16798 = (t16758+t16797);
float t16799 = (1-t16798);
float t16800 = (t16795*t16799);
float t16801 = (t16792*t16800);
float t16802 = (t16762+t16801);
bool t16803 = (t16683>0);
bool t16804 = (t16776>0);
bool t16805 = (!t16804);
bool t16806 = (t16803&&t16805);
bool t16807 = (!t16803);
bool t16808 = (t16804&&t16807);
bool t16809 = (t16806||t16808);
bool t16810 = (t16785<196);
bool t16811 = (t16785>float(6.76));
bool t16812 = (t16810&&t16811);
bool t16813 = (t16809&&t16812);
float t16814;
float t16815;
float t16816;
float t16817;
if(t16813){
float t16818 = (t16776/t16774);
float t16819 = (-t16818);
float t16820 = (t16819*t16767);
float t16821 = (t16770+t16820);
float t16822 = atan(t16821,t16782);
float t16823 = (u1.u0/30);
float t16824 = (t16822+t16823);
float t16825 = (2*3.1415927);
float t16826 = (t16824+t16825);
float t16827 = mod(t16826,2);
float t16828 = (t16827*3.1415927);
float t16829 = (t16828/t16825);
float t16830 = (t16819*t16774);
float t16831 = (t16776+t16830);
float t16832 = (t16819*t16780);
float t16833 = (t16782+t16832);
vec3 t16834 = vec3(t16821,t16831,t16833);
float t16835 = length(t16834);
float t16836 = (t16835*t16835);
float t16837 = sqrt(t16836);
float t16838 = (t16837-float(2.6));
float t16839 = (t16838/float(11.4));
vec4 t16840 = texture(s4,vec2(t16829,t16839));
t16814 = t16840.x;
t16815 = t16840.y;
t16816 = t16840.z;
vec3 t16841 = vec3(t16840.x,t16840.y,t16840.z);
float t16842 = length(t16841);
float t16843 = (t16842*t16842);
float t16844 = (t16843/float(3.0));
bool t16845 = (t16844<=1);
float t16846;
if(t16845){
t16846 = t16844;
} else {
t16846 = 1;
}
bool t16847 = (t16846>=0);
float t16848;
if(t16847){
t16848 = t16846;
} else {
t16848 = 0;
}
t16817 = t16848;
} else {
t16814 = 0;
t16815 = 0;
t16816 = 0;
t16817 = 0;
}
float t16849 = (1-t16798);
float t16850 = (t16795*t16849);
float t16851 = (t16798+t16850);
float t16852 = (1-t16851);
float t16853 = (t16817*t16852);
float t16854 = (t16814*t16853);
float t16855 = (t16802+t16854);
float t16856 = (t115*t16770);
float t16857 = pow(t16785,float(2.5));
float t16858 = (t16856/t16857);
float t16859 = (t16858*t16768);
float t16860 = (t16767+t16859);
float t16861 = (t16768*u1.u4);
float t16862 = (t16860*t16861);
float t16863 = (t16770+t16862);
float t16864 = (t115*t16776);
float t16865 = (t16864/t16857);
float t16866 = (t16865*t16768);
float t16867 = (t16774+t16866);
float t16868 = (t16867*t16861);
float t16869 = (t16776+t16868);
float t16870 = (t115*t16782);
float t16871 = (t16870/t16857);
float t16872 = (t16871*t16768);
float t16873 = (t16780+t16872);
float t16874 = (t16873*t16861);
float t16875 = (t16782+t16874);
vec3 t16876 = vec3(t16863,t16869,t16875);
float t16877 = length(t16876);
float t16878 = (t16877*t16877);
bool t16879 = (t16878<1);
vec3 t16880 = vec3(t16770,t16776,t16782);
float t16881 = length(t16880);
float t16882 = (t16881*t16881);
bool t16883 = (t16882>1);
bool t16884 = (t16879&&t16883);
float t16885;
float t16886;
float t16887;
float t16888;
if(t16884){
t16885 = 0;
t16886 = 0;
t16887 = 0;
t16888 = 1;
} else {
t16885 = 0;
t16886 = 0;
t16887 = 0;
t16888 = 0;
}
float t16889 = (1-t16851);
float t16890 = (t16817*t16889);
float t16891 = (t16851+t16890);
float t16892 = (1-t16891);
float t16893 = (t16888*t16892);
float t16894 = (t16885*t16893);
float t16895 = (t16855+t16894);
bool t16896 = (t16776>0);
bool t16897 = (t16869>0);
bool t16898 = (!t16897);
bool t16899 = (t16896&&t16898);
bool t16900 = (!t16896);
bool t16901 = (t16897&&t16900);
bool t16902 = (t16899||t16901);
bool t16903 = (t16878<196);
bool t16904 = (t16878>float(6.76));
bool t16905 = (t16903&&t16904);
bool t16906 = (t16902&&t16905);
float t16907;
float t16908;
float t16909;
float t16910;
if(t16906){
float t16911 = (t16869/t16867);
float t16912 = (-t16911);
float t16913 = (t16912*t16860);
float t16914 = (t16863+t16913);
float t16915 = atan(t16914,t16875);
float t16916 = (u1.u0/30);
float t16917 = (t16915+t16916);
float t16918 = (2*3.1415927);
float t16919 = (t16917+t16918);
float t16920 = mod(t16919,2);
float t16921 = (t16920*3.1415927);
float t16922 = (t16921/t16918);
float t16923 = (t16912*t16867);
float t16924 = (t16869+t16923);
float t16925 = (t16912*t16873);
float t16926 = (t16875+t16925);
vec3 t16927 = vec3(t16914,t16924,t16926);
float t16928 = length(t16927);
float t16929 = (t16928*t16928);
float t16930 = sqrt(t16929);
float t16931 = (t16930-float(2.6));
float t16932 = (t16931/float(11.4));
vec4 t16933 = texture(s4,vec2(t16922,t16932));
t16907 = t16933.x;
t16908 = t16933.y;
t16909 = t16933.z;
vec3 t16934 = vec3(t16933.x,t16933.y,t16933.z);
float t16935 = length(t16934);
float t16936 = (t16935*t16935);
float t16937 = (t16936/float(3.0));
bool t16938 = (t16937<=1);
float t16939;
if(t16938){
t16939 = t16937;
} else {
t16939 = 1;
}
bool t16940 = (t16939>=0);
float t16941;
if(t16940){
t16941 = t16939;
} else {
t16941 = 0;
}
t16910 = t16941;
} else {
t16907 = 0;
t16908 = 0;
t16909 = 0;
t16910 = 0;
}
float t16942 = (1-t16891);
float t16943 = (t16888*t16942);
float t16944 = (t16891+t16943);
float t16945 = (1-t16944);
float t16946 = (t16910*t16945);
float t16947 = (t16907*t16946);
float t16948 = (t16895+t16947);
float t16949 = (t115*t16863);
float t16950 = pow(t16878,float(2.5));
float t16951 = (t16949/t16950);
float t16952 = (t16951*t16861);
float t16953 = (t16860+t16952);
float t16954 = (t16861*u1.u4);
float t16955 = (t16953*t16954);
float t16956 = (t16863+t16955);
float t16957 = (t115*t16869);
float t16958 = (t16957/t16950);
float t16959 = (t16958*t16861);
float t16960 = (t16867+t16959);
float t16961 = (t16960*t16954);
float t16962 = (t16869+t16961);
float t16963 = (t115*t16875);
float t16964 = (t16963/t16950);
float t16965 = (t16964*t16861);
float t16966 = (t16873+t16965);
float t16967 = (t16966*t16954);
float t16968 = (t16875+t16967);
vec3 t16969 = vec3(t16956,t16962,t16968);
float t16970 = length(t16969);
float t16971 = (t16970*t16970);
bool t16972 = (t16971<1);
vec3 t16973 = vec3(t16863,t16869,t16875);
float t16974 = length(t16973);
float t16975 = (t16974*t16974);
bool t16976 = (t16975>1);
bool t16977 = (t16972&&t16976);
float t16978;
float t16979;
float t16980;
float t16981;
if(t16977){
t16978 = 0;
t16979 = 0;
t16980 = 0;
t16981 = 1;
} else {
t16978 = 0;
t16979 = 0;
t16980 = 0;
t16981 = 0;
}
float t16982 = (1-t16944);
float t16983 = (t16910*t16982);
float t16984 = (t16944+t16983);
float t16985 = (1-t16984);
float t16986 = (t16981*t16985);
float t16987 = (t16978*t16986);
float t16988 = (t16948+t16987);
bool t16989 = (t16869>0);
bool t16990 = (t16962>0);
bool t16991 = (!t16990);
bool t16992 = (t16989&&t16991);
bool t16993 = (!t16989);
bool t16994 = (t16990&&t16993);
bool t16995 = (t16992||t16994);
bool t16996 = (t16971<196);
bool t16997 = (t16971>float(6.76));
bool t16998 = (t16996&&t16997);
bool t16999 = (t16995&&t16998);
float t17000;
float t17001;
float t17002;
float t17003;
if(t16999){
float t17004 = (t16962/t16960);
float t17005 = (-t17004);
float t17006 = (t17005*t16953);
float t17007 = (t16956+t17006);
float t17008 = atan(t17007,t16968);
float t17009 = (u1.u0/30);
float t17010 = (t17008+t17009);
float t17011 = (2*3.1415927);
float t17012 = (t17010+t17011);
float t17013 = mod(t17012,2);
float t17014 = (t17013*3.1415927);
float t17015 = (t17014/t17011);
float t17016 = (t17005*t16960);
float t17017 = (t16962+t17016);
float t17018 = (t17005*t16966);
float t17019 = (t16968+t17018);
vec3 t17020 = vec3(t17007,t17017,t17019);
float t17021 = length(t17020);
float t17022 = (t17021*t17021);
float t17023 = sqrt(t17022);
float t17024 = (t17023-float(2.6));
float t17025 = (t17024/float(11.4));
vec4 t17026 = texture(s4,vec2(t17015,t17025));
t17000 = t17026.x;
t17001 = t17026.y;
t17002 = t17026.z;
vec3 t17027 = vec3(t17026.x,t17026.y,t17026.z);
float t17028 = length(t17027);
float t17029 = (t17028*t17028);
float t17030 = (t17029/float(3.0));
bool t17031 = (t17030<=1);
float t17032;
if(t17031){
t17032 = t17030;
} else {
t17032 = 1;
}
bool t17033 = (t17032>=0);
float t17034;
if(t17033){
t17034 = t17032;
} else {
t17034 = 0;
}
t17003 = t17034;
} else {
t17000 = 0;
t17001 = 0;
t17002 = 0;
t17003 = 0;
}
float t17035 = (1-t16984);
float t17036 = (t16981*t17035);
float t17037 = (t16984+t17036);
float t17038 = (1-t17037);
float t17039 = (t17003*t17038);
float t17040 = (t17000*t17039);
float t17041 = (t16988+t17040);
float t17042 = (t115*t16956);
float t17043 = pow(t16971,float(2.5));
float t17044 = (t17042/t17043);
float t17045 = (t17044*t16954);
float t17046 = (t16953+t17045);
float t17047 = (t16954*u1.u4);
float t17048 = (t17046*t17047);
float t17049 = (t16956+t17048);
float t17050 = (t115*t16962);
float t17051 = (t17050/t17043);
float t17052 = (t17051*t16954);
float t17053 = (t16960+t17052);
float t17054 = (t17053*t17047);
float t17055 = (t16962+t17054);
float t17056 = (t115*t16968);
float t17057 = (t17056/t17043);
float t17058 = (t17057*t16954);
float t17059 = (t16966+t17058);
float t17060 = (t17059*t17047);
float t17061 = (t16968+t17060);
vec3 t17062 = vec3(t17049,t17055,t17061);
float t17063 = length(t17062);
float t17064 = (t17063*t17063);
bool t17065 = (t17064<1);
vec3 t17066 = vec3(t16956,t16962,t16968);
float t17067 = length(t17066);
float t17068 = (t17067*t17067);
bool t17069 = (t17068>1);
bool t17070 = (t17065&&t17069);
float t17071;
float t17072;
float t17073;
float t17074;
if(t17070){
t17071 = 0;
t17072 = 0;
t17073 = 0;
t17074 = 1;
} else {
t17071 = 0;
t17072 = 0;
t17073 = 0;
t17074 = 0;
}
float t17075 = (1-t17037);
float t17076 = (t17003*t17075);
float t17077 = (t17037+t17076);
float t17078 = (1-t17077);
float t17079 = (t17074*t17078);
float t17080 = (t17071*t17079);
float t17081 = (t17041+t17080);
bool t17082 = (t16962>0);
bool t17083 = (t17055>0);
bool t17084 = (!t17083);
bool t17085 = (t17082&&t17084);
bool t17086 = (!t17082);
bool t17087 = (t17083&&t17086);
bool t17088 = (t17085||t17087);
bool t17089 = (t17064<196);
bool t17090 = (t17064>float(6.76));
bool t17091 = (t17089&&t17090);
bool t17092 = (t17088&&t17091);
float t17093;
float t17094;
float t17095;
float t17096;
if(t17092){
float t17097 = (t17055/t17053);
float t17098 = (-t17097);
float t17099 = (t17098*t17046);
float t17100 = (t17049+t17099);
float t17101 = atan(t17100,t17061);
float t17102 = (u1.u0/30);
float t17103 = (t17101+t17102);
float t17104 = (2*3.1415927);
float t17105 = (t17103+t17104);
float t17106 = mod(t17105,2);
float t17107 = (t17106*3.1415927);
float t17108 = (t17107/t17104);
float t17109 = (t17098*t17053);
float t17110 = (t17055+t17109);
float t17111 = (t17098*t17059);
float t17112 = (t17061+t17111);
vec3 t17113 = vec3(t17100,t17110,t17112);
float t17114 = length(t17113);
float t17115 = (t17114*t17114);
float t17116 = sqrt(t17115);
float t17117 = (t17116-float(2.6));
float t17118 = (t17117/float(11.4));
vec4 t17119 = texture(s4,vec2(t17108,t17118));
t17093 = t17119.x;
t17094 = t17119.y;
t17095 = t17119.z;
vec3 t17120 = vec3(t17119.x,t17119.y,t17119.z);
float t17121 = length(t17120);
float t17122 = (t17121*t17121);
float t17123 = (t17122/float(3.0));
bool t17124 = (t17123<=1);
float t17125;
if(t17124){
t17125 = t17123;
} else {
t17125 = 1;
}
bool t17126 = (t17125>=0);
float t17127;
if(t17126){
t17127 = t17125;
} else {
t17127 = 0;
}
t17096 = t17127;
} else {
t17093 = 0;
t17094 = 0;
t17095 = 0;
t17096 = 0;
}
float t17128 = (1-t17077);
float t17129 = (t17074*t17128);
float t17130 = (t17077+t17129);
float t17131 = (1-t17130);
float t17132 = (t17096*t17131);
float t17133 = (t17093*t17132);
float t17134 = (t17081+t17133);
float t17135 = (t115*t17049);
float t17136 = pow(t17064,float(2.5));
float t17137 = (t17135/t17136);
float t17138 = (t17137*t17047);
float t17139 = (t17046+t17138);
float t17140 = (t17047*u1.u4);
float t17141 = (t17139*t17140);
float t17142 = (t17049+t17141);
float t17143 = (t115*t17055);
float t17144 = (t17143/t17136);
float t17145 = (t17144*t17047);
float t17146 = (t17053+t17145);
float t17147 = (t17146*t17140);
float t17148 = (t17055+t17147);
float t17149 = (t115*t17061);
float t17150 = (t17149/t17136);
float t17151 = (t17150*t17047);
float t17152 = (t17059+t17151);
float t17153 = (t17152*t17140);
float t17154 = (t17061+t17153);
vec3 t17155 = vec3(t17142,t17148,t17154);
float t17156 = length(t17155);
float t17157 = (t17156*t17156);
bool t17158 = (t17157<1);
vec3 t17159 = vec3(t17049,t17055,t17061);
float t17160 = length(t17159);
float t17161 = (t17160*t17160);
bool t17162 = (t17161>1);
bool t17163 = (t17158&&t17162);
float t17164;
float t17165;
float t17166;
float t17167;
if(t17163){
t17164 = 0;
t17165 = 0;
t17166 = 0;
t17167 = 1;
} else {
t17164 = 0;
t17165 = 0;
t17166 = 0;
t17167 = 0;
}
float t17168 = (1-t17130);
float t17169 = (t17096*t17168);
float t17170 = (t17130+t17169);
float t17171 = (1-t17170);
float t17172 = (t17167*t17171);
float t17173 = (t17164*t17172);
float t17174 = (t17134+t17173);
bool t17175 = (t17055>0);
bool t17176 = (t17148>0);
bool t17177 = (!t17176);
bool t17178 = (t17175&&t17177);
bool t17179 = (!t17175);
bool t17180 = (t17176&&t17179);
bool t17181 = (t17178||t17180);
bool t17182 = (t17157<196);
bool t17183 = (t17157>float(6.76));
bool t17184 = (t17182&&t17183);
bool t17185 = (t17181&&t17184);
float t17186;
float t17187;
float t17188;
float t17189;
if(t17185){
float t17190 = (t17148/t17146);
float t17191 = (-t17190);
float t17192 = (t17191*t17139);
float t17193 = (t17142+t17192);
float t17194 = atan(t17193,t17154);
float t17195 = (u1.u0/30);
float t17196 = (t17194+t17195);
float t17197 = (2*3.1415927);
float t17198 = (t17196+t17197);
float t17199 = mod(t17198,2);
float t17200 = (t17199*3.1415927);
float t17201 = (t17200/t17197);
float t17202 = (t17191*t17146);
float t17203 = (t17148+t17202);
float t17204 = (t17191*t17152);
float t17205 = (t17154+t17204);
vec3 t17206 = vec3(t17193,t17203,t17205);
float t17207 = length(t17206);
float t17208 = (t17207*t17207);
float t17209 = sqrt(t17208);
float t17210 = (t17209-float(2.6));
float t17211 = (t17210/float(11.4));
vec4 t17212 = texture(s4,vec2(t17201,t17211));
t17186 = t17212.x;
t17187 = t17212.y;
t17188 = t17212.z;
vec3 t17213 = vec3(t17212.x,t17212.y,t17212.z);
float t17214 = length(t17213);
float t17215 = (t17214*t17214);
float t17216 = (t17215/float(3.0));
bool t17217 = (t17216<=1);
float t17218;
if(t17217){
t17218 = t17216;
} else {
t17218 = 1;
}
bool t17219 = (t17218>=0);
float t17220;
if(t17219){
t17220 = t17218;
} else {
t17220 = 0;
}
t17189 = t17220;
} else {
t17186 = 0;
t17187 = 0;
t17188 = 0;
t17189 = 0;
}
float t17221 = (1-t17170);
float t17222 = (t17167*t17221);
float t17223 = (t17170+t17222);
float t17224 = (1-t17223);
float t17225 = (t17189*t17224);
float t17226 = (t17186*t17225);
float t17227 = (t17174+t17226);
float t17228 = (t115*t17142);
float t17229 = pow(t17157,float(2.5));
float t17230 = (t17228/t17229);
float t17231 = (t17230*t17140);
float t17232 = (t17139+t17231);
float t17233 = (t17140*u1.u4);
float t17234 = (t17232*t17233);
float t17235 = (t17142+t17234);
float t17236 = (t115*t17148);
float t17237 = (t17236/t17229);
float t17238 = (t17237*t17140);
float t17239 = (t17146+t17238);
float t17240 = (t17239*t17233);
float t17241 = (t17148+t17240);
float t17242 = (t115*t17154);
float t17243 = (t17242/t17229);
float t17244 = (t17243*t17140);
float t17245 = (t17152+t17244);
float t17246 = (t17245*t17233);
float t17247 = (t17154+t17246);
vec3 t17248 = vec3(t17235,t17241,t17247);
float t17249 = length(t17248);
float t17250 = (t17249*t17249);
bool t17251 = (t17250<1);
vec3 t17252 = vec3(t17142,t17148,t17154);
float t17253 = length(t17252);
float t17254 = (t17253*t17253);
bool t17255 = (t17254>1);
bool t17256 = (t17251&&t17255);
float t17257;
float t17258;
float t17259;
float t17260;
if(t17256){
t17257 = 0;
t17258 = 0;
t17259 = 0;
t17260 = 1;
} else {
t17257 = 0;
t17258 = 0;
t17259 = 0;
t17260 = 0;
}
float t17261 = (1-t17223);
float t17262 = (t17189*t17261);
float t17263 = (t17223+t17262);
float t17264 = (1-t17263);
float t17265 = (t17260*t17264);
float t17266 = (t17257*t17265);
float t17267 = (t17227+t17266);
bool t17268 = (t17148>0);
bool t17269 = (t17241>0);
bool t17270 = (!t17269);
bool t17271 = (t17268&&t17270);
bool t17272 = (!t17268);
bool t17273 = (t17269&&t17272);
bool t17274 = (t17271||t17273);
bool t17275 = (t17250<196);
bool t17276 = (t17250>float(6.76));
bool t17277 = (t17275&&t17276);
bool t17278 = (t17274&&t17277);
float t17279;
float t17280;
float t17281;
float t17282;
if(t17278){
float t17283 = (t17241/t17239);
float t17284 = (-t17283);
float t17285 = (t17284*t17232);
float t17286 = (t17235+t17285);
float t17287 = atan(t17286,t17247);
float t17288 = (u1.u0/30);
float t17289 = (t17287+t17288);
float t17290 = (2*3.1415927);
float t17291 = (t17289+t17290);
float t17292 = mod(t17291,2);
float t17293 = (t17292*3.1415927);
float t17294 = (t17293/t17290);
float t17295 = (t17284*t17239);
float t17296 = (t17241+t17295);
float t17297 = (t17284*t17245);
float t17298 = (t17247+t17297);
vec3 t17299 = vec3(t17286,t17296,t17298);
float t17300 = length(t17299);
float t17301 = (t17300*t17300);
float t17302 = sqrt(t17301);
float t17303 = (t17302-float(2.6));
float t17304 = (t17303/float(11.4));
vec4 t17305 = texture(s4,vec2(t17294,t17304));
t17279 = t17305.x;
t17280 = t17305.y;
t17281 = t17305.z;
vec3 t17306 = vec3(t17305.x,t17305.y,t17305.z);
float t17307 = length(t17306);
float t17308 = (t17307*t17307);
float t17309 = (t17308/float(3.0));
bool t17310 = (t17309<=1);
float t17311;
if(t17310){
t17311 = t17309;
} else {
t17311 = 1;
}
bool t17312 = (t17311>=0);
float t17313;
if(t17312){
t17313 = t17311;
} else {
t17313 = 0;
}
t17282 = t17313;
} else {
t17279 = 0;
t17280 = 0;
t17281 = 0;
t17282 = 0;
}
float t17314 = (1-t17263);
float t17315 = (t17260*t17314);
float t17316 = (t17263+t17315);
float t17317 = (1-t17316);
float t17318 = (t17282*t17317);
float t17319 = (t17279*t17318);
float t17320 = (t17267+t17319);
float t17321 = (t115*t17235);
float t17322 = pow(t17250,float(2.5));
float t17323 = (t17321/t17322);
float t17324 = (t17323*t17233);
float t17325 = (t17232+t17324);
float t17326 = (t17233*u1.u4);
float t17327 = (t17325*t17326);
float t17328 = (t17235+t17327);
float t17329 = (t115*t17241);
float t17330 = (t17329/t17322);
float t17331 = (t17330*t17233);
float t17332 = (t17239+t17331);
float t17333 = (t17332*t17326);
float t17334 = (t17241+t17333);
float t17335 = (t115*t17247);
float t17336 = (t17335/t17322);
float t17337 = (t17336*t17233);
float t17338 = (t17245+t17337);
float t17339 = (t17338*t17326);
float t17340 = (t17247+t17339);
vec3 t17341 = vec3(t17328,t17334,t17340);
float t17342 = length(t17341);
float t17343 = (t17342*t17342);
bool t17344 = (t17343<1);
vec3 t17345 = vec3(t17235,t17241,t17247);
float t17346 = length(t17345);
float t17347 = (t17346*t17346);
bool t17348 = (t17347>1);
bool t17349 = (t17344&&t17348);
float t17350;
float t17351;
float t17352;
float t17353;
if(t17349){
t17350 = 0;
t17351 = 0;
t17352 = 0;
t17353 = 1;
} else {
t17350 = 0;
t17351 = 0;
t17352 = 0;
t17353 = 0;
}
float t17354 = (1-t17316);
float t17355 = (t17282*t17354);
float t17356 = (t17316+t17355);
float t17357 = (1-t17356);
float t17358 = (t17353*t17357);
float t17359 = (t17350*t17358);
float t17360 = (t17320+t17359);
bool t17361 = (t17241>0);
bool t17362 = (t17334>0);
bool t17363 = (!t17362);
bool t17364 = (t17361&&t17363);
bool t17365 = (!t17361);
bool t17366 = (t17362&&t17365);
bool t17367 = (t17364||t17366);
bool t17368 = (t17343<196);
bool t17369 = (t17343>float(6.76));
bool t17370 = (t17368&&t17369);
bool t17371 = (t17367&&t17370);
float t17372;
float t17373;
float t17374;
float t17375;
if(t17371){
float t17376 = (t17334/t17332);
float t17377 = (-t17376);
float t17378 = (t17377*t17325);
float t17379 = (t17328+t17378);
float t17380 = atan(t17379,t17340);
float t17381 = (u1.u0/30);
float t17382 = (t17380+t17381);
float t17383 = (2*3.1415927);
float t17384 = (t17382+t17383);
float t17385 = mod(t17384,2);
float t17386 = (t17385*3.1415927);
float t17387 = (t17386/t17383);
float t17388 = (t17377*t17332);
float t17389 = (t17334+t17388);
float t17390 = (t17377*t17338);
float t17391 = (t17340+t17390);
vec3 t17392 = vec3(t17379,t17389,t17391);
float t17393 = length(t17392);
float t17394 = (t17393*t17393);
float t17395 = sqrt(t17394);
float t17396 = (t17395-float(2.6));
float t17397 = (t17396/float(11.4));
vec4 t17398 = texture(s4,vec2(t17387,t17397));
t17372 = t17398.x;
t17373 = t17398.y;
t17374 = t17398.z;
vec3 t17399 = vec3(t17398.x,t17398.y,t17398.z);
float t17400 = length(t17399);
float t17401 = (t17400*t17400);
float t17402 = (t17401/float(3.0));
bool t17403 = (t17402<=1);
float t17404;
if(t17403){
t17404 = t17402;
} else {
t17404 = 1;
}
bool t17405 = (t17404>=0);
float t17406;
if(t17405){
t17406 = t17404;
} else {
t17406 = 0;
}
t17375 = t17406;
} else {
t17372 = 0;
t17373 = 0;
t17374 = 0;
t17375 = 0;
}
float t17407 = (1-t17356);
float t17408 = (t17353*t17407);
float t17409 = (t17356+t17408);
float t17410 = (1-t17409);
float t17411 = (t17375*t17410);
float t17412 = (t17372*t17411);
float t17413 = (t17360+t17412);
float t17414 = (t115*t17328);
float t17415 = pow(t17343,float(2.5));
float t17416 = (t17414/t17415);
float t17417 = (t17416*t17326);
float t17418 = (t17325+t17417);
float t17419 = (t17326*u1.u4);
float t17420 = (t17418*t17419);
float t17421 = (t17328+t17420);
float t17422 = (t115*t17334);
float t17423 = (t17422/t17415);
float t17424 = (t17423*t17326);
float t17425 = (t17332+t17424);
float t17426 = (t17425*t17419);
float t17427 = (t17334+t17426);
float t17428 = (t115*t17340);
float t17429 = (t17428/t17415);
float t17430 = (t17429*t17326);
float t17431 = (t17338+t17430);
float t17432 = (t17431*t17419);
float t17433 = (t17340+t17432);
vec3 t17434 = vec3(t17421,t17427,t17433);
float t17435 = length(t17434);
float t17436 = (t17435*t17435);
bool t17437 = (t17436<1);
vec3 t17438 = vec3(t17328,t17334,t17340);
float t17439 = length(t17438);
float t17440 = (t17439*t17439);
bool t17441 = (t17440>1);
bool t17442 = (t17437&&t17441);
float t17443;
float t17444;
float t17445;
float t17446;
if(t17442){
t17443 = 0;
t17444 = 0;
t17445 = 0;
t17446 = 1;
} else {
t17443 = 0;
t17444 = 0;
t17445 = 0;
t17446 = 0;
}
float t17447 = (1-t17409);
float t17448 = (t17375*t17447);
float t17449 = (t17409+t17448);
float t17450 = (1-t17449);
float t17451 = (t17446*t17450);
float t17452 = (t17443*t17451);
float t17453 = (t17413+t17452);
bool t17454 = (t17334>0);
bool t17455 = (t17427>0);
bool t17456 = (!t17455);
bool t17457 = (t17454&&t17456);
bool t17458 = (!t17454);
bool t17459 = (t17455&&t17458);
bool t17460 = (t17457||t17459);
bool t17461 = (t17436<196);
bool t17462 = (t17436>float(6.76));
bool t17463 = (t17461&&t17462);
bool t17464 = (t17460&&t17463);
float t17465;
float t17466;
float t17467;
float t17468;
if(t17464){
float t17469 = (t17427/t17425);
float t17470 = (-t17469);
float t17471 = (t17470*t17418);
float t17472 = (t17421+t17471);
float t17473 = atan(t17472,t17433);
float t17474 = (u1.u0/30);
float t17475 = (t17473+t17474);
float t17476 = (2*3.1415927);
float t17477 = (t17475+t17476);
float t17478 = mod(t17477,2);
float t17479 = (t17478*3.1415927);
float t17480 = (t17479/t17476);
float t17481 = (t17470*t17425);
float t17482 = (t17427+t17481);
float t17483 = (t17470*t17431);
float t17484 = (t17433+t17483);
vec3 t17485 = vec3(t17472,t17482,t17484);
float t17486 = length(t17485);
float t17487 = (t17486*t17486);
float t17488 = sqrt(t17487);
float t17489 = (t17488-float(2.6));
float t17490 = (t17489/float(11.4));
vec4 t17491 = texture(s4,vec2(t17480,t17490));
t17465 = t17491.x;
t17466 = t17491.y;
t17467 = t17491.z;
vec3 t17492 = vec3(t17491.x,t17491.y,t17491.z);
float t17493 = length(t17492);
float t17494 = (t17493*t17493);
float t17495 = (t17494/float(3.0));
bool t17496 = (t17495<=1);
float t17497;
if(t17496){
t17497 = t17495;
} else {
t17497 = 1;
}
bool t17498 = (t17497>=0);
float t17499;
if(t17498){
t17499 = t17497;
} else {
t17499 = 0;
}
t17468 = t17499;
} else {
t17465 = 0;
t17466 = 0;
t17467 = 0;
t17468 = 0;
}
float t17500 = (1-t17449);
float t17501 = (t17446*t17500);
float t17502 = (t17449+t17501);
float t17503 = (1-t17502);
float t17504 = (t17468*t17503);
float t17505 = (t17465*t17504);
float t17506 = (t17453+t17505);
float t17507 = (t115*t17421);
float t17508 = pow(t17436,float(2.5));
float t17509 = (t17507/t17508);
float t17510 = (t17509*t17419);
float t17511 = (t17418+t17510);
float t17512 = (t17419*u1.u4);
float t17513 = (t17511*t17512);
float t17514 = (t17421+t17513);
float t17515 = (t115*t17427);
float t17516 = (t17515/t17508);
float t17517 = (t17516*t17419);
float t17518 = (t17425+t17517);
float t17519 = (t17518*t17512);
float t17520 = (t17427+t17519);
float t17521 = (t115*t17433);
float t17522 = (t17521/t17508);
float t17523 = (t17522*t17419);
float t17524 = (t17431+t17523);
float t17525 = (t17524*t17512);
float t17526 = (t17433+t17525);
vec3 t17527 = vec3(t17514,t17520,t17526);
float t17528 = length(t17527);
float t17529 = (t17528*t17528);
bool t17530 = (t17529<1);
vec3 t17531 = vec3(t17421,t17427,t17433);
float t17532 = length(t17531);
float t17533 = (t17532*t17532);
bool t17534 = (t17533>1);
bool t17535 = (t17530&&t17534);
float t17536;
float t17537;
float t17538;
float t17539;
if(t17535){
t17536 = 0;
t17537 = 0;
t17538 = 0;
t17539 = 1;
} else {
t17536 = 0;
t17537 = 0;
t17538 = 0;
t17539 = 0;
}
float t17540 = (1-t17502);
float t17541 = (t17468*t17540);
float t17542 = (t17502+t17541);
float t17543 = (1-t17542);
float t17544 = (t17539*t17543);
float t17545 = (t17536*t17544);
float t17546 = (t17506+t17545);
bool t17547 = (t17427>0);
bool t17548 = (t17520>0);
bool t17549 = (!t17548);
bool t17550 = (t17547&&t17549);
bool t17551 = (!t17547);
bool t17552 = (t17548&&t17551);
bool t17553 = (t17550||t17552);
bool t17554 = (t17529<196);
bool t17555 = (t17529>float(6.76));
bool t17556 = (t17554&&t17555);
bool t17557 = (t17553&&t17556);
float t17558;
float t17559;
float t17560;
float t17561;
if(t17557){
float t17562 = (t17520/t17518);
float t17563 = (-t17562);
float t17564 = (t17563*t17511);
float t17565 = (t17514+t17564);
float t17566 = atan(t17565,t17526);
float t17567 = (u1.u0/30);
float t17568 = (t17566+t17567);
float t17569 = (2*3.1415927);
float t17570 = (t17568+t17569);
float t17571 = mod(t17570,2);
float t17572 = (t17571*3.1415927);
float t17573 = (t17572/t17569);
float t17574 = (t17563*t17518);
float t17575 = (t17520+t17574);
float t17576 = (t17563*t17524);
float t17577 = (t17526+t17576);
vec3 t17578 = vec3(t17565,t17575,t17577);
float t17579 = length(t17578);
float t17580 = (t17579*t17579);
float t17581 = sqrt(t17580);
float t17582 = (t17581-float(2.6));
float t17583 = (t17582/float(11.4));
vec4 t17584 = texture(s4,vec2(t17573,t17583));
t17558 = t17584.x;
t17559 = t17584.y;
t17560 = t17584.z;
vec3 t17585 = vec3(t17584.x,t17584.y,t17584.z);
float t17586 = length(t17585);
float t17587 = (t17586*t17586);
float t17588 = (t17587/float(3.0));
bool t17589 = (t17588<=1);
float t17590;
if(t17589){
t17590 = t17588;
} else {
t17590 = 1;
}
bool t17591 = (t17590>=0);
float t17592;
if(t17591){
t17592 = t17590;
} else {
t17592 = 0;
}
t17561 = t17592;
} else {
t17558 = 0;
t17559 = 0;
t17560 = 0;
t17561 = 0;
}
float t17593 = (1-t17542);
float t17594 = (t17539*t17593);
float t17595 = (t17542+t17594);
float t17596 = (1-t17595);
float t17597 = (t17561*t17596);
float t17598 = (t17558*t17597);
float t17599 = (t17546+t17598);
float t17600 = (t115*t17514);
float t17601 = pow(t17529,float(2.5));
float t17602 = (t17600/t17601);
float t17603 = (t17602*t17512);
float t17604 = (t17511+t17603);
float t17605 = (t17512*u1.u4);
float t17606 = (t17604*t17605);
float t17607 = (t17514+t17606);
float t17608 = (t115*t17520);
float t17609 = (t17608/t17601);
float t17610 = (t17609*t17512);
float t17611 = (t17518+t17610);
float t17612 = (t17611*t17605);
float t17613 = (t17520+t17612);
float t17614 = (t115*t17526);
float t17615 = (t17614/t17601);
float t17616 = (t17615*t17512);
float t17617 = (t17524+t17616);
float t17618 = (t17617*t17605);
float t17619 = (t17526+t17618);
vec3 t17620 = vec3(t17607,t17613,t17619);
float t17621 = length(t17620);
float t17622 = (t17621*t17621);
bool t17623 = (t17622<1);
vec3 t17624 = vec3(t17514,t17520,t17526);
float t17625 = length(t17624);
float t17626 = (t17625*t17625);
bool t17627 = (t17626>1);
bool t17628 = (t17623&&t17627);
float t17629;
float t17630;
float t17631;
float t17632;
if(t17628){
t17629 = 0;
t17630 = 0;
t17631 = 0;
t17632 = 1;
} else {
t17629 = 0;
t17630 = 0;
t17631 = 0;
t17632 = 0;
}
float t17633 = (1-t17595);
float t17634 = (t17561*t17633);
float t17635 = (t17595+t17634);
float t17636 = (1-t17635);
float t17637 = (t17632*t17636);
float t17638 = (t17629*t17637);
float t17639 = (t17599+t17638);
bool t17640 = (t17520>0);
bool t17641 = (t17613>0);
bool t17642 = (!t17641);
bool t17643 = (t17640&&t17642);
bool t17644 = (!t17640);
bool t17645 = (t17641&&t17644);
bool t17646 = (t17643||t17645);
bool t17647 = (t17622<196);
bool t17648 = (t17622>float(6.76));
bool t17649 = (t17647&&t17648);
bool t17650 = (t17646&&t17649);
float t17651;
float t17652;
float t17653;
float t17654;
if(t17650){
float t17655 = (t17613/t17611);
float t17656 = (-t17655);
float t17657 = (t17656*t17604);
float t17658 = (t17607+t17657);
float t17659 = atan(t17658,t17619);
float t17660 = (u1.u0/30);
float t17661 = (t17659+t17660);
float t17662 = (2*3.1415927);
float t17663 = (t17661+t17662);
float t17664 = mod(t17663,2);
float t17665 = (t17664*3.1415927);
float t17666 = (t17665/t17662);
float t17667 = (t17656*t17611);
float t17668 = (t17613+t17667);
float t17669 = (t17656*t17617);
float t17670 = (t17619+t17669);
vec3 t17671 = vec3(t17658,t17668,t17670);
float t17672 = length(t17671);
float t17673 = (t17672*t17672);
float t17674 = sqrt(t17673);
float t17675 = (t17674-float(2.6));
float t17676 = (t17675/float(11.4));
vec4 t17677 = texture(s4,vec2(t17666,t17676));
t17651 = t17677.x;
t17652 = t17677.y;
t17653 = t17677.z;
vec3 t17678 = vec3(t17677.x,t17677.y,t17677.z);
float t17679 = length(t17678);
float t17680 = (t17679*t17679);
float t17681 = (t17680/float(3.0));
bool t17682 = (t17681<=1);
float t17683;
if(t17682){
t17683 = t17681;
} else {
t17683 = 1;
}
bool t17684 = (t17683>=0);
float t17685;
if(t17684){
t17685 = t17683;
} else {
t17685 = 0;
}
t17654 = t17685;
} else {
t17651 = 0;
t17652 = 0;
t17653 = 0;
t17654 = 0;
}
float t17686 = (1-t17635);
float t17687 = (t17632*t17686);
float t17688 = (t17635+t17687);
float t17689 = (1-t17688);
float t17690 = (t17654*t17689);
float t17691 = (t17651*t17690);
float t17692 = (t17639+t17691);
float t17693 = (t115*t17607);
float t17694 = pow(t17622,float(2.5));
float t17695 = (t17693/t17694);
float t17696 = (t17695*t17605);
float t17697 = (t17604+t17696);
float t17698 = (t17605*u1.u4);
float t17699 = (t17697*t17698);
float t17700 = (t17607+t17699);
float t17701 = (t115*t17613);
float t17702 = (t17701/t17694);
float t17703 = (t17702*t17605);
float t17704 = (t17611+t17703);
float t17705 = (t17704*t17698);
float t17706 = (t17613+t17705);
float t17707 = (t115*t17619);
float t17708 = (t17707/t17694);
float t17709 = (t17708*t17605);
float t17710 = (t17617+t17709);
float t17711 = (t17710*t17698);
float t17712 = (t17619+t17711);
vec3 t17713 = vec3(t17700,t17706,t17712);
float t17714 = length(t17713);
float t17715 = (t17714*t17714);
bool t17716 = (t17715<1);
vec3 t17717 = vec3(t17607,t17613,t17619);
float t17718 = length(t17717);
float t17719 = (t17718*t17718);
bool t17720 = (t17719>1);
bool t17721 = (t17716&&t17720);
float t17722;
float t17723;
float t17724;
float t17725;
if(t17721){
t17722 = 0;
t17723 = 0;
t17724 = 0;
t17725 = 1;
} else {
t17722 = 0;
t17723 = 0;
t17724 = 0;
t17725 = 0;
}
float t17726 = (1-t17688);
float t17727 = (t17654*t17726);
float t17728 = (t17688+t17727);
float t17729 = (1-t17728);
float t17730 = (t17725*t17729);
float t17731 = (t17722*t17730);
float t17732 = (t17692+t17731);
bool t17733 = (t17613>0);
bool t17734 = (t17706>0);
bool t17735 = (!t17734);
bool t17736 = (t17733&&t17735);
bool t17737 = (!t17733);
bool t17738 = (t17734&&t17737);
bool t17739 = (t17736||t17738);
bool t17740 = (t17715<196);
bool t17741 = (t17715>float(6.76));
bool t17742 = (t17740&&t17741);
bool t17743 = (t17739&&t17742);
float t17744;
float t17745;
float t17746;
float t17747;
if(t17743){
float t17748 = (t17706/t17704);
float t17749 = (-t17748);
float t17750 = (t17749*t17697);
float t17751 = (t17700+t17750);
float t17752 = atan(t17751,t17712);
float t17753 = (u1.u0/30);
float t17754 = (t17752+t17753);
float t17755 = (2*3.1415927);
float t17756 = (t17754+t17755);
float t17757 = mod(t17756,2);
float t17758 = (t17757*3.1415927);
float t17759 = (t17758/t17755);
float t17760 = (t17749*t17704);
float t17761 = (t17706+t17760);
float t17762 = (t17749*t17710);
float t17763 = (t17712+t17762);
vec3 t17764 = vec3(t17751,t17761,t17763);
float t17765 = length(t17764);
float t17766 = (t17765*t17765);
float t17767 = sqrt(t17766);
float t17768 = (t17767-float(2.6));
float t17769 = (t17768/float(11.4));
vec4 t17770 = texture(s4,vec2(t17759,t17769));
t17744 = t17770.x;
t17745 = t17770.y;
t17746 = t17770.z;
vec3 t17771 = vec3(t17770.x,t17770.y,t17770.z);
float t17772 = length(t17771);
float t17773 = (t17772*t17772);
float t17774 = (t17773/float(3.0));
bool t17775 = (t17774<=1);
float t17776;
if(t17775){
t17776 = t17774;
} else {
t17776 = 1;
}
bool t17777 = (t17776>=0);
float t17778;
if(t17777){
t17778 = t17776;
} else {
t17778 = 0;
}
t17747 = t17778;
} else {
t17744 = 0;
t17745 = 0;
t17746 = 0;
t17747 = 0;
}
float t17779 = (1-t17728);
float t17780 = (t17725*t17779);
float t17781 = (t17728+t17780);
float t17782 = (1-t17781);
float t17783 = (t17747*t17782);
float t17784 = (t17744*t17783);
float t17785 = (t17732+t17784);
float t17786 = (t115*t17700);
float t17787 = pow(t17715,float(2.5));
float t17788 = (t17786/t17787);
float t17789 = (t17788*t17698);
float t17790 = (t17697+t17789);
float t17791 = (t17698*u1.u4);
float t17792 = (t17790*t17791);
float t17793 = (t17700+t17792);
float t17794 = (t115*t17706);
float t17795 = (t17794/t17787);
float t17796 = (t17795*t17698);
float t17797 = (t17704+t17796);
float t17798 = (t17797*t17791);
float t17799 = (t17706+t17798);
float t17800 = (t115*t17712);
float t17801 = (t17800/t17787);
float t17802 = (t17801*t17698);
float t17803 = (t17710+t17802);
float t17804 = (t17803*t17791);
float t17805 = (t17712+t17804);
vec3 t17806 = vec3(t17793,t17799,t17805);
float t17807 = length(t17806);
float t17808 = (t17807*t17807);
bool t17809 = (t17808<1);
vec3 t17810 = vec3(t17700,t17706,t17712);
float t17811 = length(t17810);
float t17812 = (t17811*t17811);
bool t17813 = (t17812>1);
bool t17814 = (t17809&&t17813);
float t17815;
float t17816;
float t17817;
float t17818;
if(t17814){
t17815 = 0;
t17816 = 0;
t17817 = 0;
t17818 = 1;
} else {
t17815 = 0;
t17816 = 0;
t17817 = 0;
t17818 = 0;
}
float t17819 = (1-t17781);
float t17820 = (t17747*t17819);
float t17821 = (t17781+t17820);
float t17822 = (1-t17821);
float t17823 = (t17818*t17822);
float t17824 = (t17815*t17823);
float t17825 = (t17785+t17824);
bool t17826 = (t17706>0);
bool t17827 = (t17799>0);
bool t17828 = (!t17827);
bool t17829 = (t17826&&t17828);
bool t17830 = (!t17826);
bool t17831 = (t17827&&t17830);
bool t17832 = (t17829||t17831);
bool t17833 = (t17808<196);
bool t17834 = (t17808>float(6.76));
bool t17835 = (t17833&&t17834);
bool t17836 = (t17832&&t17835);
float t17837;
float t17838;
float t17839;
float t17840;
if(t17836){
float t17841 = (t17799/t17797);
float t17842 = (-t17841);
float t17843 = (t17842*t17790);
float t17844 = (t17793+t17843);
float t17845 = atan(t17844,t17805);
float t17846 = (u1.u0/30);
float t17847 = (t17845+t17846);
float t17848 = (2*3.1415927);
float t17849 = (t17847+t17848);
float t17850 = mod(t17849,2);
float t17851 = (t17850*3.1415927);
float t17852 = (t17851/t17848);
float t17853 = (t17842*t17797);
float t17854 = (t17799+t17853);
float t17855 = (t17842*t17803);
float t17856 = (t17805+t17855);
vec3 t17857 = vec3(t17844,t17854,t17856);
float t17858 = length(t17857);
float t17859 = (t17858*t17858);
float t17860 = sqrt(t17859);
float t17861 = (t17860-float(2.6));
float t17862 = (t17861/float(11.4));
vec4 t17863 = texture(s4,vec2(t17852,t17862));
t17837 = t17863.x;
t17838 = t17863.y;
t17839 = t17863.z;
vec3 t17864 = vec3(t17863.x,t17863.y,t17863.z);
float t17865 = length(t17864);
float t17866 = (t17865*t17865);
float t17867 = (t17866/float(3.0));
bool t17868 = (t17867<=1);
float t17869;
if(t17868){
t17869 = t17867;
} else {
t17869 = 1;
}
bool t17870 = (t17869>=0);
float t17871;
if(t17870){
t17871 = t17869;
} else {
t17871 = 0;
}
t17840 = t17871;
} else {
t17837 = 0;
t17838 = 0;
t17839 = 0;
t17840 = 0;
}
float t17872 = (1-t17821);
float t17873 = (t17818*t17872);
float t17874 = (t17821+t17873);
float t17875 = (1-t17874);
float t17876 = (t17840*t17875);
float t17877 = (t17837*t17876);
float t17878 = (t17825+t17877);
float t17879 = (t115*t17793);
float t17880 = pow(t17808,float(2.5));
float t17881 = (t17879/t17880);
float t17882 = (t17881*t17791);
float t17883 = (t17790+t17882);
float t17884 = (t17791*u1.u4);
float t17885 = (t17883*t17884);
float t17886 = (t17793+t17885);
float t17887 = (t115*t17799);
float t17888 = (t17887/t17880);
float t17889 = (t17888*t17791);
float t17890 = (t17797+t17889);
float t17891 = (t17890*t17884);
float t17892 = (t17799+t17891);
float t17893 = (t115*t17805);
float t17894 = (t17893/t17880);
float t17895 = (t17894*t17791);
float t17896 = (t17803+t17895);
float t17897 = (t17896*t17884);
float t17898 = (t17805+t17897);
vec3 t17899 = vec3(t17886,t17892,t17898);
float t17900 = length(t17899);
float t17901 = (t17900*t17900);
bool t17902 = (t17901<1);
vec3 t17903 = vec3(t17793,t17799,t17805);
float t17904 = length(t17903);
float t17905 = (t17904*t17904);
bool t17906 = (t17905>1);
bool t17907 = (t17902&&t17906);
float t17908;
float t17909;
float t17910;
float t17911;
if(t17907){
t17908 = 0;
t17909 = 0;
t17910 = 0;
t17911 = 1;
} else {
t17908 = 0;
t17909 = 0;
t17910 = 0;
t17911 = 0;
}
float t17912 = (1-t17874);
float t17913 = (t17840*t17912);
float t17914 = (t17874+t17913);
float t17915 = (1-t17914);
float t17916 = (t17911*t17915);
float t17917 = (t17908*t17916);
float t17918 = (t17878+t17917);
bool t17919 = (t17799>0);
bool t17920 = (t17892>0);
bool t17921 = (!t17920);
bool t17922 = (t17919&&t17921);
bool t17923 = (!t17919);
bool t17924 = (t17920&&t17923);
bool t17925 = (t17922||t17924);
bool t17926 = (t17901<196);
bool t17927 = (t17901>float(6.76));
bool t17928 = (t17926&&t17927);
bool t17929 = (t17925&&t17928);
float t17930;
float t17931;
float t17932;
float t17933;
if(t17929){
float t17934 = (t17892/t17890);
float t17935 = (-t17934);
float t17936 = (t17935*t17883);
float t17937 = (t17886+t17936);
float t17938 = atan(t17937,t17898);
float t17939 = (u1.u0/30);
float t17940 = (t17938+t17939);
float t17941 = (2*3.1415927);
float t17942 = (t17940+t17941);
float t17943 = mod(t17942,2);
float t17944 = (t17943*3.1415927);
float t17945 = (t17944/t17941);
float t17946 = (t17935*t17890);
float t17947 = (t17892+t17946);
float t17948 = (t17935*t17896);
float t17949 = (t17898+t17948);
vec3 t17950 = vec3(t17937,t17947,t17949);
float t17951 = length(t17950);
float t17952 = (t17951*t17951);
float t17953 = sqrt(t17952);
float t17954 = (t17953-float(2.6));
float t17955 = (t17954/float(11.4));
vec4 t17956 = texture(s4,vec2(t17945,t17955));
t17930 = t17956.x;
t17931 = t17956.y;
t17932 = t17956.z;
vec3 t17957 = vec3(t17956.x,t17956.y,t17956.z);
float t17958 = length(t17957);
float t17959 = (t17958*t17958);
float t17960 = (t17959/float(3.0));
bool t17961 = (t17960<=1);
float t17962;
if(t17961){
t17962 = t17960;
} else {
t17962 = 1;
}
bool t17963 = (t17962>=0);
float t17964;
if(t17963){
t17964 = t17962;
} else {
t17964 = 0;
}
t17933 = t17964;
} else {
t17930 = 0;
t17931 = 0;
t17932 = 0;
t17933 = 0;
}
float t17965 = (1-t17914);
float t17966 = (t17911*t17965);
float t17967 = (t17914+t17966);
float t17968 = (1-t17967);
float t17969 = (t17933*t17968);
float t17970 = (t17930*t17969);
float t17971 = (t17918+t17970);
float t17972 = (t115*t17886);
float t17973 = pow(t17901,float(2.5));
float t17974 = (t17972/t17973);
float t17975 = (t17974*t17884);
float t17976 = (t17883+t17975);
float t17977 = (t17884*u1.u4);
float t17978 = (t17976*t17977);
float t17979 = (t17886+t17978);
float t17980 = (t115*t17892);
float t17981 = (t17980/t17973);
float t17982 = (t17981*t17884);
float t17983 = (t17890+t17982);
float t17984 = (t17983*t17977);
float t17985 = (t17892+t17984);
float t17986 = (t115*t17898);
float t17987 = (t17986/t17973);
float t17988 = (t17987*t17884);
float t17989 = (t17896+t17988);
float t17990 = (t17989*t17977);
float t17991 = (t17898+t17990);
vec3 t17992 = vec3(t17979,t17985,t17991);
float t17993 = length(t17992);
float t17994 = (t17993*t17993);
bool t17995 = (t17994<1);
vec3 t17996 = vec3(t17886,t17892,t17898);
float t17997 = length(t17996);
float t17998 = (t17997*t17997);
bool t17999 = (t17998>1);
bool t18000 = (t17995&&t17999);
float t18001;
float t18002;
float t18003;
float t18004;
if(t18000){
t18001 = 0;
t18002 = 0;
t18003 = 0;
t18004 = 1;
} else {
t18001 = 0;
t18002 = 0;
t18003 = 0;
t18004 = 0;
}
float t18005 = (1-t17967);
float t18006 = (t17933*t18005);
float t18007 = (t17967+t18006);
float t18008 = (1-t18007);
float t18009 = (t18004*t18008);
float t18010 = (t18001*t18009);
float t18011 = (t17971+t18010);
bool t18012 = (t17892>0);
bool t18013 = (t17985>0);
bool t18014 = (!t18013);
bool t18015 = (t18012&&t18014);
bool t18016 = (!t18012);
bool t18017 = (t18013&&t18016);
bool t18018 = (t18015||t18017);
bool t18019 = (t17994<196);
bool t18020 = (t17994>float(6.76));
bool t18021 = (t18019&&t18020);
bool t18022 = (t18018&&t18021);
float t18023;
float t18024;
float t18025;
float t18026;
if(t18022){
float t18027 = (t17985/t17983);
float t18028 = (-t18027);
float t18029 = (t18028*t17976);
float t18030 = (t17979+t18029);
float t18031 = atan(t18030,t17991);
float t18032 = (u1.u0/30);
float t18033 = (t18031+t18032);
float t18034 = (2*3.1415927);
float t18035 = (t18033+t18034);
float t18036 = mod(t18035,2);
float t18037 = (t18036*3.1415927);
float t18038 = (t18037/t18034);
float t18039 = (t18028*t17983);
float t18040 = (t17985+t18039);
float t18041 = (t18028*t17989);
float t18042 = (t17991+t18041);
vec3 t18043 = vec3(t18030,t18040,t18042);
float t18044 = length(t18043);
float t18045 = (t18044*t18044);
float t18046 = sqrt(t18045);
float t18047 = (t18046-float(2.6));
float t18048 = (t18047/float(11.4));
vec4 t18049 = texture(s4,vec2(t18038,t18048));
t18023 = t18049.x;
t18024 = t18049.y;
t18025 = t18049.z;
vec3 t18050 = vec3(t18049.x,t18049.y,t18049.z);
float t18051 = length(t18050);
float t18052 = (t18051*t18051);
float t18053 = (t18052/float(3.0));
bool t18054 = (t18053<=1);
float t18055;
if(t18054){
t18055 = t18053;
} else {
t18055 = 1;
}
bool t18056 = (t18055>=0);
float t18057;
if(t18056){
t18057 = t18055;
} else {
t18057 = 0;
}
t18026 = t18057;
} else {
t18023 = 0;
t18024 = 0;
t18025 = 0;
t18026 = 0;
}
float t18058 = (1-t18007);
float t18059 = (t18004*t18058);
float t18060 = (t18007+t18059);
float t18061 = (1-t18060);
float t18062 = (t18026*t18061);
float t18063 = (t18023*t18062);
float t18064 = (t18011+t18063);
float t18065 = (t115*t17979);
float t18066 = pow(t17994,float(2.5));
float t18067 = (t18065/t18066);
float t18068 = (t18067*t17977);
float t18069 = (t17976+t18068);
float t18070 = (t17977*u1.u4);
float t18071 = (t18069*t18070);
float t18072 = (t17979+t18071);
float t18073 = (t115*t17985);
float t18074 = (t18073/t18066);
float t18075 = (t18074*t17977);
float t18076 = (t17983+t18075);
float t18077 = (t18076*t18070);
float t18078 = (t17985+t18077);
float t18079 = (t115*t17991);
float t18080 = (t18079/t18066);
float t18081 = (t18080*t17977);
float t18082 = (t17989+t18081);
float t18083 = (t18082*t18070);
float t18084 = (t17991+t18083);
vec3 t18085 = vec3(t18072,t18078,t18084);
float t18086 = length(t18085);
float t18087 = (t18086*t18086);
bool t18088 = (t18087<1);
vec3 t18089 = vec3(t17979,t17985,t17991);
float t18090 = length(t18089);
float t18091 = (t18090*t18090);
bool t18092 = (t18091>1);
bool t18093 = (t18088&&t18092);
float t18094;
float t18095;
float t18096;
float t18097;
if(t18093){
t18094 = 0;
t18095 = 0;
t18096 = 0;
t18097 = 1;
} else {
t18094 = 0;
t18095 = 0;
t18096 = 0;
t18097 = 0;
}
float t18098 = (1-t18060);
float t18099 = (t18026*t18098);
float t18100 = (t18060+t18099);
float t18101 = (1-t18100);
float t18102 = (t18097*t18101);
float t18103 = (t18094*t18102);
float t18104 = (t18064+t18103);
bool t18105 = (t17985>0);
bool t18106 = (t18078>0);
bool t18107 = (!t18106);
bool t18108 = (t18105&&t18107);
bool t18109 = (!t18105);
bool t18110 = (t18106&&t18109);
bool t18111 = (t18108||t18110);
bool t18112 = (t18087<196);
bool t18113 = (t18087>float(6.76));
bool t18114 = (t18112&&t18113);
bool t18115 = (t18111&&t18114);
float t18116;
float t18117;
float t18118;
float t18119;
if(t18115){
float t18120 = (t18078/t18076);
float t18121 = (-t18120);
float t18122 = (t18121*t18069);
float t18123 = (t18072+t18122);
float t18124 = atan(t18123,t18084);
float t18125 = (u1.u0/30);
float t18126 = (t18124+t18125);
float t18127 = (2*3.1415927);
float t18128 = (t18126+t18127);
float t18129 = mod(t18128,2);
float t18130 = (t18129*3.1415927);
float t18131 = (t18130/t18127);
float t18132 = (t18121*t18076);
float t18133 = (t18078+t18132);
float t18134 = (t18121*t18082);
float t18135 = (t18084+t18134);
vec3 t18136 = vec3(t18123,t18133,t18135);
float t18137 = length(t18136);
float t18138 = (t18137*t18137);
float t18139 = sqrt(t18138);
float t18140 = (t18139-float(2.6));
float t18141 = (t18140/float(11.4));
vec4 t18142 = texture(s4,vec2(t18131,t18141));
t18116 = t18142.x;
t18117 = t18142.y;
t18118 = t18142.z;
vec3 t18143 = vec3(t18142.x,t18142.y,t18142.z);
float t18144 = length(t18143);
float t18145 = (t18144*t18144);
float t18146 = (t18145/float(3.0));
bool t18147 = (t18146<=1);
float t18148;
if(t18147){
t18148 = t18146;
} else {
t18148 = 1;
}
bool t18149 = (t18148>=0);
float t18150;
if(t18149){
t18150 = t18148;
} else {
t18150 = 0;
}
t18119 = t18150;
} else {
t18116 = 0;
t18117 = 0;
t18118 = 0;
t18119 = 0;
}
float t18151 = (1-t18100);
float t18152 = (t18097*t18151);
float t18153 = (t18100+t18152);
float t18154 = (1-t18153);
float t18155 = (t18119*t18154);
float t18156 = (t18116*t18155);
float t18157 = (t18104+t18156);
float t18158 = (t115*t18072);
float t18159 = pow(t18087,float(2.5));
float t18160 = (t18158/t18159);
float t18161 = (t18160*t18070);
float t18162 = (t18069+t18161);
float t18163 = (t18070*u1.u4);
float t18164 = (t18162*t18163);
float t18165 = (t18072+t18164);
float t18166 = (t115*t18078);
float t18167 = (t18166/t18159);
float t18168 = (t18167*t18070);
float t18169 = (t18076+t18168);
float t18170 = (t18169*t18163);
float t18171 = (t18078+t18170);
float t18172 = (t115*t18084);
float t18173 = (t18172/t18159);
float t18174 = (t18173*t18070);
float t18175 = (t18082+t18174);
float t18176 = (t18175*t18163);
float t18177 = (t18084+t18176);
vec3 t18178 = vec3(t18165,t18171,t18177);
float t18179 = length(t18178);
float t18180 = (t18179*t18179);
bool t18181 = (t18180<1);
vec3 t18182 = vec3(t18072,t18078,t18084);
float t18183 = length(t18182);
float t18184 = (t18183*t18183);
bool t18185 = (t18184>1);
bool t18186 = (t18181&&t18185);
float t18187;
float t18188;
float t18189;
float t18190;
if(t18186){
t18187 = 0;
t18188 = 0;
t18189 = 0;
t18190 = 1;
} else {
t18187 = 0;
t18188 = 0;
t18189 = 0;
t18190 = 0;
}
float t18191 = (1-t18153);
float t18192 = (t18119*t18191);
float t18193 = (t18153+t18192);
float t18194 = (1-t18193);
float t18195 = (t18190*t18194);
float t18196 = (t18187*t18195);
float t18197 = (t18157+t18196);
bool t18198 = (t18078>0);
bool t18199 = (t18171>0);
bool t18200 = (!t18199);
bool t18201 = (t18198&&t18200);
bool t18202 = (!t18198);
bool t18203 = (t18199&&t18202);
bool t18204 = (t18201||t18203);
bool t18205 = (t18180<196);
bool t18206 = (t18180>float(6.76));
bool t18207 = (t18205&&t18206);
bool t18208 = (t18204&&t18207);
float t18209;
float t18210;
float t18211;
float t18212;
if(t18208){
float t18213 = (t18171/t18169);
float t18214 = (-t18213);
float t18215 = (t18214*t18162);
float t18216 = (t18165+t18215);
float t18217 = atan(t18216,t18177);
float t18218 = (u1.u0/30);
float t18219 = (t18217+t18218);
float t18220 = (2*3.1415927);
float t18221 = (t18219+t18220);
float t18222 = mod(t18221,2);
float t18223 = (t18222*3.1415927);
float t18224 = (t18223/t18220);
float t18225 = (t18214*t18169);
float t18226 = (t18171+t18225);
float t18227 = (t18214*t18175);
float t18228 = (t18177+t18227);
vec3 t18229 = vec3(t18216,t18226,t18228);
float t18230 = length(t18229);
float t18231 = (t18230*t18230);
float t18232 = sqrt(t18231);
float t18233 = (t18232-float(2.6));
float t18234 = (t18233/float(11.4));
vec4 t18235 = texture(s4,vec2(t18224,t18234));
t18209 = t18235.x;
t18210 = t18235.y;
t18211 = t18235.z;
vec3 t18236 = vec3(t18235.x,t18235.y,t18235.z);
float t18237 = length(t18236);
float t18238 = (t18237*t18237);
float t18239 = (t18238/float(3.0));
bool t18240 = (t18239<=1);
float t18241;
if(t18240){
t18241 = t18239;
} else {
t18241 = 1;
}
bool t18242 = (t18241>=0);
float t18243;
if(t18242){
t18243 = t18241;
} else {
t18243 = 0;
}
t18212 = t18243;
} else {
t18209 = 0;
t18210 = 0;
t18211 = 0;
t18212 = 0;
}
float t18244 = (1-t18193);
float t18245 = (t18190*t18244);
float t18246 = (t18193+t18245);
float t18247 = (1-t18246);
float t18248 = (t18212*t18247);
float t18249 = (t18209*t18248);
float t18250 = (t18197+t18249);
float t18251 = (t115*t18165);
float t18252 = pow(t18180,float(2.5));
float t18253 = (t18251/t18252);
float t18254 = (t18253*t18163);
float t18255 = (t18162+t18254);
float t18256 = (t18163*u1.u4);
float t18257 = (t18255*t18256);
float t18258 = (t18165+t18257);
float t18259 = (t115*t18171);
float t18260 = (t18259/t18252);
float t18261 = (t18260*t18163);
float t18262 = (t18169+t18261);
float t18263 = (t18262*t18256);
float t18264 = (t18171+t18263);
float t18265 = (t115*t18177);
float t18266 = (t18265/t18252);
float t18267 = (t18266*t18163);
float t18268 = (t18175+t18267);
float t18269 = (t18268*t18256);
float t18270 = (t18177+t18269);
vec3 t18271 = vec3(t18258,t18264,t18270);
float t18272 = length(t18271);
float t18273 = (t18272*t18272);
bool t18274 = (t18273<1);
vec3 t18275 = vec3(t18165,t18171,t18177);
float t18276 = length(t18275);
float t18277 = (t18276*t18276);
bool t18278 = (t18277>1);
bool t18279 = (t18274&&t18278);
float t18280;
float t18281;
float t18282;
float t18283;
if(t18279){
t18280 = 0;
t18281 = 0;
t18282 = 0;
t18283 = 1;
} else {
t18280 = 0;
t18281 = 0;
t18282 = 0;
t18283 = 0;
}
float t18284 = (1-t18246);
float t18285 = (t18212*t18284);
float t18286 = (t18246+t18285);
float t18287 = (1-t18286);
float t18288 = (t18283*t18287);
float t18289 = (t18280*t18288);
float t18290 = (t18250+t18289);
bool t18291 = (t18171>0);
bool t18292 = (t18264>0);
bool t18293 = (!t18292);
bool t18294 = (t18291&&t18293);
bool t18295 = (!t18291);
bool t18296 = (t18292&&t18295);
bool t18297 = (t18294||t18296);
bool t18298 = (t18273<196);
bool t18299 = (t18273>float(6.76));
bool t18300 = (t18298&&t18299);
bool t18301 = (t18297&&t18300);
float t18302;
float t18303;
float t18304;
float t18305;
if(t18301){
float t18306 = (t18264/t18262);
float t18307 = (-t18306);
float t18308 = (t18307*t18255);
float t18309 = (t18258+t18308);
float t18310 = atan(t18309,t18270);
float t18311 = (u1.u0/30);
float t18312 = (t18310+t18311);
float t18313 = (2*3.1415927);
float t18314 = (t18312+t18313);
float t18315 = mod(t18314,2);
float t18316 = (t18315*3.1415927);
float t18317 = (t18316/t18313);
float t18318 = (t18307*t18262);
float t18319 = (t18264+t18318);
float t18320 = (t18307*t18268);
float t18321 = (t18270+t18320);
vec3 t18322 = vec3(t18309,t18319,t18321);
float t18323 = length(t18322);
float t18324 = (t18323*t18323);
float t18325 = sqrt(t18324);
float t18326 = (t18325-float(2.6));
float t18327 = (t18326/float(11.4));
vec4 t18328 = texture(s4,vec2(t18317,t18327));
t18302 = t18328.x;
t18303 = t18328.y;
t18304 = t18328.z;
vec3 t18329 = vec3(t18328.x,t18328.y,t18328.z);
float t18330 = length(t18329);
float t18331 = (t18330*t18330);
float t18332 = (t18331/float(3.0));
bool t18333 = (t18332<=1);
float t18334;
if(t18333){
t18334 = t18332;
} else {
t18334 = 1;
}
bool t18335 = (t18334>=0);
float t18336;
if(t18335){
t18336 = t18334;
} else {
t18336 = 0;
}
t18305 = t18336;
} else {
t18302 = 0;
t18303 = 0;
t18304 = 0;
t18305 = 0;
}
float t18337 = (1-t18286);
float t18338 = (t18283*t18337);
float t18339 = (t18286+t18338);
float t18340 = (1-t18339);
float t18341 = (t18305*t18340);
float t18342 = (t18302*t18341);
float t18343 = (t18290+t18342);
float t18344 = (t115*t18258);
float t18345 = pow(t18273,float(2.5));
float t18346 = (t18344/t18345);
float t18347 = (t18346*t18256);
float t18348 = (t18255+t18347);
float t18349 = (t18256*u1.u4);
float t18350 = (t18348*t18349);
float t18351 = (t18258+t18350);
float t18352 = (t115*t18264);
float t18353 = (t18352/t18345);
float t18354 = (t18353*t18256);
float t18355 = (t18262+t18354);
float t18356 = (t18355*t18349);
float t18357 = (t18264+t18356);
float t18358 = (t115*t18270);
float t18359 = (t18358/t18345);
float t18360 = (t18359*t18256);
float t18361 = (t18268+t18360);
float t18362 = (t18361*t18349);
float t18363 = (t18270+t18362);
vec3 t18364 = vec3(t18351,t18357,t18363);
float t18365 = length(t18364);
float t18366 = (t18365*t18365);
bool t18367 = (t18366<1);
vec3 t18368 = vec3(t18258,t18264,t18270);
float t18369 = length(t18368);
float t18370 = (t18369*t18369);
bool t18371 = (t18370>1);
bool t18372 = (t18367&&t18371);
float t18373;
float t18374;
float t18375;
float t18376;
if(t18372){
t18373 = 0;
t18374 = 0;
t18375 = 0;
t18376 = 1;
} else {
t18373 = 0;
t18374 = 0;
t18375 = 0;
t18376 = 0;
}
float t18377 = (1-t18339);
float t18378 = (t18305*t18377);
float t18379 = (t18339+t18378);
float t18380 = (1-t18379);
float t18381 = (t18376*t18380);
float t18382 = (t18373*t18381);
float t18383 = (t18343+t18382);
bool t18384 = (t18264>0);
bool t18385 = (t18357>0);
bool t18386 = (!t18385);
bool t18387 = (t18384&&t18386);
bool t18388 = (!t18384);
bool t18389 = (t18385&&t18388);
bool t18390 = (t18387||t18389);
bool t18391 = (t18366<196);
bool t18392 = (t18366>float(6.76));
bool t18393 = (t18391&&t18392);
bool t18394 = (t18390&&t18393);
float t18395;
float t18396;
float t18397;
float t18398;
if(t18394){
float t18399 = (t18357/t18355);
float t18400 = (-t18399);
float t18401 = (t18400*t18348);
float t18402 = (t18351+t18401);
float t18403 = atan(t18402,t18363);
float t18404 = (u1.u0/30);
float t18405 = (t18403+t18404);
float t18406 = (2*3.1415927);
float t18407 = (t18405+t18406);
float t18408 = mod(t18407,2);
float t18409 = (t18408*3.1415927);
float t18410 = (t18409/t18406);
float t18411 = (t18400*t18355);
float t18412 = (t18357+t18411);
float t18413 = (t18400*t18361);
float t18414 = (t18363+t18413);
vec3 t18415 = vec3(t18402,t18412,t18414);
float t18416 = length(t18415);
float t18417 = (t18416*t18416);
float t18418 = sqrt(t18417);
float t18419 = (t18418-float(2.6));
float t18420 = (t18419/float(11.4));
vec4 t18421 = texture(s4,vec2(t18410,t18420));
t18395 = t18421.x;
t18396 = t18421.y;
t18397 = t18421.z;
vec3 t18422 = vec3(t18421.x,t18421.y,t18421.z);
float t18423 = length(t18422);
float t18424 = (t18423*t18423);
float t18425 = (t18424/float(3.0));
bool t18426 = (t18425<=1);
float t18427;
if(t18426){
t18427 = t18425;
} else {
t18427 = 1;
}
bool t18428 = (t18427>=0);
float t18429;
if(t18428){
t18429 = t18427;
} else {
t18429 = 0;
}
t18398 = t18429;
} else {
t18395 = 0;
t18396 = 0;
t18397 = 0;
t18398 = 0;
}
float t18430 = (1-t18379);
float t18431 = (t18376*t18430);
float t18432 = (t18379+t18431);
float t18433 = (1-t18432);
float t18434 = (t18398*t18433);
float t18435 = (t18395*t18434);
float t18436 = (t18383+t18435);
float t18437 = (t115*t18351);
float t18438 = pow(t18366,float(2.5));
float t18439 = (t18437/t18438);
float t18440 = (t18439*t18349);
float t18441 = (t18348+t18440);
float t18442 = (t18349*u1.u4);
float t18443 = (t18441*t18442);
float t18444 = (t18351+t18443);
float t18445 = (t115*t18357);
float t18446 = (t18445/t18438);
float t18447 = (t18446*t18349);
float t18448 = (t18355+t18447);
float t18449 = (t18448*t18442);
float t18450 = (t18357+t18449);
float t18451 = (t115*t18363);
float t18452 = (t18451/t18438);
float t18453 = (t18452*t18349);
float t18454 = (t18361+t18453);
float t18455 = (t18454*t18442);
float t18456 = (t18363+t18455);
vec3 t18457 = vec3(t18444,t18450,t18456);
float t18458 = length(t18457);
float t18459 = (t18458*t18458);
bool t18460 = (t18459<1);
vec3 t18461 = vec3(t18351,t18357,t18363);
float t18462 = length(t18461);
float t18463 = (t18462*t18462);
bool t18464 = (t18463>1);
bool t18465 = (t18460&&t18464);
float t18466;
float t18467;
float t18468;
float t18469;
if(t18465){
t18466 = 0;
t18467 = 0;
t18468 = 0;
t18469 = 1;
} else {
t18466 = 0;
t18467 = 0;
t18468 = 0;
t18469 = 0;
}
float t18470 = (1-t18432);
float t18471 = (t18398*t18470);
float t18472 = (t18432+t18471);
float t18473 = (1-t18472);
float t18474 = (t18469*t18473);
float t18475 = (t18466*t18474);
float t18476 = (t18436+t18475);
bool t18477 = (t18357>0);
bool t18478 = (t18450>0);
bool t18479 = (!t18478);
bool t18480 = (t18477&&t18479);
bool t18481 = (!t18477);
bool t18482 = (t18478&&t18481);
bool t18483 = (t18480||t18482);
bool t18484 = (t18459<196);
bool t18485 = (t18459>float(6.76));
bool t18486 = (t18484&&t18485);
bool t18487 = (t18483&&t18486);
float t18488;
float t18489;
float t18490;
float t18491;
if(t18487){
float t18492 = (t18450/t18448);
float t18493 = (-t18492);
float t18494 = (t18493*t18441);
float t18495 = (t18444+t18494);
float t18496 = atan(t18495,t18456);
float t18497 = (u1.u0/30);
float t18498 = (t18496+t18497);
float t18499 = (2*3.1415927);
float t18500 = (t18498+t18499);
float t18501 = mod(t18500,2);
float t18502 = (t18501*3.1415927);
float t18503 = (t18502/t18499);
float t18504 = (t18493*t18448);
float t18505 = (t18450+t18504);
float t18506 = (t18493*t18454);
float t18507 = (t18456+t18506);
vec3 t18508 = vec3(t18495,t18505,t18507);
float t18509 = length(t18508);
float t18510 = (t18509*t18509);
float t18511 = sqrt(t18510);
float t18512 = (t18511-float(2.6));
float t18513 = (t18512/float(11.4));
vec4 t18514 = texture(s4,vec2(t18503,t18513));
t18488 = t18514.x;
t18489 = t18514.y;
t18490 = t18514.z;
vec3 t18515 = vec3(t18514.x,t18514.y,t18514.z);
float t18516 = length(t18515);
float t18517 = (t18516*t18516);
float t18518 = (t18517/float(3.0));
bool t18519 = (t18518<=1);
float t18520;
if(t18519){
t18520 = t18518;
} else {
t18520 = 1;
}
bool t18521 = (t18520>=0);
float t18522;
if(t18521){
t18522 = t18520;
} else {
t18522 = 0;
}
t18491 = t18522;
} else {
t18488 = 0;
t18489 = 0;
t18490 = 0;
t18491 = 0;
}
float t18523 = (1-t18472);
float t18524 = (t18469*t18523);
float t18525 = (t18472+t18524);
float t18526 = (1-t18525);
float t18527 = (t18491*t18526);
float t18528 = (t18488*t18527);
float t18529 = (t18476+t18528);
float t18530 = (t115*t18444);
float t18531 = pow(t18459,float(2.5));
float t18532 = (t18530/t18531);
float t18533 = (t18532*t18442);
float t18534 = (t18441+t18533);
float t18535 = (t18442*u1.u4);
float t18536 = (t18534*t18535);
float t18537 = (t18444+t18536);
float t18538 = (t115*t18450);
float t18539 = (t18538/t18531);
float t18540 = (t18539*t18442);
float t18541 = (t18448+t18540);
float t18542 = (t18541*t18535);
float t18543 = (t18450+t18542);
float t18544 = (t115*t18456);
float t18545 = (t18544/t18531);
float t18546 = (t18545*t18442);
float t18547 = (t18454+t18546);
float t18548 = (t18547*t18535);
float t18549 = (t18456+t18548);
vec3 t18550 = vec3(t18537,t18543,t18549);
float t18551 = length(t18550);
float t18552 = (t18551*t18551);
bool t18553 = (t18552<1);
vec3 t18554 = vec3(t18444,t18450,t18456);
float t18555 = length(t18554);
float t18556 = (t18555*t18555);
bool t18557 = (t18556>1);
bool t18558 = (t18553&&t18557);
float t18559;
float t18560;
float t18561;
float t18562;
if(t18558){
t18559 = 0;
t18560 = 0;
t18561 = 0;
t18562 = 1;
} else {
t18559 = 0;
t18560 = 0;
t18561 = 0;
t18562 = 0;
}
float t18563 = (1-t18525);
float t18564 = (t18491*t18563);
float t18565 = (t18525+t18564);
float t18566 = (1-t18565);
float t18567 = (t18562*t18566);
float t18568 = (t18559*t18567);
float t18569 = (t18529+t18568);
bool t18570 = (t18450>0);
bool t18571 = (t18543>0);
bool t18572 = (!t18571);
bool t18573 = (t18570&&t18572);
bool t18574 = (!t18570);
bool t18575 = (t18571&&t18574);
bool t18576 = (t18573||t18575);
bool t18577 = (t18552<196);
bool t18578 = (t18552>float(6.76));
bool t18579 = (t18577&&t18578);
bool t18580 = (t18576&&t18579);
float t18581;
float t18582;
float t18583;
float t18584;
if(t18580){
float t18585 = (t18543/t18541);
float t18586 = (-t18585);
float t18587 = (t18586*t18534);
float t18588 = (t18537+t18587);
float t18589 = atan(t18588,t18549);
float t18590 = (u1.u0/30);
float t18591 = (t18589+t18590);
float t18592 = (2*3.1415927);
float t18593 = (t18591+t18592);
float t18594 = mod(t18593,2);
float t18595 = (t18594*3.1415927);
float t18596 = (t18595/t18592);
float t18597 = (t18586*t18541);
float t18598 = (t18543+t18597);
float t18599 = (t18586*t18547);
float t18600 = (t18549+t18599);
vec3 t18601 = vec3(t18588,t18598,t18600);
float t18602 = length(t18601);
float t18603 = (t18602*t18602);
float t18604 = sqrt(t18603);
float t18605 = (t18604-float(2.6));
float t18606 = (t18605/float(11.4));
vec4 t18607 = texture(s4,vec2(t18596,t18606));
t18581 = t18607.x;
t18582 = t18607.y;
t18583 = t18607.z;
vec3 t18608 = vec3(t18607.x,t18607.y,t18607.z);
float t18609 = length(t18608);
float t18610 = (t18609*t18609);
float t18611 = (t18610/float(3.0));
bool t18612 = (t18611<=1);
float t18613;
if(t18612){
t18613 = t18611;
} else {
t18613 = 1;
}
bool t18614 = (t18613>=0);
float t18615;
if(t18614){
t18615 = t18613;
} else {
t18615 = 0;
}
t18584 = t18615;
} else {
t18581 = 0;
t18582 = 0;
t18583 = 0;
t18584 = 0;
}
float t18616 = (1-t18565);
float t18617 = (t18562*t18616);
float t18618 = (t18565+t18617);
float t18619 = (1-t18618);
float t18620 = (t18584*t18619);
float t18621 = (t18581*t18620);
float t18622 = (t18569+t18621);
float t18623 = (t115*t18537);
float t18624 = pow(t18552,float(2.5));
float t18625 = (t18623/t18624);
float t18626 = (t18625*t18535);
float t18627 = (t18534+t18626);
float t18628 = (t18535*u1.u4);
float t18629 = (t18627*t18628);
float t18630 = (t18537+t18629);
float t18631 = (t115*t18543);
float t18632 = (t18631/t18624);
float t18633 = (t18632*t18535);
float t18634 = (t18541+t18633);
float t18635 = (t18634*t18628);
float t18636 = (t18543+t18635);
float t18637 = (t115*t18549);
float t18638 = (t18637/t18624);
float t18639 = (t18638*t18535);
float t18640 = (t18547+t18639);
float t18641 = (t18640*t18628);
float t18642 = (t18549+t18641);
vec3 t18643 = vec3(t18630,t18636,t18642);
float t18644 = length(t18643);
float t18645 = (t18644*t18644);
bool t18646 = (t18645<1);
vec3 t18647 = vec3(t18537,t18543,t18549);
float t18648 = length(t18647);
float t18649 = (t18648*t18648);
bool t18650 = (t18649>1);
bool t18651 = (t18646&&t18650);
float t18652;
float t18653;
float t18654;
float t18655;
if(t18651){
t18652 = 0;
t18653 = 0;
t18654 = 0;
t18655 = 1;
} else {
t18652 = 0;
t18653 = 0;
t18654 = 0;
t18655 = 0;
}
float t18656 = (1-t18618);
float t18657 = (t18584*t18656);
float t18658 = (t18618+t18657);
float t18659 = (1-t18658);
float t18660 = (t18655*t18659);
float t18661 = (t18652*t18660);
float t18662 = (t18622+t18661);
bool t18663 = (t18543>0);
bool t18664 = (t18636>0);
bool t18665 = (!t18664);
bool t18666 = (t18663&&t18665);
bool t18667 = (!t18663);
bool t18668 = (t18664&&t18667);
bool t18669 = (t18666||t18668);
bool t18670 = (t18645<196);
bool t18671 = (t18645>float(6.76));
bool t18672 = (t18670&&t18671);
bool t18673 = (t18669&&t18672);
float t18674;
float t18675;
float t18676;
float t18677;
if(t18673){
float t18678 = (t18636/t18634);
float t18679 = (-t18678);
float t18680 = (t18679*t18627);
float t18681 = (t18630+t18680);
float t18682 = atan(t18681,t18642);
float t18683 = (u1.u0/30);
float t18684 = (t18682+t18683);
float t18685 = (2*3.1415927);
float t18686 = (t18684+t18685);
float t18687 = mod(t18686,2);
float t18688 = (t18687*3.1415927);
float t18689 = (t18688/t18685);
float t18690 = (t18679*t18634);
float t18691 = (t18636+t18690);
float t18692 = (t18679*t18640);
float t18693 = (t18642+t18692);
vec3 t18694 = vec3(t18681,t18691,t18693);
float t18695 = length(t18694);
float t18696 = (t18695*t18695);
float t18697 = sqrt(t18696);
float t18698 = (t18697-float(2.6));
float t18699 = (t18698/float(11.4));
vec4 t18700 = texture(s4,vec2(t18689,t18699));
t18674 = t18700.x;
t18675 = t18700.y;
t18676 = t18700.z;
vec3 t18701 = vec3(t18700.x,t18700.y,t18700.z);
float t18702 = length(t18701);
float t18703 = (t18702*t18702);
float t18704 = (t18703/float(3.0));
bool t18705 = (t18704<=1);
float t18706;
if(t18705){
t18706 = t18704;
} else {
t18706 = 1;
}
bool t18707 = (t18706>=0);
float t18708;
if(t18707){
t18708 = t18706;
} else {
t18708 = 0;
}
t18677 = t18708;
} else {
t18674 = 0;
t18675 = 0;
t18676 = 0;
t18677 = 0;
}
float t18709 = (1-t18658);
float t18710 = (t18655*t18709);
float t18711 = (t18658+t18710);
float t18712 = (1-t18711);
float t18713 = (t18677*t18712);
float t18714 = (t18674*t18713);
float t18715 = (t18662+t18714);
float t18716 = (t115*t18630);
float t18717 = pow(t18645,float(2.5));
float t18718 = (t18716/t18717);
float t18719 = (t18718*t18628);
float t18720 = (t18627+t18719);
float t18721 = (t18628*u1.u4);
float t18722 = (t18720*t18721);
float t18723 = (t18630+t18722);
float t18724 = (t115*t18636);
float t18725 = (t18724/t18717);
float t18726 = (t18725*t18628);
float t18727 = (t18634+t18726);
float t18728 = (t18727*t18721);
float t18729 = (t18636+t18728);
float t18730 = (t115*t18642);
float t18731 = (t18730/t18717);
float t18732 = (t18731*t18628);
float t18733 = (t18640+t18732);
float t18734 = (t18733*t18721);
float t18735 = (t18642+t18734);
vec3 t18736 = vec3(t18723,t18729,t18735);
float t18737 = length(t18736);
float t18738 = (t18737*t18737);
bool t18739 = (t18738<1);
vec3 t18740 = vec3(t18630,t18636,t18642);
float t18741 = length(t18740);
float t18742 = (t18741*t18741);
bool t18743 = (t18742>1);
bool t18744 = (t18739&&t18743);
float t18745;
float t18746;
float t18747;
float t18748;
if(t18744){
t18745 = 0;
t18746 = 0;
t18747 = 0;
t18748 = 1;
} else {
t18745 = 0;
t18746 = 0;
t18747 = 0;
t18748 = 0;
}
float t18749 = (1-t18711);
float t18750 = (t18677*t18749);
float t18751 = (t18711+t18750);
float t18752 = (1-t18751);
float t18753 = (t18748*t18752);
float t18754 = (t18745*t18753);
float t18755 = (t18715+t18754);
bool t18756 = (t18636>0);
bool t18757 = (t18729>0);
bool t18758 = (!t18757);
bool t18759 = (t18756&&t18758);
bool t18760 = (!t18756);
bool t18761 = (t18757&&t18760);
bool t18762 = (t18759||t18761);
bool t18763 = (t18738<196);
bool t18764 = (t18738>float(6.76));
bool t18765 = (t18763&&t18764);
bool t18766 = (t18762&&t18765);
float t18767;
float t18768;
float t18769;
float t18770;
if(t18766){
float t18771 = (t18729/t18727);
float t18772 = (-t18771);
float t18773 = (t18772*t18720);
float t18774 = (t18723+t18773);
float t18775 = atan(t18774,t18735);
float t18776 = (u1.u0/30);
float t18777 = (t18775+t18776);
float t18778 = (2*3.1415927);
float t18779 = (t18777+t18778);
float t18780 = mod(t18779,2);
float t18781 = (t18780*3.1415927);
float t18782 = (t18781/t18778);
float t18783 = (t18772*t18727);
float t18784 = (t18729+t18783);
float t18785 = (t18772*t18733);
float t18786 = (t18735+t18785);
vec3 t18787 = vec3(t18774,t18784,t18786);
float t18788 = length(t18787);
float t18789 = (t18788*t18788);
float t18790 = sqrt(t18789);
float t18791 = (t18790-float(2.6));
float t18792 = (t18791/float(11.4));
vec4 t18793 = texture(s4,vec2(t18782,t18792));
t18767 = t18793.x;
t18768 = t18793.y;
t18769 = t18793.z;
vec3 t18794 = vec3(t18793.x,t18793.y,t18793.z);
float t18795 = length(t18794);
float t18796 = (t18795*t18795);
float t18797 = (t18796/float(3.0));
bool t18798 = (t18797<=1);
float t18799;
if(t18798){
t18799 = t18797;
} else {
t18799 = 1;
}
bool t18800 = (t18799>=0);
float t18801;
if(t18800){
t18801 = t18799;
} else {
t18801 = 0;
}
t18770 = t18801;
} else {
t18767 = 0;
t18768 = 0;
t18769 = 0;
t18770 = 0;
}
float t18802 = (1-t18751);
float t18803 = (t18748*t18802);
float t18804 = (t18751+t18803);
float t18805 = (1-t18804);
float t18806 = (t18770*t18805);
float t18807 = (t18767*t18806);
float t18808 = (t18755+t18807);
float t18809 = (t115*t18723);
float t18810 = pow(t18738,float(2.5));
float t18811 = (t18809/t18810);
float t18812 = (t18811*t18721);
float t18813 = (t18720+t18812);
float t18814 = (t18721*u1.u4);
float t18815 = (t18813*t18814);
float t18816 = (t18723+t18815);
float t18817 = (t115*t18729);
float t18818 = (t18817/t18810);
float t18819 = (t18818*t18721);
float t18820 = (t18727+t18819);
float t18821 = (t18820*t18814);
float t18822 = (t18729+t18821);
float t18823 = (t115*t18735);
float t18824 = (t18823/t18810);
float t18825 = (t18824*t18721);
float t18826 = (t18733+t18825);
float t18827 = (t18826*t18814);
float t18828 = (t18735+t18827);
vec3 t18829 = vec3(t18816,t18822,t18828);
float t18830 = length(t18829);
float t18831 = (t18830*t18830);
bool t18832 = (t18831<1);
vec3 t18833 = vec3(t18723,t18729,t18735);
float t18834 = length(t18833);
float t18835 = (t18834*t18834);
bool t18836 = (t18835>1);
bool t18837 = (t18832&&t18836);
float t18838;
float t18839;
float t18840;
float t18841;
if(t18837){
t18838 = 0;
t18839 = 0;
t18840 = 0;
t18841 = 1;
} else {
t18838 = 0;
t18839 = 0;
t18840 = 0;
t18841 = 0;
}
float t18842 = (1-t18804);
float t18843 = (t18770*t18842);
float t18844 = (t18804+t18843);
float t18845 = (1-t18844);
float t18846 = (t18841*t18845);
float t18847 = (t18838*t18846);
float t18848 = (t18808+t18847);
bool t18849 = (t18729>0);
bool t18850 = (t18822>0);
bool t18851 = (!t18850);
bool t18852 = (t18849&&t18851);
bool t18853 = (!t18849);
bool t18854 = (t18850&&t18853);
bool t18855 = (t18852||t18854);
bool t18856 = (t18831<196);
bool t18857 = (t18831>float(6.76));
bool t18858 = (t18856&&t18857);
bool t18859 = (t18855&&t18858);
float t18860;
float t18861;
float t18862;
float t18863;
if(t18859){
float t18864 = (t18822/t18820);
float t18865 = (-t18864);
float t18866 = (t18865*t18813);
float t18867 = (t18816+t18866);
float t18868 = atan(t18867,t18828);
float t18869 = (u1.u0/30);
float t18870 = (t18868+t18869);
float t18871 = (2*3.1415927);
float t18872 = (t18870+t18871);
float t18873 = mod(t18872,2);
float t18874 = (t18873*3.1415927);
float t18875 = (t18874/t18871);
float t18876 = (t18865*t18820);
float t18877 = (t18822+t18876);
float t18878 = (t18865*t18826);
float t18879 = (t18828+t18878);
vec3 t18880 = vec3(t18867,t18877,t18879);
float t18881 = length(t18880);
float t18882 = (t18881*t18881);
float t18883 = sqrt(t18882);
float t18884 = (t18883-float(2.6));
float t18885 = (t18884/float(11.4));
vec4 t18886 = texture(s4,vec2(t18875,t18885));
t18860 = t18886.x;
t18861 = t18886.y;
t18862 = t18886.z;
vec3 t18887 = vec3(t18886.x,t18886.y,t18886.z);
float t18888 = length(t18887);
float t18889 = (t18888*t18888);
float t18890 = (t18889/float(3.0));
bool t18891 = (t18890<=1);
float t18892;
if(t18891){
t18892 = t18890;
} else {
t18892 = 1;
}
bool t18893 = (t18892>=0);
float t18894;
if(t18893){
t18894 = t18892;
} else {
t18894 = 0;
}
t18863 = t18894;
} else {
t18860 = 0;
t18861 = 0;
t18862 = 0;
t18863 = 0;
}
float t18895 = (1-t18844);
float t18896 = (t18841*t18895);
float t18897 = (t18844+t18896);
float t18898 = (1-t18897);
float t18899 = (t18863*t18898);
float t18900 = (t18860*t18899);
float t18901 = (t18848+t18900);
float t18902 = (t115*t18816);
float t18903 = pow(t18831,float(2.5));
float t18904 = (t18902/t18903);
float t18905 = (t18904*t18814);
float t18906 = (t18813+t18905);
float t18907 = (t18814*u1.u4);
float t18908 = (t18906*t18907);
float t18909 = (t18816+t18908);
float t18910 = (t115*t18822);
float t18911 = (t18910/t18903);
float t18912 = (t18911*t18814);
float t18913 = (t18820+t18912);
float t18914 = (t18913*t18907);
float t18915 = (t18822+t18914);
float t18916 = (t115*t18828);
float t18917 = (t18916/t18903);
float t18918 = (t18917*t18814);
float t18919 = (t18826+t18918);
float t18920 = (t18919*t18907);
float t18921 = (t18828+t18920);
vec3 t18922 = vec3(t18909,t18915,t18921);
float t18923 = length(t18922);
float t18924 = (t18923*t18923);
bool t18925 = (t18924<1);
vec3 t18926 = vec3(t18816,t18822,t18828);
float t18927 = length(t18926);
float t18928 = (t18927*t18927);
bool t18929 = (t18928>1);
bool t18930 = (t18925&&t18929);
float t18931;
float t18932;
float t18933;
float t18934;
if(t18930){
t18931 = 0;
t18932 = 0;
t18933 = 0;
t18934 = 1;
} else {
t18931 = 0;
t18932 = 0;
t18933 = 0;
t18934 = 0;
}
float t18935 = (1-t18897);
float t18936 = (t18863*t18935);
float t18937 = (t18897+t18936);
float t18938 = (1-t18937);
float t18939 = (t18934*t18938);
float t18940 = (t18931*t18939);
float t18941 = (t18901+t18940);
bool t18942 = (t18822>0);
bool t18943 = (t18915>0);
bool t18944 = (!t18943);
bool t18945 = (t18942&&t18944);
bool t18946 = (!t18942);
bool t18947 = (t18943&&t18946);
bool t18948 = (t18945||t18947);
bool t18949 = (t18924<196);
bool t18950 = (t18924>float(6.76));
bool t18951 = (t18949&&t18950);
bool t18952 = (t18948&&t18951);
float t18953;
float t18954;
float t18955;
float t18956;
if(t18952){
float t18957 = (t18915/t18913);
float t18958 = (-t18957);
float t18959 = (t18958*t18906);
float t18960 = (t18909+t18959);
float t18961 = atan(t18960,t18921);
float t18962 = (u1.u0/30);
float t18963 = (t18961+t18962);
float t18964 = (2*3.1415927);
float t18965 = (t18963+t18964);
float t18966 = mod(t18965,2);
float t18967 = (t18966*3.1415927);
float t18968 = (t18967/t18964);
float t18969 = (t18958*t18913);
float t18970 = (t18915+t18969);
float t18971 = (t18958*t18919);
float t18972 = (t18921+t18971);
vec3 t18973 = vec3(t18960,t18970,t18972);
float t18974 = length(t18973);
float t18975 = (t18974*t18974);
float t18976 = sqrt(t18975);
float t18977 = (t18976-float(2.6));
float t18978 = (t18977/float(11.4));
vec4 t18979 = texture(s4,vec2(t18968,t18978));
t18953 = t18979.x;
t18954 = t18979.y;
t18955 = t18979.z;
vec3 t18980 = vec3(t18979.x,t18979.y,t18979.z);
float t18981 = length(t18980);
float t18982 = (t18981*t18981);
float t18983 = (t18982/float(3.0));
bool t18984 = (t18983<=1);
float t18985;
if(t18984){
t18985 = t18983;
} else {
t18985 = 1;
}
bool t18986 = (t18985>=0);
float t18987;
if(t18986){
t18987 = t18985;
} else {
t18987 = 0;
}
t18956 = t18987;
} else {
t18953 = 0;
t18954 = 0;
t18955 = 0;
t18956 = 0;
}
float t18988 = (1-t18937);
float t18989 = (t18934*t18988);
float t18990 = (t18937+t18989);
float t18991 = (1-t18990);
float t18992 = (t18956*t18991);
float t18993 = (t18953*t18992);
float t18994 = (t18941+t18993);
float t18995 = (t115*t18909);
float t18996 = pow(t18924,float(2.5));
float t18997 = (t18995/t18996);
float t18998 = (t18997*t18907);
float t18999 = (t18906+t18998);
float t19000 = (t18907*u1.u4);
float t19001 = (t18999*t19000);
float t19002 = (t18909+t19001);
float t19003 = (t115*t18915);
float t19004 = (t19003/t18996);
float t19005 = (t19004*t18907);
float t19006 = (t18913+t19005);
float t19007 = (t19006*t19000);
float t19008 = (t18915+t19007);
float t19009 = (t115*t18921);
float t19010 = (t19009/t18996);
float t19011 = (t19010*t18907);
float t19012 = (t18919+t19011);
float t19013 = (t19012*t19000);
float t19014 = (t18921+t19013);
vec3 t19015 = vec3(t19002,t19008,t19014);
float t19016 = length(t19015);
float t19017 = (t19016*t19016);
bool t19018 = (t19017<1);
vec3 t19019 = vec3(t18909,t18915,t18921);
float t19020 = length(t19019);
float t19021 = (t19020*t19020);
bool t19022 = (t19021>1);
bool t19023 = (t19018&&t19022);
float t19024;
float t19025;
float t19026;
float t19027;
if(t19023){
t19024 = 0;
t19025 = 0;
t19026 = 0;
t19027 = 1;
} else {
t19024 = 0;
t19025 = 0;
t19026 = 0;
t19027 = 0;
}
float t19028 = (1-t18990);
float t19029 = (t18956*t19028);
float t19030 = (t18990+t19029);
float t19031 = (1-t19030);
float t19032 = (t19027*t19031);
float t19033 = (t19024*t19032);
float t19034 = (t18994+t19033);
bool t19035 = (t18915>0);
bool t19036 = (t19008>0);
bool t19037 = (!t19036);
bool t19038 = (t19035&&t19037);
bool t19039 = (!t19035);
bool t19040 = (t19036&&t19039);
bool t19041 = (t19038||t19040);
bool t19042 = (t19017<196);
bool t19043 = (t19017>float(6.76));
bool t19044 = (t19042&&t19043);
bool t19045 = (t19041&&t19044);
float t19046;
float t19047;
float t19048;
float t19049;
if(t19045){
float t19050 = (t19008/t19006);
float t19051 = (-t19050);
float t19052 = (t19051*t18999);
float t19053 = (t19002+t19052);
float t19054 = atan(t19053,t19014);
float t19055 = (u1.u0/30);
float t19056 = (t19054+t19055);
float t19057 = (2*3.1415927);
float t19058 = (t19056+t19057);
float t19059 = mod(t19058,2);
float t19060 = (t19059*3.1415927);
float t19061 = (t19060/t19057);
float t19062 = (t19051*t19006);
float t19063 = (t19008+t19062);
float t19064 = (t19051*t19012);
float t19065 = (t19014+t19064);
vec3 t19066 = vec3(t19053,t19063,t19065);
float t19067 = length(t19066);
float t19068 = (t19067*t19067);
float t19069 = sqrt(t19068);
float t19070 = (t19069-float(2.6));
float t19071 = (t19070/float(11.4));
vec4 t19072 = texture(s4,vec2(t19061,t19071));
t19046 = t19072.x;
t19047 = t19072.y;
t19048 = t19072.z;
vec3 t19073 = vec3(t19072.x,t19072.y,t19072.z);
float t19074 = length(t19073);
float t19075 = (t19074*t19074);
float t19076 = (t19075/float(3.0));
bool t19077 = (t19076<=1);
float t19078;
if(t19077){
t19078 = t19076;
} else {
t19078 = 1;
}
bool t19079 = (t19078>=0);
float t19080;
if(t19079){
t19080 = t19078;
} else {
t19080 = 0;
}
t19049 = t19080;
} else {
t19046 = 0;
t19047 = 0;
t19048 = 0;
t19049 = 0;
}
float t19081 = (1-t19030);
float t19082 = (t19027*t19081);
float t19083 = (t19030+t19082);
float t19084 = (1-t19083);
float t19085 = (t19049*t19084);
float t19086 = (t19046*t19085);
float t19087 = (t19034+t19086);
float t19088 = (t115*t19002);
float t19089 = pow(t19017,float(2.5));
float t19090 = (t19088/t19089);
float t19091 = (t19090*t19000);
float t19092 = (t18999+t19091);
float t19093 = (t19000*u1.u4);
float t19094 = (t19092*t19093);
float t19095 = (t19002+t19094);
float t19096 = (t115*t19008);
float t19097 = (t19096/t19089);
float t19098 = (t19097*t19000);
float t19099 = (t19006+t19098);
float t19100 = (t19099*t19093);
float t19101 = (t19008+t19100);
float t19102 = (t115*t19014);
float t19103 = (t19102/t19089);
float t19104 = (t19103*t19000);
float t19105 = (t19012+t19104);
float t19106 = (t19105*t19093);
float t19107 = (t19014+t19106);
vec3 t19108 = vec3(t19095,t19101,t19107);
float t19109 = length(t19108);
float t19110 = (t19109*t19109);
bool t19111 = (t19110<1);
vec3 t19112 = vec3(t19002,t19008,t19014);
float t19113 = length(t19112);
float t19114 = (t19113*t19113);
bool t19115 = (t19114>1);
bool t19116 = (t19111&&t19115);
float t19117;
float t19118;
float t19119;
float t19120;
if(t19116){
t19117 = 0;
t19118 = 0;
t19119 = 0;
t19120 = 1;
} else {
t19117 = 0;
t19118 = 0;
t19119 = 0;
t19120 = 0;
}
float t19121 = (1-t19083);
float t19122 = (t19049*t19121);
float t19123 = (t19083+t19122);
float t19124 = (1-t19123);
float t19125 = (t19120*t19124);
float t19126 = (t19117*t19125);
float t19127 = (t19087+t19126);
bool t19128 = (t19008>0);
bool t19129 = (t19101>0);
bool t19130 = (!t19129);
bool t19131 = (t19128&&t19130);
bool t19132 = (!t19128);
bool t19133 = (t19129&&t19132);
bool t19134 = (t19131||t19133);
bool t19135 = (t19110<196);
bool t19136 = (t19110>float(6.76));
bool t19137 = (t19135&&t19136);
bool t19138 = (t19134&&t19137);
float t19139;
float t19140;
float t19141;
float t19142;
if(t19138){
float t19143 = (t19101/t19099);
float t19144 = (-t19143);
float t19145 = (t19144*t19092);
float t19146 = (t19095+t19145);
float t19147 = atan(t19146,t19107);
float t19148 = (u1.u0/30);
float t19149 = (t19147+t19148);
float t19150 = (2*3.1415927);
float t19151 = (t19149+t19150);
float t19152 = mod(t19151,2);
float t19153 = (t19152*3.1415927);
float t19154 = (t19153/t19150);
float t19155 = (t19144*t19099);
float t19156 = (t19101+t19155);
float t19157 = (t19144*t19105);
float t19158 = (t19107+t19157);
vec3 t19159 = vec3(t19146,t19156,t19158);
float t19160 = length(t19159);
float t19161 = (t19160*t19160);
float t19162 = sqrt(t19161);
float t19163 = (t19162-float(2.6));
float t19164 = (t19163/float(11.4));
vec4 t19165 = texture(s4,vec2(t19154,t19164));
t19139 = t19165.x;
t19140 = t19165.y;
t19141 = t19165.z;
vec3 t19166 = vec3(t19165.x,t19165.y,t19165.z);
float t19167 = length(t19166);
float t19168 = (t19167*t19167);
float t19169 = (t19168/float(3.0));
bool t19170 = (t19169<=1);
float t19171;
if(t19170){
t19171 = t19169;
} else {
t19171 = 1;
}
bool t19172 = (t19171>=0);
float t19173;
if(t19172){
t19173 = t19171;
} else {
t19173 = 0;
}
t19142 = t19173;
} else {
t19139 = 0;
t19140 = 0;
t19141 = 0;
t19142 = 0;
}
float t19174 = (1-t19123);
float t19175 = (t19120*t19174);
float t19176 = (t19123+t19175);
float t19177 = (1-t19176);
float t19178 = (t19142*t19177);
float t19179 = (t19139*t19178);
float t19180 = (t19127+t19179);
float t19181 = (t115*t19095);
float t19182 = pow(t19110,float(2.5));
float t19183 = (t19181/t19182);
float t19184 = (t19183*t19093);
float t19185 = (t19092+t19184);
float t19186 = (t19093*u1.u4);
float t19187 = (t19185*t19186);
float t19188 = (t19095+t19187);
float t19189 = (t115*t19101);
float t19190 = (t19189/t19182);
float t19191 = (t19190*t19093);
float t19192 = (t19099+t19191);
float t19193 = (t19192*t19186);
float t19194 = (t19101+t19193);
float t19195 = (t115*t19107);
float t19196 = (t19195/t19182);
float t19197 = (t19196*t19093);
float t19198 = (t19105+t19197);
float t19199 = (t19198*t19186);
float t19200 = (t19107+t19199);
vec3 t19201 = vec3(t19188,t19194,t19200);
float t19202 = length(t19201);
float t19203 = (t19202*t19202);
bool t19204 = (t19203<1);
vec3 t19205 = vec3(t19095,t19101,t19107);
float t19206 = length(t19205);
float t19207 = (t19206*t19206);
bool t19208 = (t19207>1);
bool t19209 = (t19204&&t19208);
float t19210;
float t19211;
float t19212;
float t19213;
if(t19209){
t19210 = 0;
t19211 = 0;
t19212 = 0;
t19213 = 1;
} else {
t19210 = 0;
t19211 = 0;
t19212 = 0;
t19213 = 0;
}
float t19214 = (1-t19176);
float t19215 = (t19142*t19214);
float t19216 = (t19176+t19215);
float t19217 = (1-t19216);
float t19218 = (t19213*t19217);
float t19219 = (t19210*t19218);
float t19220 = (t19180+t19219);
bool t19221 = (t19101>0);
bool t19222 = (t19194>0);
bool t19223 = (!t19222);
bool t19224 = (t19221&&t19223);
bool t19225 = (!t19221);
bool t19226 = (t19222&&t19225);
bool t19227 = (t19224||t19226);
bool t19228 = (t19203<196);
bool t19229 = (t19203>float(6.76));
bool t19230 = (t19228&&t19229);
bool t19231 = (t19227&&t19230);
float t19232;
float t19233;
float t19234;
float t19235;
if(t19231){
float t19236 = (t19194/t19192);
float t19237 = (-t19236);
float t19238 = (t19237*t19185);
float t19239 = (t19188+t19238);
float t19240 = atan(t19239,t19200);
float t19241 = (u1.u0/30);
float t19242 = (t19240+t19241);
float t19243 = (2*3.1415927);
float t19244 = (t19242+t19243);
float t19245 = mod(t19244,2);
float t19246 = (t19245*3.1415927);
float t19247 = (t19246/t19243);
float t19248 = (t19237*t19192);
float t19249 = (t19194+t19248);
float t19250 = (t19237*t19198);
float t19251 = (t19200+t19250);
vec3 t19252 = vec3(t19239,t19249,t19251);
float t19253 = length(t19252);
float t19254 = (t19253*t19253);
float t19255 = sqrt(t19254);
float t19256 = (t19255-float(2.6));
float t19257 = (t19256/float(11.4));
vec4 t19258 = texture(s4,vec2(t19247,t19257));
t19232 = t19258.x;
t19233 = t19258.y;
t19234 = t19258.z;
vec3 t19259 = vec3(t19258.x,t19258.y,t19258.z);
float t19260 = length(t19259);
float t19261 = (t19260*t19260);
float t19262 = (t19261/float(3.0));
bool t19263 = (t19262<=1);
float t19264;
if(t19263){
t19264 = t19262;
} else {
t19264 = 1;
}
bool t19265 = (t19264>=0);
float t19266;
if(t19265){
t19266 = t19264;
} else {
t19266 = 0;
}
t19235 = t19266;
} else {
t19232 = 0;
t19233 = 0;
t19234 = 0;
t19235 = 0;
}
float t19267 = (1-t19216);
float t19268 = (t19213*t19267);
float t19269 = (t19216+t19268);
float t19270 = (1-t19269);
float t19271 = (t19235*t19270);
float t19272 = (t19232*t19271);
float t19273 = (t19220+t19272);
float t19274 = (t115*t19188);
float t19275 = pow(t19203,float(2.5));
float t19276 = (t19274/t19275);
float t19277 = (t19276*t19186);
float t19278 = (t19185+t19277);
float t19279 = (t19186*u1.u4);
float t19280 = (t19278*t19279);
float t19281 = (t19188+t19280);
float t19282 = (t115*t19194);
float t19283 = (t19282/t19275);
float t19284 = (t19283*t19186);
float t19285 = (t19192+t19284);
float t19286 = (t19285*t19279);
float t19287 = (t19194+t19286);
float t19288 = (t115*t19200);
float t19289 = (t19288/t19275);
float t19290 = (t19289*t19186);
float t19291 = (t19198+t19290);
float t19292 = (t19291*t19279);
float t19293 = (t19200+t19292);
vec3 t19294 = vec3(t19281,t19287,t19293);
float t19295 = length(t19294);
float t19296 = (t19295*t19295);
bool t19297 = (t19296<1);
vec3 t19298 = vec3(t19188,t19194,t19200);
float t19299 = length(t19298);
float t19300 = (t19299*t19299);
bool t19301 = (t19300>1);
bool t19302 = (t19297&&t19301);
float t19303;
float t19304;
float t19305;
float t19306;
if(t19302){
t19303 = 0;
t19304 = 0;
t19305 = 0;
t19306 = 1;
} else {
t19303 = 0;
t19304 = 0;
t19305 = 0;
t19306 = 0;
}
float t19307 = (1-t19269);
float t19308 = (t19235*t19307);
float t19309 = (t19269+t19308);
float t19310 = (1-t19309);
float t19311 = (t19306*t19310);
float t19312 = (t19303*t19311);
float t19313 = (t19273+t19312);
bool t19314 = (t19194>0);
bool t19315 = (t19287>0);
bool t19316 = (!t19315);
bool t19317 = (t19314&&t19316);
bool t19318 = (!t19314);
bool t19319 = (t19315&&t19318);
bool t19320 = (t19317||t19319);
bool t19321 = (t19296<196);
bool t19322 = (t19296>float(6.76));
bool t19323 = (t19321&&t19322);
bool t19324 = (t19320&&t19323);
float t19325;
float t19326;
float t19327;
float t19328;
if(t19324){
float t19329 = (t19287/t19285);
float t19330 = (-t19329);
float t19331 = (t19330*t19278);
float t19332 = (t19281+t19331);
float t19333 = atan(t19332,t19293);
float t19334 = (u1.u0/30);
float t19335 = (t19333+t19334);
float t19336 = (2*3.1415927);
float t19337 = (t19335+t19336);
float t19338 = mod(t19337,2);
float t19339 = (t19338*3.1415927);
float t19340 = (t19339/t19336);
float t19341 = (t19330*t19285);
float t19342 = (t19287+t19341);
float t19343 = (t19330*t19291);
float t19344 = (t19293+t19343);
vec3 t19345 = vec3(t19332,t19342,t19344);
float t19346 = length(t19345);
float t19347 = (t19346*t19346);
float t19348 = sqrt(t19347);
float t19349 = (t19348-float(2.6));
float t19350 = (t19349/float(11.4));
vec4 t19351 = texture(s4,vec2(t19340,t19350));
t19325 = t19351.x;
t19326 = t19351.y;
t19327 = t19351.z;
vec3 t19352 = vec3(t19351.x,t19351.y,t19351.z);
float t19353 = length(t19352);
float t19354 = (t19353*t19353);
float t19355 = (t19354/float(3.0));
bool t19356 = (t19355<=1);
float t19357;
if(t19356){
t19357 = t19355;
} else {
t19357 = 1;
}
bool t19358 = (t19357>=0);
float t19359;
if(t19358){
t19359 = t19357;
} else {
t19359 = 0;
}
t19328 = t19359;
} else {
t19325 = 0;
t19326 = 0;
t19327 = 0;
t19328 = 0;
}
float t19360 = (1-t19309);
float t19361 = (t19306*t19360);
float t19362 = (t19309+t19361);
float t19363 = (1-t19362);
float t19364 = (t19328*t19363);
float t19365 = (t19325*t19364);
float t19366 = (t19313+t19365);
float t19367 = (t115*t19281);
float t19368 = pow(t19296,float(2.5));
float t19369 = (t19367/t19368);
float t19370 = (t19369*t19279);
float t19371 = (t19278+t19370);
float t19372 = (t19279*u1.u4);
float t19373 = (t19371*t19372);
float t19374 = (t19281+t19373);
float t19375 = (t115*t19287);
float t19376 = (t19375/t19368);
float t19377 = (t19376*t19279);
float t19378 = (t19285+t19377);
float t19379 = (t19378*t19372);
float t19380 = (t19287+t19379);
float t19381 = (t115*t19293);
float t19382 = (t19381/t19368);
float t19383 = (t19382*t19279);
float t19384 = (t19291+t19383);
float t19385 = (t19384*t19372);
float t19386 = (t19293+t19385);
vec3 t19387 = vec3(t19374,t19380,t19386);
float t19388 = length(t19387);
float t19389 = (t19388*t19388);
bool t19390 = (t19389<1);
vec3 t19391 = vec3(t19281,t19287,t19293);
float t19392 = length(t19391);
float t19393 = (t19392*t19392);
bool t19394 = (t19393>1);
bool t19395 = (t19390&&t19394);
float t19396;
float t19397;
float t19398;
float t19399;
if(t19395){
t19396 = 0;
t19397 = 0;
t19398 = 0;
t19399 = 1;
} else {
t19396 = 0;
t19397 = 0;
t19398 = 0;
t19399 = 0;
}
float t19400 = (1-t19362);
float t19401 = (t19328*t19400);
float t19402 = (t19362+t19401);
float t19403 = (1-t19402);
float t19404 = (t19399*t19403);
float t19405 = (t19396*t19404);
float t19406 = (t19366+t19405);
bool t19407 = (t19287>0);
bool t19408 = (t19380>0);
bool t19409 = (!t19408);
bool t19410 = (t19407&&t19409);
bool t19411 = (!t19407);
bool t19412 = (t19408&&t19411);
bool t19413 = (t19410||t19412);
bool t19414 = (t19389<196);
bool t19415 = (t19389>float(6.76));
bool t19416 = (t19414&&t19415);
bool t19417 = (t19413&&t19416);
float t19418;
float t19419;
float t19420;
float t19421;
if(t19417){
float t19422 = (t19380/t19378);
float t19423 = (-t19422);
float t19424 = (t19423*t19371);
float t19425 = (t19374+t19424);
float t19426 = atan(t19425,t19386);
float t19427 = (u1.u0/30);
float t19428 = (t19426+t19427);
float t19429 = (2*3.1415927);
float t19430 = (t19428+t19429);
float t19431 = mod(t19430,2);
float t19432 = (t19431*3.1415927);
float t19433 = (t19432/t19429);
float t19434 = (t19423*t19378);
float t19435 = (t19380+t19434);
float t19436 = (t19423*t19384);
float t19437 = (t19386+t19436);
vec3 t19438 = vec3(t19425,t19435,t19437);
float t19439 = length(t19438);
float t19440 = (t19439*t19439);
float t19441 = sqrt(t19440);
float t19442 = (t19441-float(2.6));
float t19443 = (t19442/float(11.4));
vec4 t19444 = texture(s4,vec2(t19433,t19443));
t19418 = t19444.x;
t19419 = t19444.y;
t19420 = t19444.z;
vec3 t19445 = vec3(t19444.x,t19444.y,t19444.z);
float t19446 = length(t19445);
float t19447 = (t19446*t19446);
float t19448 = (t19447/float(3.0));
bool t19449 = (t19448<=1);
float t19450;
if(t19449){
t19450 = t19448;
} else {
t19450 = 1;
}
bool t19451 = (t19450>=0);
float t19452;
if(t19451){
t19452 = t19450;
} else {
t19452 = 0;
}
t19421 = t19452;
} else {
t19418 = 0;
t19419 = 0;
t19420 = 0;
t19421 = 0;
}
float t19453 = (1-t19402);
float t19454 = (t19399*t19453);
float t19455 = (t19402+t19454);
float t19456 = (1-t19455);
float t19457 = (t19421*t19456);
float t19458 = (t19418*t19457);
float t19459 = (t19406+t19458);
float t19460 = (t115*t19374);
float t19461 = pow(t19389,float(2.5));
float t19462 = (t19460/t19461);
float t19463 = (t19462*t19372);
float t19464 = (t19371+t19463);
float t19465 = (t19372*u1.u4);
float t19466 = (t19464*t19465);
float t19467 = (t19374+t19466);
float t19468 = (t115*t19380);
float t19469 = (t19468/t19461);
float t19470 = (t19469*t19372);
float t19471 = (t19378+t19470);
float t19472 = (t19471*t19465);
float t19473 = (t19380+t19472);
float t19474 = (t115*t19386);
float t19475 = (t19474/t19461);
float t19476 = (t19475*t19372);
float t19477 = (t19384+t19476);
float t19478 = (t19477*t19465);
float t19479 = (t19386+t19478);
vec3 t19480 = vec3(t19467,t19473,t19479);
float t19481 = length(t19480);
float t19482 = (t19481*t19481);
bool t19483 = (t19482<1);
vec3 t19484 = vec3(t19374,t19380,t19386);
float t19485 = length(t19484);
float t19486 = (t19485*t19485);
bool t19487 = (t19486>1);
bool t19488 = (t19483&&t19487);
float t19489;
float t19490;
float t19491;
float t19492;
if(t19488){
t19489 = 0;
t19490 = 0;
t19491 = 0;
t19492 = 1;
} else {
t19489 = 0;
t19490 = 0;
t19491 = 0;
t19492 = 0;
}
float t19493 = (1-t19455);
float t19494 = (t19421*t19493);
float t19495 = (t19455+t19494);
float t19496 = (1-t19495);
float t19497 = (t19492*t19496);
float t19498 = (t19489*t19497);
float t19499 = (t19459+t19498);
bool t19500 = (t19380>0);
bool t19501 = (t19473>0);
bool t19502 = (!t19501);
bool t19503 = (t19500&&t19502);
bool t19504 = (!t19500);
bool t19505 = (t19501&&t19504);
bool t19506 = (t19503||t19505);
bool t19507 = (t19482<196);
bool t19508 = (t19482>float(6.76));
bool t19509 = (t19507&&t19508);
bool t19510 = (t19506&&t19509);
float t19511;
float t19512;
float t19513;
float t19514;
if(t19510){
float t19515 = (t19473/t19471);
float t19516 = (-t19515);
float t19517 = (t19516*t19464);
float t19518 = (t19467+t19517);
float t19519 = atan(t19518,t19479);
float t19520 = (u1.u0/30);
float t19521 = (t19519+t19520);
float t19522 = (2*3.1415927);
float t19523 = (t19521+t19522);
float t19524 = mod(t19523,2);
float t19525 = (t19524*3.1415927);
float t19526 = (t19525/t19522);
float t19527 = (t19516*t19471);
float t19528 = (t19473+t19527);
float t19529 = (t19516*t19477);
float t19530 = (t19479+t19529);
vec3 t19531 = vec3(t19518,t19528,t19530);
float t19532 = length(t19531);
float t19533 = (t19532*t19532);
float t19534 = sqrt(t19533);
float t19535 = (t19534-float(2.6));
float t19536 = (t19535/float(11.4));
vec4 t19537 = texture(s4,vec2(t19526,t19536));
t19511 = t19537.x;
t19512 = t19537.y;
t19513 = t19537.z;
vec3 t19538 = vec3(t19537.x,t19537.y,t19537.z);
float t19539 = length(t19538);
float t19540 = (t19539*t19539);
float t19541 = (t19540/float(3.0));
bool t19542 = (t19541<=1);
float t19543;
if(t19542){
t19543 = t19541;
} else {
t19543 = 1;
}
bool t19544 = (t19543>=0);
float t19545;
if(t19544){
t19545 = t19543;
} else {
t19545 = 0;
}
t19514 = t19545;
} else {
t19511 = 0;
t19512 = 0;
t19513 = 0;
t19514 = 0;
}
float t19546 = (1-t19495);
float t19547 = (t19492*t19546);
float t19548 = (t19495+t19547);
float t19549 = (1-t19548);
float t19550 = (t19514*t19549);
float t19551 = (t19511*t19550);
float t19552 = (t19499+t19551);
float t19553 = (t115*t19467);
float t19554 = pow(t19482,float(2.5));
float t19555 = (t19553/t19554);
float t19556 = (t19555*t19465);
float t19557 = (t19464+t19556);
float t19558 = (t19465*u1.u4);
float t19559 = (t19557*t19558);
float t19560 = (t19467+t19559);
float t19561 = (t115*t19473);
float t19562 = (t19561/t19554);
float t19563 = (t19562*t19465);
float t19564 = (t19471+t19563);
float t19565 = (t19564*t19558);
float t19566 = (t19473+t19565);
float t19567 = (t115*t19479);
float t19568 = (t19567/t19554);
float t19569 = (t19568*t19465);
float t19570 = (t19477+t19569);
float t19571 = (t19570*t19558);
float t19572 = (t19479+t19571);
vec3 t19573 = vec3(t19560,t19566,t19572);
float t19574 = length(t19573);
float t19575 = (t19574*t19574);
bool t19576 = (t19575<1);
vec3 t19577 = vec3(t19467,t19473,t19479);
float t19578 = length(t19577);
float t19579 = (t19578*t19578);
bool t19580 = (t19579>1);
bool t19581 = (t19576&&t19580);
float t19582;
float t19583;
float t19584;
float t19585;
if(t19581){
t19582 = 0;
t19583 = 0;
t19584 = 0;
t19585 = 1;
} else {
t19582 = 0;
t19583 = 0;
t19584 = 0;
t19585 = 0;
}
float t19586 = (1-t19548);
float t19587 = (t19514*t19586);
float t19588 = (t19548+t19587);
float t19589 = (1-t19588);
float t19590 = (t19585*t19589);
float t19591 = (t19582*t19590);
float t19592 = (t19552+t19591);
bool t19593 = (t19473>0);
bool t19594 = (t19566>0);
bool t19595 = (!t19594);
bool t19596 = (t19593&&t19595);
bool t19597 = (!t19593);
bool t19598 = (t19594&&t19597);
bool t19599 = (t19596||t19598);
bool t19600 = (t19575<196);
bool t19601 = (t19575>float(6.76));
bool t19602 = (t19600&&t19601);
bool t19603 = (t19599&&t19602);
float t19604;
float t19605;
float t19606;
float t19607;
if(t19603){
float t19608 = (t19566/t19564);
float t19609 = (-t19608);
float t19610 = (t19609*t19557);
float t19611 = (t19560+t19610);
float t19612 = atan(t19611,t19572);
float t19613 = (u1.u0/30);
float t19614 = (t19612+t19613);
float t19615 = (2*3.1415927);
float t19616 = (t19614+t19615);
float t19617 = mod(t19616,2);
float t19618 = (t19617*3.1415927);
float t19619 = (t19618/t19615);
float t19620 = (t19609*t19564);
float t19621 = (t19566+t19620);
float t19622 = (t19609*t19570);
float t19623 = (t19572+t19622);
vec3 t19624 = vec3(t19611,t19621,t19623);
float t19625 = length(t19624);
float t19626 = (t19625*t19625);
float t19627 = sqrt(t19626);
float t19628 = (t19627-float(2.6));
float t19629 = (t19628/float(11.4));
vec4 t19630 = texture(s4,vec2(t19619,t19629));
t19604 = t19630.x;
t19605 = t19630.y;
t19606 = t19630.z;
vec3 t19631 = vec3(t19630.x,t19630.y,t19630.z);
float t19632 = length(t19631);
float t19633 = (t19632*t19632);
float t19634 = (t19633/float(3.0));
bool t19635 = (t19634<=1);
float t19636;
if(t19635){
t19636 = t19634;
} else {
t19636 = 1;
}
bool t19637 = (t19636>=0);
float t19638;
if(t19637){
t19638 = t19636;
} else {
t19638 = 0;
}
t19607 = t19638;
} else {
t19604 = 0;
t19605 = 0;
t19606 = 0;
t19607 = 0;
}
float t19639 = (1-t19588);
float t19640 = (t19585*t19639);
float t19641 = (t19588+t19640);
float t19642 = (1-t19641);
float t19643 = (t19607*t19642);
float t19644 = (t19604*t19643);
float t19645 = (t19592+t19644);
float t19646 = (t115*t19560);
float t19647 = pow(t19575,float(2.5));
float t19648 = (t19646/t19647);
float t19649 = (t19648*t19558);
float t19650 = (t19557+t19649);
float t19651 = (t19558*u1.u4);
float t19652 = (t19650*t19651);
float t19653 = (t19560+t19652);
float t19654 = (t115*t19566);
float t19655 = (t19654/t19647);
float t19656 = (t19655*t19558);
float t19657 = (t19564+t19656);
float t19658 = (t19657*t19651);
float t19659 = (t19566+t19658);
float t19660 = (t115*t19572);
float t19661 = (t19660/t19647);
float t19662 = (t19661*t19558);
float t19663 = (t19570+t19662);
float t19664 = (t19663*t19651);
float t19665 = (t19572+t19664);
vec3 t19666 = vec3(t19653,t19659,t19665);
float t19667 = length(t19666);
float t19668 = (t19667*t19667);
bool t19669 = (t19668<1);
vec3 t19670 = vec3(t19560,t19566,t19572);
float t19671 = length(t19670);
float t19672 = (t19671*t19671);
bool t19673 = (t19672>1);
bool t19674 = (t19669&&t19673);
float t19675;
float t19676;
float t19677;
float t19678;
if(t19674){
t19675 = 0;
t19676 = 0;
t19677 = 0;
t19678 = 1;
} else {
t19675 = 0;
t19676 = 0;
t19677 = 0;
t19678 = 0;
}
float t19679 = (1-t19641);
float t19680 = (t19607*t19679);
float t19681 = (t19641+t19680);
float t19682 = (1-t19681);
float t19683 = (t19678*t19682);
float t19684 = (t19675*t19683);
float t19685 = (t19645+t19684);
bool t19686 = (t19566>0);
bool t19687 = (t19659>0);
bool t19688 = (!t19687);
bool t19689 = (t19686&&t19688);
bool t19690 = (!t19686);
bool t19691 = (t19687&&t19690);
bool t19692 = (t19689||t19691);
bool t19693 = (t19668<196);
bool t19694 = (t19668>float(6.76));
bool t19695 = (t19693&&t19694);
bool t19696 = (t19692&&t19695);
float t19697;
float t19698;
float t19699;
float t19700;
if(t19696){
float t19701 = (t19659/t19657);
float t19702 = (-t19701);
float t19703 = (t19702*t19650);
float t19704 = (t19653+t19703);
float t19705 = atan(t19704,t19665);
float t19706 = (u1.u0/30);
float t19707 = (t19705+t19706);
float t19708 = (2*3.1415927);
float t19709 = (t19707+t19708);
float t19710 = mod(t19709,2);
float t19711 = (t19710*3.1415927);
float t19712 = (t19711/t19708);
float t19713 = (t19702*t19657);
float t19714 = (t19659+t19713);
float t19715 = (t19702*t19663);
float t19716 = (t19665+t19715);
vec3 t19717 = vec3(t19704,t19714,t19716);
float t19718 = length(t19717);
float t19719 = (t19718*t19718);
float t19720 = sqrt(t19719);
float t19721 = (t19720-float(2.6));
float t19722 = (t19721/float(11.4));
vec4 t19723 = texture(s4,vec2(t19712,t19722));
t19697 = t19723.x;
t19698 = t19723.y;
t19699 = t19723.z;
vec3 t19724 = vec3(t19723.x,t19723.y,t19723.z);
float t19725 = length(t19724);
float t19726 = (t19725*t19725);
float t19727 = (t19726/float(3.0));
bool t19728 = (t19727<=1);
float t19729;
if(t19728){
t19729 = t19727;
} else {
t19729 = 1;
}
bool t19730 = (t19729>=0);
float t19731;
if(t19730){
t19731 = t19729;
} else {
t19731 = 0;
}
t19700 = t19731;
} else {
t19697 = 0;
t19698 = 0;
t19699 = 0;
t19700 = 0;
}
float t19732 = (1-t19681);
float t19733 = (t19678*t19732);
float t19734 = (t19681+t19733);
float t19735 = (1-t19734);
float t19736 = (t19700*t19735);
float t19737 = (t19697*t19736);
float t19738 = (t19685+t19737);
float t19739 = (t115*t19653);
float t19740 = pow(t19668,float(2.5));
float t19741 = (t19739/t19740);
float t19742 = (t19741*t19651);
float t19743 = (t19650+t19742);
float t19744 = (t19651*u1.u4);
float t19745 = (t19743*t19744);
float t19746 = (t19653+t19745);
float t19747 = (t115*t19659);
float t19748 = (t19747/t19740);
float t19749 = (t19748*t19651);
float t19750 = (t19657+t19749);
float t19751 = (t19750*t19744);
float t19752 = (t19659+t19751);
float t19753 = (t115*t19665);
float t19754 = (t19753/t19740);
float t19755 = (t19754*t19651);
float t19756 = (t19663+t19755);
float t19757 = (t19756*t19744);
float t19758 = (t19665+t19757);
vec3 t19759 = vec3(t19746,t19752,t19758);
float t19760 = length(t19759);
float t19761 = (t19760*t19760);
bool t19762 = (t19761<1);
vec3 t19763 = vec3(t19653,t19659,t19665);
float t19764 = length(t19763);
float t19765 = (t19764*t19764);
bool t19766 = (t19765>1);
bool t19767 = (t19762&&t19766);
float t19768;
float t19769;
float t19770;
float t19771;
if(t19767){
t19768 = 0;
t19769 = 0;
t19770 = 0;
t19771 = 1;
} else {
t19768 = 0;
t19769 = 0;
t19770 = 0;
t19771 = 0;
}
float t19772 = (1-t19734);
float t19773 = (t19700*t19772);
float t19774 = (t19734+t19773);
float t19775 = (1-t19774);
float t19776 = (t19771*t19775);
float t19777 = (t19768*t19776);
float t19778 = (t19738+t19777);
bool t19779 = (t19659>0);
bool t19780 = (t19752>0);
bool t19781 = (!t19780);
bool t19782 = (t19779&&t19781);
bool t19783 = (!t19779);
bool t19784 = (t19780&&t19783);
bool t19785 = (t19782||t19784);
bool t19786 = (t19761<196);
bool t19787 = (t19761>float(6.76));
bool t19788 = (t19786&&t19787);
bool t19789 = (t19785&&t19788);
float t19790;
float t19791;
float t19792;
float t19793;
if(t19789){
float t19794 = (t19752/t19750);
float t19795 = (-t19794);
float t19796 = (t19795*t19743);
float t19797 = (t19746+t19796);
float t19798 = atan(t19797,t19758);
float t19799 = (u1.u0/30);
float t19800 = (t19798+t19799);
float t19801 = (2*3.1415927);
float t19802 = (t19800+t19801);
float t19803 = mod(t19802,2);
float t19804 = (t19803*3.1415927);
float t19805 = (t19804/t19801);
float t19806 = (t19795*t19750);
float t19807 = (t19752+t19806);
float t19808 = (t19795*t19756);
float t19809 = (t19758+t19808);
vec3 t19810 = vec3(t19797,t19807,t19809);
float t19811 = length(t19810);
float t19812 = (t19811*t19811);
float t19813 = sqrt(t19812);
float t19814 = (t19813-float(2.6));
float t19815 = (t19814/float(11.4));
vec4 t19816 = texture(s4,vec2(t19805,t19815));
t19790 = t19816.x;
t19791 = t19816.y;
t19792 = t19816.z;
vec3 t19817 = vec3(t19816.x,t19816.y,t19816.z);
float t19818 = length(t19817);
float t19819 = (t19818*t19818);
float t19820 = (t19819/float(3.0));
bool t19821 = (t19820<=1);
float t19822;
if(t19821){
t19822 = t19820;
} else {
t19822 = 1;
}
bool t19823 = (t19822>=0);
float t19824;
if(t19823){
t19824 = t19822;
} else {
t19824 = 0;
}
t19793 = t19824;
} else {
t19790 = 0;
t19791 = 0;
t19792 = 0;
t19793 = 0;
}
float t19825 = (1-t19774);
float t19826 = (t19771*t19825);
float t19827 = (t19774+t19826);
float t19828 = (1-t19827);
float t19829 = (t19793*t19828);
float t19830 = (t19790*t19829);
float t19831 = (t19778+t19830);
float t19832 = (t115*t19746);
float t19833 = pow(t19761,float(2.5));
float t19834 = (t19832/t19833);
float t19835 = (t19834*t19744);
float t19836 = (t19743+t19835);
float t19837 = (t19744*u1.u4);
float t19838 = (t19836*t19837);
float t19839 = (t19746+t19838);
float t19840 = (t115*t19752);
float t19841 = (t19840/t19833);
float t19842 = (t19841*t19744);
float t19843 = (t19750+t19842);
float t19844 = (t19843*t19837);
float t19845 = (t19752+t19844);
float t19846 = (t115*t19758);
float t19847 = (t19846/t19833);
float t19848 = (t19847*t19744);
float t19849 = (t19756+t19848);
float t19850 = (t19849*t19837);
float t19851 = (t19758+t19850);
vec3 t19852 = vec3(t19839,t19845,t19851);
float t19853 = length(t19852);
float t19854 = (t19853*t19853);
bool t19855 = (t19854<1);
vec3 t19856 = vec3(t19746,t19752,t19758);
float t19857 = length(t19856);
float t19858 = (t19857*t19857);
bool t19859 = (t19858>1);
bool t19860 = (t19855&&t19859);
float t19861;
float t19862;
float t19863;
float t19864;
if(t19860){
t19861 = 0;
t19862 = 0;
t19863 = 0;
t19864 = 1;
} else {
t19861 = 0;
t19862 = 0;
t19863 = 0;
t19864 = 0;
}
float t19865 = (1-t19827);
float t19866 = (t19793*t19865);
float t19867 = (t19827+t19866);
float t19868 = (1-t19867);
float t19869 = (t19864*t19868);
float t19870 = (t19861*t19869);
float t19871 = (t19831+t19870);
bool t19872 = (t19752>0);
bool t19873 = (t19845>0);
bool t19874 = (!t19873);
bool t19875 = (t19872&&t19874);
bool t19876 = (!t19872);
bool t19877 = (t19873&&t19876);
bool t19878 = (t19875||t19877);
bool t19879 = (t19854<196);
bool t19880 = (t19854>float(6.76));
bool t19881 = (t19879&&t19880);
bool t19882 = (t19878&&t19881);
float t19883;
float t19884;
float t19885;
float t19886;
if(t19882){
float t19887 = (t19845/t19843);
float t19888 = (-t19887);
float t19889 = (t19888*t19836);
float t19890 = (t19839+t19889);
float t19891 = atan(t19890,t19851);
float t19892 = (u1.u0/30);
float t19893 = (t19891+t19892);
float t19894 = (2*3.1415927);
float t19895 = (t19893+t19894);
float t19896 = mod(t19895,2);
float t19897 = (t19896*3.1415927);
float t19898 = (t19897/t19894);
float t19899 = (t19888*t19843);
float t19900 = (t19845+t19899);
float t19901 = (t19888*t19849);
float t19902 = (t19851+t19901);
vec3 t19903 = vec3(t19890,t19900,t19902);
float t19904 = length(t19903);
float t19905 = (t19904*t19904);
float t19906 = sqrt(t19905);
float t19907 = (t19906-float(2.6));
float t19908 = (t19907/float(11.4));
vec4 t19909 = texture(s4,vec2(t19898,t19908));
t19883 = t19909.x;
t19884 = t19909.y;
t19885 = t19909.z;
vec3 t19910 = vec3(t19909.x,t19909.y,t19909.z);
float t19911 = length(t19910);
float t19912 = (t19911*t19911);
float t19913 = (t19912/float(3.0));
bool t19914 = (t19913<=1);
float t19915;
if(t19914){
t19915 = t19913;
} else {
t19915 = 1;
}
bool t19916 = (t19915>=0);
float t19917;
if(t19916){
t19917 = t19915;
} else {
t19917 = 0;
}
t19886 = t19917;
} else {
t19883 = 0;
t19884 = 0;
t19885 = 0;
t19886 = 0;
}
float t19918 = (1-t19867);
float t19919 = (t19864*t19918);
float t19920 = (t19867+t19919);
float t19921 = (1-t19920);
float t19922 = (t19886*t19921);
float t19923 = (t19883*t19922);
float t19924 = (t19871+t19923);
float t19925 = (t115*t19839);
float t19926 = pow(t19854,float(2.5));
float t19927 = (t19925/t19926);
float t19928 = (t19927*t19837);
float t19929 = (t19836+t19928);
float t19930 = (t19837*u1.u4);
float t19931 = (t19929*t19930);
float t19932 = (t19839+t19931);
float t19933 = (t115*t19845);
float t19934 = (t19933/t19926);
float t19935 = (t19934*t19837);
float t19936 = (t19843+t19935);
float t19937 = (t19936*t19930);
float t19938 = (t19845+t19937);
float t19939 = (t115*t19851);
float t19940 = (t19939/t19926);
float t19941 = (t19940*t19837);
float t19942 = (t19849+t19941);
float t19943 = (t19942*t19930);
float t19944 = (t19851+t19943);
vec3 t19945 = vec3(t19932,t19938,t19944);
float t19946 = length(t19945);
float t19947 = (t19946*t19946);
bool t19948 = (t19947<1);
vec3 t19949 = vec3(t19839,t19845,t19851);
float t19950 = length(t19949);
float t19951 = (t19950*t19950);
bool t19952 = (t19951>1);
bool t19953 = (t19948&&t19952);
float t19954;
float t19955;
float t19956;
float t19957;
if(t19953){
t19954 = 0;
t19955 = 0;
t19956 = 0;
t19957 = 1;
} else {
t19954 = 0;
t19955 = 0;
t19956 = 0;
t19957 = 0;
}
float t19958 = (1-t19920);
float t19959 = (t19886*t19958);
float t19960 = (t19920+t19959);
float t19961 = (1-t19960);
float t19962 = (t19957*t19961);
float t19963 = (t19954*t19962);
float t19964 = (t19924+t19963);
bool t19965 = (t19845>0);
bool t19966 = (t19938>0);
bool t19967 = (!t19966);
bool t19968 = (t19965&&t19967);
bool t19969 = (!t19965);
bool t19970 = (t19966&&t19969);
bool t19971 = (t19968||t19970);
bool t19972 = (t19947<196);
bool t19973 = (t19947>float(6.76));
bool t19974 = (t19972&&t19973);
bool t19975 = (t19971&&t19974);
float t19976;
float t19977;
float t19978;
float t19979;
if(t19975){
float t19980 = (t19938/t19936);
float t19981 = (-t19980);
float t19982 = (t19981*t19929);
float t19983 = (t19932+t19982);
float t19984 = atan(t19983,t19944);
float t19985 = (u1.u0/30);
float t19986 = (t19984+t19985);
float t19987 = (2*3.1415927);
float t19988 = (t19986+t19987);
float t19989 = mod(t19988,2);
float t19990 = (t19989*3.1415927);
float t19991 = (t19990/t19987);
float t19992 = (t19981*t19936);
float t19993 = (t19938+t19992);
float t19994 = (t19981*t19942);
float t19995 = (t19944+t19994);
vec3 t19996 = vec3(t19983,t19993,t19995);
float t19997 = length(t19996);
float t19998 = (t19997*t19997);
float t19999 = sqrt(t19998);
float t20000 = (t19999-float(2.6));
float t20001 = (t20000/float(11.4));
vec4 t20002 = texture(s4,vec2(t19991,t20001));
t19976 = t20002.x;
t19977 = t20002.y;
t19978 = t20002.z;
vec3 t20003 = vec3(t20002.x,t20002.y,t20002.z);
float t20004 = length(t20003);
float t20005 = (t20004*t20004);
float t20006 = (t20005/float(3.0));
bool t20007 = (t20006<=1);
float t20008;
if(t20007){
t20008 = t20006;
} else {
t20008 = 1;
}
bool t20009 = (t20008>=0);
float t20010;
if(t20009){
t20010 = t20008;
} else {
t20010 = 0;
}
t19979 = t20010;
} else {
t19976 = 0;
t19977 = 0;
t19978 = 0;
t19979 = 0;
}
float t20011 = (1-t19960);
float t20012 = (t19957*t20011);
float t20013 = (t19960+t20012);
float t20014 = (1-t20013);
float t20015 = (t19979*t20014);
float t20016 = (t19976*t20015);
float t20017 = (t19964+t20016);
float t20018 = (t115*t19932);
float t20019 = pow(t19947,float(2.5));
float t20020 = (t20018/t20019);
float t20021 = (t20020*t19930);
float t20022 = (t19929+t20021);
float t20023 = (t19930*u1.u4);
float t20024 = (t20022*t20023);
float t20025 = (t19932+t20024);
float t20026 = (t115*t19938);
float t20027 = (t20026/t20019);
float t20028 = (t20027*t19930);
float t20029 = (t19936+t20028);
float t20030 = (t20029*t20023);
float t20031 = (t19938+t20030);
float t20032 = (t115*t19944);
float t20033 = (t20032/t20019);
float t20034 = (t20033*t19930);
float t20035 = (t19942+t20034);
float t20036 = (t20035*t20023);
float t20037 = (t19944+t20036);
vec3 t20038 = vec3(t20025,t20031,t20037);
float t20039 = length(t20038);
float t20040 = (t20039*t20039);
bool t20041 = (t20040<1);
vec3 t20042 = vec3(t19932,t19938,t19944);
float t20043 = length(t20042);
float t20044 = (t20043*t20043);
bool t20045 = (t20044>1);
bool t20046 = (t20041&&t20045);
float t20047;
float t20048;
float t20049;
float t20050;
if(t20046){
t20047 = 0;
t20048 = 0;
t20049 = 0;
t20050 = 1;
} else {
t20047 = 0;
t20048 = 0;
t20049 = 0;
t20050 = 0;
}
float t20051 = (1-t20013);
float t20052 = (t19979*t20051);
float t20053 = (t20013+t20052);
float t20054 = (1-t20053);
float t20055 = (t20050*t20054);
float t20056 = (t20047*t20055);
float t20057 = (t20017+t20056);
bool t20058 = (t19938>0);
bool t20059 = (t20031>0);
bool t20060 = (!t20059);
bool t20061 = (t20058&&t20060);
bool t20062 = (!t20058);
bool t20063 = (t20059&&t20062);
bool t20064 = (t20061||t20063);
bool t20065 = (t20040<196);
bool t20066 = (t20040>float(6.76));
bool t20067 = (t20065&&t20066);
bool t20068 = (t20064&&t20067);
float t20069;
float t20070;
float t20071;
float t20072;
if(t20068){
float t20073 = (t20031/t20029);
float t20074 = (-t20073);
float t20075 = (t20074*t20022);
float t20076 = (t20025+t20075);
float t20077 = atan(t20076,t20037);
float t20078 = (u1.u0/30);
float t20079 = (t20077+t20078);
float t20080 = (2*3.1415927);
float t20081 = (t20079+t20080);
float t20082 = mod(t20081,2);
float t20083 = (t20082*3.1415927);
float t20084 = (t20083/t20080);
float t20085 = (t20074*t20029);
float t20086 = (t20031+t20085);
float t20087 = (t20074*t20035);
float t20088 = (t20037+t20087);
vec3 t20089 = vec3(t20076,t20086,t20088);
float t20090 = length(t20089);
float t20091 = (t20090*t20090);
float t20092 = sqrt(t20091);
float t20093 = (t20092-float(2.6));
float t20094 = (t20093/float(11.4));
vec4 t20095 = texture(s4,vec2(t20084,t20094));
t20069 = t20095.x;
t20070 = t20095.y;
t20071 = t20095.z;
vec3 t20096 = vec3(t20095.x,t20095.y,t20095.z);
float t20097 = length(t20096);
float t20098 = (t20097*t20097);
float t20099 = (t20098/float(3.0));
bool t20100 = (t20099<=1);
float t20101;
if(t20100){
t20101 = t20099;
} else {
t20101 = 1;
}
bool t20102 = (t20101>=0);
float t20103;
if(t20102){
t20103 = t20101;
} else {
t20103 = 0;
}
t20072 = t20103;
} else {
t20069 = 0;
t20070 = 0;
t20071 = 0;
t20072 = 0;
}
float t20104 = (1-t20053);
float t20105 = (t20050*t20104);
float t20106 = (t20053+t20105);
float t20107 = (1-t20106);
float t20108 = (t20072*t20107);
float t20109 = (t20069*t20108);
float t20110 = (t20057+t20109);
float t20111 = (t115*t20025);
float t20112 = pow(t20040,float(2.5));
float t20113 = (t20111/t20112);
float t20114 = (t20113*t20023);
float t20115 = (t20022+t20114);
float t20116 = (t20023*u1.u4);
float t20117 = (t20115*t20116);
float t20118 = (t20025+t20117);
float t20119 = (t115*t20031);
float t20120 = (t20119/t20112);
float t20121 = (t20120*t20023);
float t20122 = (t20029+t20121);
float t20123 = (t20122*t20116);
float t20124 = (t20031+t20123);
float t20125 = (t115*t20037);
float t20126 = (t20125/t20112);
float t20127 = (t20126*t20023);
float t20128 = (t20035+t20127);
float t20129 = (t20128*t20116);
float t20130 = (t20037+t20129);
vec3 t20131 = vec3(t20118,t20124,t20130);
float t20132 = length(t20131);
float t20133 = (t20132*t20132);
bool t20134 = (t20133<1);
vec3 t20135 = vec3(t20025,t20031,t20037);
float t20136 = length(t20135);
float t20137 = (t20136*t20136);
bool t20138 = (t20137>1);
bool t20139 = (t20134&&t20138);
float t20140;
float t20141;
float t20142;
float t20143;
if(t20139){
t20140 = 0;
t20141 = 0;
t20142 = 0;
t20143 = 1;
} else {
t20140 = 0;
t20141 = 0;
t20142 = 0;
t20143 = 0;
}
float t20144 = (1-t20106);
float t20145 = (t20072*t20144);
float t20146 = (t20106+t20145);
float t20147 = (1-t20146);
float t20148 = (t20143*t20147);
float t20149 = (t20140*t20148);
float t20150 = (t20110+t20149);
bool t20151 = (t20031>0);
bool t20152 = (t20124>0);
bool t20153 = (!t20152);
bool t20154 = (t20151&&t20153);
bool t20155 = (!t20151);
bool t20156 = (t20152&&t20155);
bool t20157 = (t20154||t20156);
bool t20158 = (t20133<196);
bool t20159 = (t20133>float(6.76));
bool t20160 = (t20158&&t20159);
bool t20161 = (t20157&&t20160);
float t20162;
float t20163;
float t20164;
float t20165;
if(t20161){
float t20166 = (t20124/t20122);
float t20167 = (-t20166);
float t20168 = (t20167*t20115);
float t20169 = (t20118+t20168);
float t20170 = atan(t20169,t20130);
float t20171 = (u1.u0/30);
float t20172 = (t20170+t20171);
float t20173 = (2*3.1415927);
float t20174 = (t20172+t20173);
float t20175 = mod(t20174,2);
float t20176 = (t20175*3.1415927);
float t20177 = (t20176/t20173);
float t20178 = (t20167*t20122);
float t20179 = (t20124+t20178);
float t20180 = (t20167*t20128);
float t20181 = (t20130+t20180);
vec3 t20182 = vec3(t20169,t20179,t20181);
float t20183 = length(t20182);
float t20184 = (t20183*t20183);
float t20185 = sqrt(t20184);
float t20186 = (t20185-float(2.6));
float t20187 = (t20186/float(11.4));
vec4 t20188 = texture(s4,vec2(t20177,t20187));
t20162 = t20188.x;
t20163 = t20188.y;
t20164 = t20188.z;
vec3 t20189 = vec3(t20188.x,t20188.y,t20188.z);
float t20190 = length(t20189);
float t20191 = (t20190*t20190);
float t20192 = (t20191/float(3.0));
bool t20193 = (t20192<=1);
float t20194;
if(t20193){
t20194 = t20192;
} else {
t20194 = 1;
}
bool t20195 = (t20194>=0);
float t20196;
if(t20195){
t20196 = t20194;
} else {
t20196 = 0;
}
t20165 = t20196;
} else {
t20162 = 0;
t20163 = 0;
t20164 = 0;
t20165 = 0;
}
float t20197 = (1-t20146);
float t20198 = (t20143*t20197);
float t20199 = (t20146+t20198);
float t20200 = (1-t20199);
float t20201 = (t20165*t20200);
float t20202 = (t20162*t20201);
float t20203 = (t20150+t20202);
float t20204 = (t115*t20118);
float t20205 = pow(t20133,float(2.5));
float t20206 = (t20204/t20205);
float t20207 = (t20206*t20116);
float t20208 = (t20115+t20207);
float t20209 = (t20116*u1.u4);
float t20210 = (t20208*t20209);
float t20211 = (t20118+t20210);
float t20212 = (t115*t20124);
float t20213 = (t20212/t20205);
float t20214 = (t20213*t20116);
float t20215 = (t20122+t20214);
float t20216 = (t20215*t20209);
float t20217 = (t20124+t20216);
float t20218 = (t115*t20130);
float t20219 = (t20218/t20205);
float t20220 = (t20219*t20116);
float t20221 = (t20128+t20220);
float t20222 = (t20221*t20209);
float t20223 = (t20130+t20222);
vec3 t20224 = vec3(t20211,t20217,t20223);
float t20225 = length(t20224);
float t20226 = (t20225*t20225);
bool t20227 = (t20226<1);
vec3 t20228 = vec3(t20118,t20124,t20130);
float t20229 = length(t20228);
float t20230 = (t20229*t20229);
bool t20231 = (t20230>1);
bool t20232 = (t20227&&t20231);
float t20233;
float t20234;
float t20235;
float t20236;
if(t20232){
t20233 = 0;
t20234 = 0;
t20235 = 0;
t20236 = 1;
} else {
t20233 = 0;
t20234 = 0;
t20235 = 0;
t20236 = 0;
}
float t20237 = (1-t20199);
float t20238 = (t20165*t20237);
float t20239 = (t20199+t20238);
float t20240 = (1-t20239);
float t20241 = (t20236*t20240);
float t20242 = (t20233*t20241);
float t20243 = (t20203+t20242);
bool t20244 = (t20124>0);
bool t20245 = (t20217>0);
bool t20246 = (!t20245);
bool t20247 = (t20244&&t20246);
bool t20248 = (!t20244);
bool t20249 = (t20245&&t20248);
bool t20250 = (t20247||t20249);
bool t20251 = (t20226<196);
bool t20252 = (t20226>float(6.76));
bool t20253 = (t20251&&t20252);
bool t20254 = (t20250&&t20253);
float t20255;
float t20256;
float t20257;
float t20258;
if(t20254){
float t20259 = (t20217/t20215);
float t20260 = (-t20259);
float t20261 = (t20260*t20208);
float t20262 = (t20211+t20261);
float t20263 = atan(t20262,t20223);
float t20264 = (u1.u0/30);
float t20265 = (t20263+t20264);
float t20266 = (2*3.1415927);
float t20267 = (t20265+t20266);
float t20268 = mod(t20267,2);
float t20269 = (t20268*3.1415927);
float t20270 = (t20269/t20266);
float t20271 = (t20260*t20215);
float t20272 = (t20217+t20271);
float t20273 = (t20260*t20221);
float t20274 = (t20223+t20273);
vec3 t20275 = vec3(t20262,t20272,t20274);
float t20276 = length(t20275);
float t20277 = (t20276*t20276);
float t20278 = sqrt(t20277);
float t20279 = (t20278-float(2.6));
float t20280 = (t20279/float(11.4));
vec4 t20281 = texture(s4,vec2(t20270,t20280));
t20255 = t20281.x;
t20256 = t20281.y;
t20257 = t20281.z;
vec3 t20282 = vec3(t20281.x,t20281.y,t20281.z);
float t20283 = length(t20282);
float t20284 = (t20283*t20283);
float t20285 = (t20284/float(3.0));
bool t20286 = (t20285<=1);
float t20287;
if(t20286){
t20287 = t20285;
} else {
t20287 = 1;
}
bool t20288 = (t20287>=0);
float t20289;
if(t20288){
t20289 = t20287;
} else {
t20289 = 0;
}
t20258 = t20289;
} else {
t20255 = 0;
t20256 = 0;
t20257 = 0;
t20258 = 0;
}
float t20290 = (1-t20239);
float t20291 = (t20236*t20290);
float t20292 = (t20239+t20291);
float t20293 = (1-t20292);
float t20294 = (t20258*t20293);
float t20295 = (t20255*t20294);
float t20296 = (t20243+t20295);
float t20297 = (t115*t20211);
float t20298 = pow(t20226,float(2.5));
float t20299 = (t20297/t20298);
float t20300 = (t20299*t20209);
float t20301 = (t20208+t20300);
float t20302 = (t20209*u1.u4);
float t20303 = (t20301*t20302);
float t20304 = (t20211+t20303);
float t20305 = (t115*t20217);
float t20306 = (t20305/t20298);
float t20307 = (t20306*t20209);
float t20308 = (t20215+t20307);
float t20309 = (t20308*t20302);
float t20310 = (t20217+t20309);
float t20311 = (t115*t20223);
float t20312 = (t20311/t20298);
float t20313 = (t20312*t20209);
float t20314 = (t20221+t20313);
float t20315 = (t20314*t20302);
float t20316 = (t20223+t20315);
vec3 t20317 = vec3(t20304,t20310,t20316);
float t20318 = length(t20317);
float t20319 = (t20318*t20318);
bool t20320 = (t20319<1);
vec3 t20321 = vec3(t20211,t20217,t20223);
float t20322 = length(t20321);
float t20323 = (t20322*t20322);
bool t20324 = (t20323>1);
bool t20325 = (t20320&&t20324);
float t20326;
float t20327;
float t20328;
float t20329;
if(t20325){
t20326 = 0;
t20327 = 0;
t20328 = 0;
t20329 = 1;
} else {
t20326 = 0;
t20327 = 0;
t20328 = 0;
t20329 = 0;
}
float t20330 = (1-t20292);
float t20331 = (t20258*t20330);
float t20332 = (t20292+t20331);
float t20333 = (1-t20332);
float t20334 = (t20329*t20333);
float t20335 = (t20326*t20334);
float t20336 = (t20296+t20335);
bool t20337 = (t20217>0);
bool t20338 = (t20310>0);
bool t20339 = (!t20338);
bool t20340 = (t20337&&t20339);
bool t20341 = (!t20337);
bool t20342 = (t20338&&t20341);
bool t20343 = (t20340||t20342);
bool t20344 = (t20319<196);
bool t20345 = (t20319>float(6.76));
bool t20346 = (t20344&&t20345);
bool t20347 = (t20343&&t20346);
float t20348;
float t20349;
float t20350;
float t20351;
if(t20347){
float t20352 = (t20310/t20308);
float t20353 = (-t20352);
float t20354 = (t20353*t20301);
float t20355 = (t20304+t20354);
float t20356 = atan(t20355,t20316);
float t20357 = (u1.u0/30);
float t20358 = (t20356+t20357);
float t20359 = (2*3.1415927);
float t20360 = (t20358+t20359);
float t20361 = mod(t20360,2);
float t20362 = (t20361*3.1415927);
float t20363 = (t20362/t20359);
float t20364 = (t20353*t20308);
float t20365 = (t20310+t20364);
float t20366 = (t20353*t20314);
float t20367 = (t20316+t20366);
vec3 t20368 = vec3(t20355,t20365,t20367);
float t20369 = length(t20368);
float t20370 = (t20369*t20369);
float t20371 = sqrt(t20370);
float t20372 = (t20371-float(2.6));
float t20373 = (t20372/float(11.4));
vec4 t20374 = texture(s4,vec2(t20363,t20373));
t20348 = t20374.x;
t20349 = t20374.y;
t20350 = t20374.z;
vec3 t20375 = vec3(t20374.x,t20374.y,t20374.z);
float t20376 = length(t20375);
float t20377 = (t20376*t20376);
float t20378 = (t20377/float(3.0));
bool t20379 = (t20378<=1);
float t20380;
if(t20379){
t20380 = t20378;
} else {
t20380 = 1;
}
bool t20381 = (t20380>=0);
float t20382;
if(t20381){
t20382 = t20380;
} else {
t20382 = 0;
}
t20351 = t20382;
} else {
t20348 = 0;
t20349 = 0;
t20350 = 0;
t20351 = 0;
}
float t20383 = (1-t20332);
float t20384 = (t20329*t20383);
float t20385 = (t20332+t20384);
float t20386 = (1-t20385);
float t20387 = (t20351*t20386);
float t20388 = (t20348*t20387);
float t20389 = (t20336+t20388);
float t20390 = (t115*t20304);
float t20391 = pow(t20319,float(2.5));
float t20392 = (t20390/t20391);
float t20393 = (t20392*t20302);
float t20394 = (t20301+t20393);
float t20395 = (t20302*u1.u4);
float t20396 = (t20394*t20395);
float t20397 = (t20304+t20396);
float t20398 = (t115*t20310);
float t20399 = (t20398/t20391);
float t20400 = (t20399*t20302);
float t20401 = (t20308+t20400);
float t20402 = (t20401*t20395);
float t20403 = (t20310+t20402);
float t20404 = (t115*t20316);
float t20405 = (t20404/t20391);
float t20406 = (t20405*t20302);
float t20407 = (t20314+t20406);
float t20408 = (t20407*t20395);
float t20409 = (t20316+t20408);
vec3 t20410 = vec3(t20397,t20403,t20409);
float t20411 = length(t20410);
float t20412 = (t20411*t20411);
bool t20413 = (t20412<1);
vec3 t20414 = vec3(t20304,t20310,t20316);
float t20415 = length(t20414);
float t20416 = (t20415*t20415);
bool t20417 = (t20416>1);
bool t20418 = (t20413&&t20417);
float t20419;
float t20420;
float t20421;
float t20422;
if(t20418){
t20419 = 0;
t20420 = 0;
t20421 = 0;
t20422 = 1;
} else {
t20419 = 0;
t20420 = 0;
t20421 = 0;
t20422 = 0;
}
float t20423 = (1-t20385);
float t20424 = (t20351*t20423);
float t20425 = (t20385+t20424);
float t20426 = (1-t20425);
float t20427 = (t20422*t20426);
float t20428 = (t20419*t20427);
float t20429 = (t20389+t20428);
bool t20430 = (t20310>0);
bool t20431 = (t20403>0);
bool t20432 = (!t20431);
bool t20433 = (t20430&&t20432);
bool t20434 = (!t20430);
bool t20435 = (t20431&&t20434);
bool t20436 = (t20433||t20435);
bool t20437 = (t20412<196);
bool t20438 = (t20412>float(6.76));
bool t20439 = (t20437&&t20438);
bool t20440 = (t20436&&t20439);
float t20441;
float t20442;
float t20443;
float t20444;
if(t20440){
float t20445 = (t20403/t20401);
float t20446 = (-t20445);
float t20447 = (t20446*t20394);
float t20448 = (t20397+t20447);
float t20449 = atan(t20448,t20409);
float t20450 = (u1.u0/30);
float t20451 = (t20449+t20450);
float t20452 = (2*3.1415927);
float t20453 = (t20451+t20452);
float t20454 = mod(t20453,2);
float t20455 = (t20454*3.1415927);
float t20456 = (t20455/t20452);
float t20457 = (t20446*t20401);
float t20458 = (t20403+t20457);
float t20459 = (t20446*t20407);
float t20460 = (t20409+t20459);
vec3 t20461 = vec3(t20448,t20458,t20460);
float t20462 = length(t20461);
float t20463 = (t20462*t20462);
float t20464 = sqrt(t20463);
float t20465 = (t20464-float(2.6));
float t20466 = (t20465/float(11.4));
vec4 t20467 = texture(s4,vec2(t20456,t20466));
t20441 = t20467.x;
t20442 = t20467.y;
t20443 = t20467.z;
vec3 t20468 = vec3(t20467.x,t20467.y,t20467.z);
float t20469 = length(t20468);
float t20470 = (t20469*t20469);
float t20471 = (t20470/float(3.0));
bool t20472 = (t20471<=1);
float t20473;
if(t20472){
t20473 = t20471;
} else {
t20473 = 1;
}
bool t20474 = (t20473>=0);
float t20475;
if(t20474){
t20475 = t20473;
} else {
t20475 = 0;
}
t20444 = t20475;
} else {
t20441 = 0;
t20442 = 0;
t20443 = 0;
t20444 = 0;
}
float t20476 = (1-t20425);
float t20477 = (t20422*t20476);
float t20478 = (t20425+t20477);
float t20479 = (1-t20478);
float t20480 = (t20444*t20479);
float t20481 = (t20441*t20480);
float t20482 = (t20429+t20481);
float t20483 = (t115*t20397);
float t20484 = pow(t20412,float(2.5));
float t20485 = (t20483/t20484);
float t20486 = (t20485*t20395);
float t20487 = (t20394+t20486);
float t20488 = (t20395*u1.u4);
float t20489 = (t20487*t20488);
float t20490 = (t20397+t20489);
float t20491 = (t115*t20403);
float t20492 = (t20491/t20484);
float t20493 = (t20492*t20395);
float t20494 = (t20401+t20493);
float t20495 = (t20494*t20488);
float t20496 = (t20403+t20495);
float t20497 = (t115*t20409);
float t20498 = (t20497/t20484);
float t20499 = (t20498*t20395);
float t20500 = (t20407+t20499);
float t20501 = (t20500*t20488);
float t20502 = (t20409+t20501);
vec3 t20503 = vec3(t20490,t20496,t20502);
float t20504 = length(t20503);
float t20505 = (t20504*t20504);
bool t20506 = (t20505<1);
vec3 t20507 = vec3(t20397,t20403,t20409);
float t20508 = length(t20507);
float t20509 = (t20508*t20508);
bool t20510 = (t20509>1);
bool t20511 = (t20506&&t20510);
float t20512;
float t20513;
float t20514;
float t20515;
if(t20511){
t20512 = 0;
t20513 = 0;
t20514 = 0;
t20515 = 1;
} else {
t20512 = 0;
t20513 = 0;
t20514 = 0;
t20515 = 0;
}
float t20516 = (1-t20478);
float t20517 = (t20444*t20516);
float t20518 = (t20478+t20517);
float t20519 = (1-t20518);
float t20520 = (t20515*t20519);
float t20521 = (t20512*t20520);
float t20522 = (t20482+t20521);
bool t20523 = (t20403>0);
bool t20524 = (t20496>0);
bool t20525 = (!t20524);
bool t20526 = (t20523&&t20525);
bool t20527 = (!t20523);
bool t20528 = (t20524&&t20527);
bool t20529 = (t20526||t20528);
bool t20530 = (t20505<196);
bool t20531 = (t20505>float(6.76));
bool t20532 = (t20530&&t20531);
bool t20533 = (t20529&&t20532);
float t20534;
float t20535;
float t20536;
float t20537;
if(t20533){
float t20538 = (t20496/t20494);
float t20539 = (-t20538);
float t20540 = (t20539*t20487);
float t20541 = (t20490+t20540);
float t20542 = atan(t20541,t20502);
float t20543 = (u1.u0/30);
float t20544 = (t20542+t20543);
float t20545 = (2*3.1415927);
float t20546 = (t20544+t20545);
float t20547 = mod(t20546,2);
float t20548 = (t20547*3.1415927);
float t20549 = (t20548/t20545);
float t20550 = (t20539*t20494);
float t20551 = (t20496+t20550);
float t20552 = (t20539*t20500);
float t20553 = (t20502+t20552);
vec3 t20554 = vec3(t20541,t20551,t20553);
float t20555 = length(t20554);
float t20556 = (t20555*t20555);
float t20557 = sqrt(t20556);
float t20558 = (t20557-float(2.6));
float t20559 = (t20558/float(11.4));
vec4 t20560 = texture(s4,vec2(t20549,t20559));
t20534 = t20560.x;
t20535 = t20560.y;
t20536 = t20560.z;
vec3 t20561 = vec3(t20560.x,t20560.y,t20560.z);
float t20562 = length(t20561);
float t20563 = (t20562*t20562);
float t20564 = (t20563/float(3.0));
bool t20565 = (t20564<=1);
float t20566;
if(t20565){
t20566 = t20564;
} else {
t20566 = 1;
}
bool t20567 = (t20566>=0);
float t20568;
if(t20567){
t20568 = t20566;
} else {
t20568 = 0;
}
t20537 = t20568;
} else {
t20534 = 0;
t20535 = 0;
t20536 = 0;
t20537 = 0;
}
float t20569 = (1-t20518);
float t20570 = (t20515*t20569);
float t20571 = (t20518+t20570);
float t20572 = (1-t20571);
float t20573 = (t20537*t20572);
float t20574 = (t20534*t20573);
float t20575 = (t20522+t20574);
float t20576 = (t115*t20490);
float t20577 = pow(t20505,float(2.5));
float t20578 = (t20576/t20577);
float t20579 = (t20578*t20488);
float t20580 = (t20487+t20579);
float t20581 = (t20488*u1.u4);
float t20582 = (t20580*t20581);
float t20583 = (t20490+t20582);
float t20584 = (t115*t20496);
float t20585 = (t20584/t20577);
float t20586 = (t20585*t20488);
float t20587 = (t20494+t20586);
float t20588 = (t20587*t20581);
float t20589 = (t20496+t20588);
float t20590 = (t115*t20502);
float t20591 = (t20590/t20577);
float t20592 = (t20591*t20488);
float t20593 = (t20500+t20592);
float t20594 = (t20593*t20581);
float t20595 = (t20502+t20594);
vec3 t20596 = vec3(t20583,t20589,t20595);
float t20597 = length(t20596);
float t20598 = (t20597*t20597);
bool t20599 = (t20598<1);
vec3 t20600 = vec3(t20490,t20496,t20502);
float t20601 = length(t20600);
float t20602 = (t20601*t20601);
bool t20603 = (t20602>1);
bool t20604 = (t20599&&t20603);
float t20605;
float t20606;
float t20607;
float t20608;
if(t20604){
t20605 = 0;
t20606 = 0;
t20607 = 0;
t20608 = 1;
} else {
t20605 = 0;
t20606 = 0;
t20607 = 0;
t20608 = 0;
}
float t20609 = (1-t20571);
float t20610 = (t20537*t20609);
float t20611 = (t20571+t20610);
float t20612 = (1-t20611);
float t20613 = (t20608*t20612);
float t20614 = (t20605*t20613);
float t20615 = (t20575+t20614);
bool t20616 = (t20496>0);
bool t20617 = (t20589>0);
bool t20618 = (!t20617);
bool t20619 = (t20616&&t20618);
bool t20620 = (!t20616);
bool t20621 = (t20617&&t20620);
bool t20622 = (t20619||t20621);
bool t20623 = (t20598<196);
bool t20624 = (t20598>float(6.76));
bool t20625 = (t20623&&t20624);
bool t20626 = (t20622&&t20625);
float t20627;
float t20628;
float t20629;
float t20630;
if(t20626){
float t20631 = (t20589/t20587);
float t20632 = (-t20631);
float t20633 = (t20632*t20580);
float t20634 = (t20583+t20633);
float t20635 = atan(t20634,t20595);
float t20636 = (u1.u0/30);
float t20637 = (t20635+t20636);
float t20638 = (2*3.1415927);
float t20639 = (t20637+t20638);
float t20640 = mod(t20639,2);
float t20641 = (t20640*3.1415927);
float t20642 = (t20641/t20638);
float t20643 = (t20632*t20587);
float t20644 = (t20589+t20643);
float t20645 = (t20632*t20593);
float t20646 = (t20595+t20645);
vec3 t20647 = vec3(t20634,t20644,t20646);
float t20648 = length(t20647);
float t20649 = (t20648*t20648);
float t20650 = sqrt(t20649);
float t20651 = (t20650-float(2.6));
float t20652 = (t20651/float(11.4));
vec4 t20653 = texture(s4,vec2(t20642,t20652));
t20627 = t20653.x;
t20628 = t20653.y;
t20629 = t20653.z;
vec3 t20654 = vec3(t20653.x,t20653.y,t20653.z);
float t20655 = length(t20654);
float t20656 = (t20655*t20655);
float t20657 = (t20656/float(3.0));
bool t20658 = (t20657<=1);
float t20659;
if(t20658){
t20659 = t20657;
} else {
t20659 = 1;
}
bool t20660 = (t20659>=0);
float t20661;
if(t20660){
t20661 = t20659;
} else {
t20661 = 0;
}
t20630 = t20661;
} else {
t20627 = 0;
t20628 = 0;
t20629 = 0;
t20630 = 0;
}
float t20662 = (1-t20611);
float t20663 = (t20608*t20662);
float t20664 = (t20611+t20663);
float t20665 = (1-t20664);
float t20666 = (t20630*t20665);
float t20667 = (t20627*t20666);
float t20668 = (t20615+t20667);
float t20669 = (t115*t20583);
float t20670 = pow(t20598,float(2.5));
float t20671 = (t20669/t20670);
float t20672 = (t20671*t20581);
float t20673 = (t20580+t20672);
float t20674 = (t20581*u1.u4);
float t20675 = (t20673*t20674);
float t20676 = (t20583+t20675);
float t20677 = (t115*t20589);
float t20678 = (t20677/t20670);
float t20679 = (t20678*t20581);
float t20680 = (t20587+t20679);
float t20681 = (t20680*t20674);
float t20682 = (t20589+t20681);
float t20683 = (t115*t20595);
float t20684 = (t20683/t20670);
float t20685 = (t20684*t20581);
float t20686 = (t20593+t20685);
float t20687 = (t20686*t20674);
float t20688 = (t20595+t20687);
vec3 t20689 = vec3(t20676,t20682,t20688);
float t20690 = length(t20689);
float t20691 = (t20690*t20690);
bool t20692 = (t20691<1);
vec3 t20693 = vec3(t20583,t20589,t20595);
float t20694 = length(t20693);
float t20695 = (t20694*t20694);
bool t20696 = (t20695>1);
bool t20697 = (t20692&&t20696);
float t20698;
float t20699;
float t20700;
float t20701;
if(t20697){
t20698 = 0;
t20699 = 0;
t20700 = 0;
t20701 = 1;
} else {
t20698 = 0;
t20699 = 0;
t20700 = 0;
t20701 = 0;
}
float t20702 = (1-t20664);
float t20703 = (t20630*t20702);
float t20704 = (t20664+t20703);
float t20705 = (1-t20704);
float t20706 = (t20701*t20705);
float t20707 = (t20698*t20706);
float t20708 = (t20668+t20707);
bool t20709 = (t20589>0);
bool t20710 = (t20682>0);
bool t20711 = (!t20710);
bool t20712 = (t20709&&t20711);
bool t20713 = (!t20709);
bool t20714 = (t20710&&t20713);
bool t20715 = (t20712||t20714);
bool t20716 = (t20691<196);
bool t20717 = (t20691>float(6.76));
bool t20718 = (t20716&&t20717);
bool t20719 = (t20715&&t20718);
float t20720;
float t20721;
float t20722;
float t20723;
if(t20719){
float t20724 = (t20682/t20680);
float t20725 = (-t20724);
float t20726 = (t20725*t20673);
float t20727 = (t20676+t20726);
float t20728 = atan(t20727,t20688);
float t20729 = (u1.u0/30);
float t20730 = (t20728+t20729);
float t20731 = (2*3.1415927);
float t20732 = (t20730+t20731);
float t20733 = mod(t20732,2);
float t20734 = (t20733*3.1415927);
float t20735 = (t20734/t20731);
float t20736 = (t20725*t20680);
float t20737 = (t20682+t20736);
float t20738 = (t20725*t20686);
float t20739 = (t20688+t20738);
vec3 t20740 = vec3(t20727,t20737,t20739);
float t20741 = length(t20740);
float t20742 = (t20741*t20741);
float t20743 = sqrt(t20742);
float t20744 = (t20743-float(2.6));
float t20745 = (t20744/float(11.4));
vec4 t20746 = texture(s4,vec2(t20735,t20745));
t20720 = t20746.x;
t20721 = t20746.y;
t20722 = t20746.z;
vec3 t20747 = vec3(t20746.x,t20746.y,t20746.z);
float t20748 = length(t20747);
float t20749 = (t20748*t20748);
float t20750 = (t20749/float(3.0));
bool t20751 = (t20750<=1);
float t20752;
if(t20751){
t20752 = t20750;
} else {
t20752 = 1;
}
bool t20753 = (t20752>=0);
float t20754;
if(t20753){
t20754 = t20752;
} else {
t20754 = 0;
}
t20723 = t20754;
} else {
t20720 = 0;
t20721 = 0;
t20722 = 0;
t20723 = 0;
}
float t20755 = (1-t20704);
float t20756 = (t20701*t20755);
float t20757 = (t20704+t20756);
float t20758 = (1-t20757);
float t20759 = (t20723*t20758);
float t20760 = (t20720*t20759);
float t20761 = (t20708+t20760);
float t20762 = (t115*t20676);
float t20763 = pow(t20691,float(2.5));
float t20764 = (t20762/t20763);
float t20765 = (t20764*t20674);
float t20766 = (t20673+t20765);
float t20767 = (t20674*u1.u4);
float t20768 = (t20766*t20767);
float t20769 = (t20676+t20768);
float t20770 = (t115*t20682);
float t20771 = (t20770/t20763);
float t20772 = (t20771*t20674);
float t20773 = (t20680+t20772);
float t20774 = (t20773*t20767);
float t20775 = (t20682+t20774);
float t20776 = (t115*t20688);
float t20777 = (t20776/t20763);
float t20778 = (t20777*t20674);
float t20779 = (t20686+t20778);
float t20780 = (t20779*t20767);
float t20781 = (t20688+t20780);
vec3 t20782 = vec3(t20769,t20775,t20781);
float t20783 = length(t20782);
float t20784 = (t20783*t20783);
bool t20785 = (t20784<1);
vec3 t20786 = vec3(t20676,t20682,t20688);
float t20787 = length(t20786);
float t20788 = (t20787*t20787);
bool t20789 = (t20788>1);
bool t20790 = (t20785&&t20789);
float t20791;
float t20792;
float t20793;
float t20794;
if(t20790){
t20791 = 0;
t20792 = 0;
t20793 = 0;
t20794 = 1;
} else {
t20791 = 0;
t20792 = 0;
t20793 = 0;
t20794 = 0;
}
float t20795 = (1-t20757);
float t20796 = (t20723*t20795);
float t20797 = (t20757+t20796);
float t20798 = (1-t20797);
float t20799 = (t20794*t20798);
float t20800 = (t20791*t20799);
float t20801 = (t20761+t20800);
bool t20802 = (t20682>0);
bool t20803 = (t20775>0);
bool t20804 = (!t20803);
bool t20805 = (t20802&&t20804);
bool t20806 = (!t20802);
bool t20807 = (t20803&&t20806);
bool t20808 = (t20805||t20807);
bool t20809 = (t20784<196);
bool t20810 = (t20784>float(6.76));
bool t20811 = (t20809&&t20810);
bool t20812 = (t20808&&t20811);
float t20813;
float t20814;
float t20815;
float t20816;
if(t20812){
float t20817 = (t20775/t20773);
float t20818 = (-t20817);
float t20819 = (t20818*t20766);
float t20820 = (t20769+t20819);
float t20821 = atan(t20820,t20781);
float t20822 = (u1.u0/30);
float t20823 = (t20821+t20822);
float t20824 = (2*3.1415927);
float t20825 = (t20823+t20824);
float t20826 = mod(t20825,2);
float t20827 = (t20826*3.1415927);
float t20828 = (t20827/t20824);
float t20829 = (t20818*t20773);
float t20830 = (t20775+t20829);
float t20831 = (t20818*t20779);
float t20832 = (t20781+t20831);
vec3 t20833 = vec3(t20820,t20830,t20832);
float t20834 = length(t20833);
float t20835 = (t20834*t20834);
float t20836 = sqrt(t20835);
float t20837 = (t20836-float(2.6));
float t20838 = (t20837/float(11.4));
vec4 t20839 = texture(s4,vec2(t20828,t20838));
t20813 = t20839.x;
t20814 = t20839.y;
t20815 = t20839.z;
vec3 t20840 = vec3(t20839.x,t20839.y,t20839.z);
float t20841 = length(t20840);
float t20842 = (t20841*t20841);
float t20843 = (t20842/float(3.0));
bool t20844 = (t20843<=1);
float t20845;
if(t20844){
t20845 = t20843;
} else {
t20845 = 1;
}
bool t20846 = (t20845>=0);
float t20847;
if(t20846){
t20847 = t20845;
} else {
t20847 = 0;
}
t20816 = t20847;
} else {
t20813 = 0;
t20814 = 0;
t20815 = 0;
t20816 = 0;
}
float t20848 = (1-t20797);
float t20849 = (t20794*t20848);
float t20850 = (t20797+t20849);
float t20851 = (1-t20850);
float t20852 = (t20816*t20851);
float t20853 = (t20813*t20852);
float t20854 = (t20801+t20853);
float t20855 = (t115*t20769);
float t20856 = pow(t20784,float(2.5));
float t20857 = (t20855/t20856);
float t20858 = (t20857*t20767);
float t20859 = (t20766+t20858);
float t20860 = (t20767*u1.u4);
float t20861 = (t20859*t20860);
float t20862 = (t20769+t20861);
float t20863 = (t115*t20775);
float t20864 = (t20863/t20856);
float t20865 = (t20864*t20767);
float t20866 = (t20773+t20865);
float t20867 = (t20866*t20860);
float t20868 = (t20775+t20867);
float t20869 = (t115*t20781);
float t20870 = (t20869/t20856);
float t20871 = (t20870*t20767);
float t20872 = (t20779+t20871);
float t20873 = (t20872*t20860);
float t20874 = (t20781+t20873);
vec3 t20875 = vec3(t20862,t20868,t20874);
float t20876 = length(t20875);
float t20877 = (t20876*t20876);
bool t20878 = (t20877<1);
vec3 t20879 = vec3(t20769,t20775,t20781);
float t20880 = length(t20879);
float t20881 = (t20880*t20880);
bool t20882 = (t20881>1);
bool t20883 = (t20878&&t20882);
float t20884;
float t20885;
float t20886;
float t20887;
if(t20883){
t20884 = 0;
t20885 = 0;
t20886 = 0;
t20887 = 1;
} else {
t20884 = 0;
t20885 = 0;
t20886 = 0;
t20887 = 0;
}
float t20888 = (1-t20850);
float t20889 = (t20816*t20888);
float t20890 = (t20850+t20889);
float t20891 = (1-t20890);
float t20892 = (t20887*t20891);
float t20893 = (t20884*t20892);
float t20894 = (t20854+t20893);
bool t20895 = (t20775>0);
bool t20896 = (t20868>0);
bool t20897 = (!t20896);
bool t20898 = (t20895&&t20897);
bool t20899 = (!t20895);
bool t20900 = (t20896&&t20899);
bool t20901 = (t20898||t20900);
bool t20902 = (t20877<196);
bool t20903 = (t20877>float(6.76));
bool t20904 = (t20902&&t20903);
bool t20905 = (t20901&&t20904);
float t20906;
float t20907;
float t20908;
float t20909;
if(t20905){
float t20910 = (t20868/t20866);
float t20911 = (-t20910);
float t20912 = (t20911*t20859);
float t20913 = (t20862+t20912);
float t20914 = atan(t20913,t20874);
float t20915 = (u1.u0/30);
float t20916 = (t20914+t20915);
float t20917 = (2*3.1415927);
float t20918 = (t20916+t20917);
float t20919 = mod(t20918,2);
float t20920 = (t20919*3.1415927);
float t20921 = (t20920/t20917);
float t20922 = (t20911*t20866);
float t20923 = (t20868+t20922);
float t20924 = (t20911*t20872);
float t20925 = (t20874+t20924);
vec3 t20926 = vec3(t20913,t20923,t20925);
float t20927 = length(t20926);
float t20928 = (t20927*t20927);
float t20929 = sqrt(t20928);
float t20930 = (t20929-float(2.6));
float t20931 = (t20930/float(11.4));
vec4 t20932 = texture(s4,vec2(t20921,t20931));
t20906 = t20932.x;
t20907 = t20932.y;
t20908 = t20932.z;
vec3 t20933 = vec3(t20932.x,t20932.y,t20932.z);
float t20934 = length(t20933);
float t20935 = (t20934*t20934);
float t20936 = (t20935/float(3.0));
bool t20937 = (t20936<=1);
float t20938;
if(t20937){
t20938 = t20936;
} else {
t20938 = 1;
}
bool t20939 = (t20938>=0);
float t20940;
if(t20939){
t20940 = t20938;
} else {
t20940 = 0;
}
t20909 = t20940;
} else {
t20906 = 0;
t20907 = 0;
t20908 = 0;
t20909 = 0;
}
float t20941 = (1-t20890);
float t20942 = (t20887*t20941);
float t20943 = (t20890+t20942);
float t20944 = (1-t20943);
float t20945 = (t20909*t20944);
float t20946 = (t20906*t20945);
float t20947 = (t20894+t20946);
float t20948 = (t115*t20862);
float t20949 = pow(t20877,float(2.5));
float t20950 = (t20948/t20949);
float t20951 = (t20950*t20860);
float t20952 = (t20859+t20951);
float t20953 = (t20860*u1.u4);
float t20954 = (t20952*t20953);
float t20955 = (t20862+t20954);
float t20956 = (t115*t20868);
float t20957 = (t20956/t20949);
float t20958 = (t20957*t20860);
float t20959 = (t20866+t20958);
float t20960 = (t20959*t20953);
float t20961 = (t20868+t20960);
float t20962 = (t115*t20874);
float t20963 = (t20962/t20949);
float t20964 = (t20963*t20860);
float t20965 = (t20872+t20964);
float t20966 = (t20965*t20953);
float t20967 = (t20874+t20966);
vec3 t20968 = vec3(t20955,t20961,t20967);
float t20969 = length(t20968);
float t20970 = (t20969*t20969);
bool t20971 = (t20970<1);
vec3 t20972 = vec3(t20862,t20868,t20874);
float t20973 = length(t20972);
float t20974 = (t20973*t20973);
bool t20975 = (t20974>1);
bool t20976 = (t20971&&t20975);
float t20977;
float t20978;
float t20979;
float t20980;
if(t20976){
t20977 = 0;
t20978 = 0;
t20979 = 0;
t20980 = 1;
} else {
t20977 = 0;
t20978 = 0;
t20979 = 0;
t20980 = 0;
}
float t20981 = (1-t20943);
float t20982 = (t20909*t20981);
float t20983 = (t20943+t20982);
float t20984 = (1-t20983);
float t20985 = (t20980*t20984);
float t20986 = (t20977*t20985);
float t20987 = (t20947+t20986);
bool t20988 = (t20868>0);
bool t20989 = (t20961>0);
bool t20990 = (!t20989);
bool t20991 = (t20988&&t20990);
bool t20992 = (!t20988);
bool t20993 = (t20989&&t20992);
bool t20994 = (t20991||t20993);
bool t20995 = (t20970<196);
bool t20996 = (t20970>float(6.76));
bool t20997 = (t20995&&t20996);
bool t20998 = (t20994&&t20997);
float t20999;
float t21000;
float t21001;
float t21002;
if(t20998){
float t21003 = (t20961/t20959);
float t21004 = (-t21003);
float t21005 = (t21004*t20952);
float t21006 = (t20955+t21005);
float t21007 = atan(t21006,t20967);
float t21008 = (u1.u0/30);
float t21009 = (t21007+t21008);
float t21010 = (2*3.1415927);
float t21011 = (t21009+t21010);
float t21012 = mod(t21011,2);
float t21013 = (t21012*3.1415927);
float t21014 = (t21013/t21010);
float t21015 = (t21004*t20959);
float t21016 = (t20961+t21015);
float t21017 = (t21004*t20965);
float t21018 = (t20967+t21017);
vec3 t21019 = vec3(t21006,t21016,t21018);
float t21020 = length(t21019);
float t21021 = (t21020*t21020);
float t21022 = sqrt(t21021);
float t21023 = (t21022-float(2.6));
float t21024 = (t21023/float(11.4));
vec4 t21025 = texture(s4,vec2(t21014,t21024));
t20999 = t21025.x;
t21000 = t21025.y;
t21001 = t21025.z;
vec3 t21026 = vec3(t21025.x,t21025.y,t21025.z);
float t21027 = length(t21026);
float t21028 = (t21027*t21027);
float t21029 = (t21028/float(3.0));
bool t21030 = (t21029<=1);
float t21031;
if(t21030){
t21031 = t21029;
} else {
t21031 = 1;
}
bool t21032 = (t21031>=0);
float t21033;
if(t21032){
t21033 = t21031;
} else {
t21033 = 0;
}
t21002 = t21033;
} else {
t20999 = 0;
t21000 = 0;
t21001 = 0;
t21002 = 0;
}
float t21034 = (1-t20983);
float t21035 = (t20980*t21034);
float t21036 = (t20983+t21035);
float t21037 = (1-t21036);
float t21038 = (t21002*t21037);
float t21039 = (t20999*t21038);
float t21040 = (t20987+t21039);
float t21041 = (t115*t20955);
float t21042 = pow(t20970,float(2.5));
float t21043 = (t21041/t21042);
float t21044 = (t21043*t20953);
float t21045 = (t20952+t21044);
float t21046 = (t20953*u1.u4);
float t21047 = (t21045*t21046);
float t21048 = (t20955+t21047);
float t21049 = (t115*t20961);
float t21050 = (t21049/t21042);
float t21051 = (t21050*t20953);
float t21052 = (t20959+t21051);
float t21053 = (t21052*t21046);
float t21054 = (t20961+t21053);
float t21055 = (t115*t20967);
float t21056 = (t21055/t21042);
float t21057 = (t21056*t20953);
float t21058 = (t20965+t21057);
float t21059 = (t21058*t21046);
float t21060 = (t20967+t21059);
vec3 t21061 = vec3(t21048,t21054,t21060);
float t21062 = length(t21061);
float t21063 = (t21062*t21062);
bool t21064 = (t21063<1);
vec3 t21065 = vec3(t20955,t20961,t20967);
float t21066 = length(t21065);
float t21067 = (t21066*t21066);
bool t21068 = (t21067>1);
bool t21069 = (t21064&&t21068);
float t21070;
float t21071;
float t21072;
float t21073;
if(t21069){
t21070 = 0;
t21071 = 0;
t21072 = 0;
t21073 = 1;
} else {
t21070 = 0;
t21071 = 0;
t21072 = 0;
t21073 = 0;
}
float t21074 = (1-t21036);
float t21075 = (t21002*t21074);
float t21076 = (t21036+t21075);
float t21077 = (1-t21076);
float t21078 = (t21073*t21077);
float t21079 = (t21070*t21078);
float t21080 = (t21040+t21079);
bool t21081 = (t20961>0);
bool t21082 = (t21054>0);
bool t21083 = (!t21082);
bool t21084 = (t21081&&t21083);
bool t21085 = (!t21081);
bool t21086 = (t21082&&t21085);
bool t21087 = (t21084||t21086);
bool t21088 = (t21063<196);
bool t21089 = (t21063>float(6.76));
bool t21090 = (t21088&&t21089);
bool t21091 = (t21087&&t21090);
float t21092;
float t21093;
float t21094;
float t21095;
if(t21091){
float t21096 = (t21054/t21052);
float t21097 = (-t21096);
float t21098 = (t21097*t21045);
float t21099 = (t21048+t21098);
float t21100 = atan(t21099,t21060);
float t21101 = (u1.u0/30);
float t21102 = (t21100+t21101);
float t21103 = (2*3.1415927);
float t21104 = (t21102+t21103);
float t21105 = mod(t21104,2);
float t21106 = (t21105*3.1415927);
float t21107 = (t21106/t21103);
float t21108 = (t21097*t21052);
float t21109 = (t21054+t21108);
float t21110 = (t21097*t21058);
float t21111 = (t21060+t21110);
vec3 t21112 = vec3(t21099,t21109,t21111);
float t21113 = length(t21112);
float t21114 = (t21113*t21113);
float t21115 = sqrt(t21114);
float t21116 = (t21115-float(2.6));
float t21117 = (t21116/float(11.4));
vec4 t21118 = texture(s4,vec2(t21107,t21117));
t21092 = t21118.x;
t21093 = t21118.y;
t21094 = t21118.z;
vec3 t21119 = vec3(t21118.x,t21118.y,t21118.z);
float t21120 = length(t21119);
float t21121 = (t21120*t21120);
float t21122 = (t21121/float(3.0));
bool t21123 = (t21122<=1);
float t21124;
if(t21123){
t21124 = t21122;
} else {
t21124 = 1;
}
bool t21125 = (t21124>=0);
float t21126;
if(t21125){
t21126 = t21124;
} else {
t21126 = 0;
}
t21095 = t21126;
} else {
t21092 = 0;
t21093 = 0;
t21094 = 0;
t21095 = 0;
}
float t21127 = (1-t21076);
float t21128 = (t21073*t21127);
float t21129 = (t21076+t21128);
float t21130 = (1-t21129);
float t21131 = (t21095*t21130);
float t21132 = (t21092*t21131);
float t21133 = (t21080+t21132);
float t21134 = (t115*t21048);
float t21135 = pow(t21063,float(2.5));
float t21136 = (t21134/t21135);
float t21137 = (t21136*t21046);
float t21138 = (t21045+t21137);
float t21139 = (t21046*u1.u4);
float t21140 = (t21138*t21139);
float t21141 = (t21048+t21140);
float t21142 = (t115*t21054);
float t21143 = (t21142/t21135);
float t21144 = (t21143*t21046);
float t21145 = (t21052+t21144);
float t21146 = (t21145*t21139);
float t21147 = (t21054+t21146);
float t21148 = (t115*t21060);
float t21149 = (t21148/t21135);
float t21150 = (t21149*t21046);
float t21151 = (t21058+t21150);
float t21152 = (t21151*t21139);
float t21153 = (t21060+t21152);
vec3 t21154 = vec3(t21141,t21147,t21153);
float t21155 = length(t21154);
float t21156 = (t21155*t21155);
bool t21157 = (t21156<1);
vec3 t21158 = vec3(t21048,t21054,t21060);
float t21159 = length(t21158);
float t21160 = (t21159*t21159);
bool t21161 = (t21160>1);
bool t21162 = (t21157&&t21161);
float t21163;
float t21164;
float t21165;
float t21166;
if(t21162){
t21163 = 0;
t21164 = 0;
t21165 = 0;
t21166 = 1;
} else {
t21163 = 0;
t21164 = 0;
t21165 = 0;
t21166 = 0;
}
float t21167 = (1-t21129);
float t21168 = (t21095*t21167);
float t21169 = (t21129+t21168);
float t21170 = (1-t21169);
float t21171 = (t21166*t21170);
float t21172 = (t21163*t21171);
float t21173 = (t21133+t21172);
bool t21174 = (t21054>0);
bool t21175 = (t21147>0);
bool t21176 = (!t21175);
bool t21177 = (t21174&&t21176);
bool t21178 = (!t21174);
bool t21179 = (t21175&&t21178);
bool t21180 = (t21177||t21179);
bool t21181 = (t21156<196);
bool t21182 = (t21156>float(6.76));
bool t21183 = (t21181&&t21182);
bool t21184 = (t21180&&t21183);
float t21185;
float t21186;
float t21187;
float t21188;
if(t21184){
float t21189 = (t21147/t21145);
float t21190 = (-t21189);
float t21191 = (t21190*t21138);
float t21192 = (t21141+t21191);
float t21193 = atan(t21192,t21153);
float t21194 = (u1.u0/30);
float t21195 = (t21193+t21194);
float t21196 = (2*3.1415927);
float t21197 = (t21195+t21196);
float t21198 = mod(t21197,2);
float t21199 = (t21198*3.1415927);
float t21200 = (t21199/t21196);
float t21201 = (t21190*t21145);
float t21202 = (t21147+t21201);
float t21203 = (t21190*t21151);
float t21204 = (t21153+t21203);
vec3 t21205 = vec3(t21192,t21202,t21204);
float t21206 = length(t21205);
float t21207 = (t21206*t21206);
float t21208 = sqrt(t21207);
float t21209 = (t21208-float(2.6));
float t21210 = (t21209/float(11.4));
vec4 t21211 = texture(s4,vec2(t21200,t21210));
t21185 = t21211.x;
t21186 = t21211.y;
t21187 = t21211.z;
vec3 t21212 = vec3(t21211.x,t21211.y,t21211.z);
float t21213 = length(t21212);
float t21214 = (t21213*t21213);
float t21215 = (t21214/float(3.0));
bool t21216 = (t21215<=1);
float t21217;
if(t21216){
t21217 = t21215;
} else {
t21217 = 1;
}
bool t21218 = (t21217>=0);
float t21219;
if(t21218){
t21219 = t21217;
} else {
t21219 = 0;
}
t21188 = t21219;
} else {
t21185 = 0;
t21186 = 0;
t21187 = 0;
t21188 = 0;
}
float t21220 = (1-t21169);
float t21221 = (t21166*t21220);
float t21222 = (t21169+t21221);
float t21223 = (1-t21222);
float t21224 = (t21188*t21223);
float t21225 = (t21185*t21224);
float t21226 = (t21173+t21225);
float t21227 = (t115*t21141);
float t21228 = pow(t21156,float(2.5));
float t21229 = (t21227/t21228);
float t21230 = (t21229*t21139);
float t21231 = (t21138+t21230);
float t21232 = (t21139*u1.u4);
float t21233 = (t21231*t21232);
float t21234 = (t21141+t21233);
float t21235 = (t115*t21147);
float t21236 = (t21235/t21228);
float t21237 = (t21236*t21139);
float t21238 = (t21145+t21237);
float t21239 = (t21238*t21232);
float t21240 = (t21147+t21239);
float t21241 = (t115*t21153);
float t21242 = (t21241/t21228);
float t21243 = (t21242*t21139);
float t21244 = (t21151+t21243);
float t21245 = (t21244*t21232);
float t21246 = (t21153+t21245);
vec3 t21247 = vec3(t21234,t21240,t21246);
float t21248 = length(t21247);
float t21249 = (t21248*t21248);
bool t21250 = (t21249<1);
vec3 t21251 = vec3(t21141,t21147,t21153);
float t21252 = length(t21251);
float t21253 = (t21252*t21252);
bool t21254 = (t21253>1);
bool t21255 = (t21250&&t21254);
float t21256;
float t21257;
float t21258;
float t21259;
if(t21255){
t21256 = 0;
t21257 = 0;
t21258 = 0;
t21259 = 1;
} else {
t21256 = 0;
t21257 = 0;
t21258 = 0;
t21259 = 0;
}
float t21260 = (1-t21222);
float t21261 = (t21188*t21260);
float t21262 = (t21222+t21261);
float t21263 = (1-t21262);
float t21264 = (t21259*t21263);
float t21265 = (t21256*t21264);
float t21266 = (t21226+t21265);
bool t21267 = (t21147>0);
bool t21268 = (t21240>0);
bool t21269 = (!t21268);
bool t21270 = (t21267&&t21269);
bool t21271 = (!t21267);
bool t21272 = (t21268&&t21271);
bool t21273 = (t21270||t21272);
bool t21274 = (t21249<196);
bool t21275 = (t21249>float(6.76));
bool t21276 = (t21274&&t21275);
bool t21277 = (t21273&&t21276);
float t21278;
float t21279;
float t21280;
float t21281;
if(t21277){
float t21282 = (t21240/t21238);
float t21283 = (-t21282);
float t21284 = (t21283*t21231);
float t21285 = (t21234+t21284);
float t21286 = atan(t21285,t21246);
float t21287 = (u1.u0/30);
float t21288 = (t21286+t21287);
float t21289 = (2*3.1415927);
float t21290 = (t21288+t21289);
float t21291 = mod(t21290,2);
float t21292 = (t21291*3.1415927);
float t21293 = (t21292/t21289);
float t21294 = (t21283*t21238);
float t21295 = (t21240+t21294);
float t21296 = (t21283*t21244);
float t21297 = (t21246+t21296);
vec3 t21298 = vec3(t21285,t21295,t21297);
float t21299 = length(t21298);
float t21300 = (t21299*t21299);
float t21301 = sqrt(t21300);
float t21302 = (t21301-float(2.6));
float t21303 = (t21302/float(11.4));
vec4 t21304 = texture(s4,vec2(t21293,t21303));
t21278 = t21304.x;
t21279 = t21304.y;
t21280 = t21304.z;
vec3 t21305 = vec3(t21304.x,t21304.y,t21304.z);
float t21306 = length(t21305);
float t21307 = (t21306*t21306);
float t21308 = (t21307/float(3.0));
bool t21309 = (t21308<=1);
float t21310;
if(t21309){
t21310 = t21308;
} else {
t21310 = 1;
}
bool t21311 = (t21310>=0);
float t21312;
if(t21311){
t21312 = t21310;
} else {
t21312 = 0;
}
t21281 = t21312;
} else {
t21278 = 0;
t21279 = 0;
t21280 = 0;
t21281 = 0;
}
float t21313 = (1-t21262);
float t21314 = (t21259*t21313);
float t21315 = (t21262+t21314);
float t21316 = (1-t21315);
float t21317 = (t21281*t21316);
float t21318 = (t21278*t21317);
float t21319 = (t21266+t21318);
float t21320 = (t115*t21234);
float t21321 = pow(t21249,float(2.5));
float t21322 = (t21320/t21321);
float t21323 = (t21322*t21232);
float t21324 = (t21231+t21323);
float t21325 = (t21232*u1.u4);
float t21326 = (t21324*t21325);
float t21327 = (t21234+t21326);
float t21328 = (t115*t21240);
float t21329 = (t21328/t21321);
float t21330 = (t21329*t21232);
float t21331 = (t21238+t21330);
float t21332 = (t21331*t21325);
float t21333 = (t21240+t21332);
float t21334 = (t115*t21246);
float t21335 = (t21334/t21321);
float t21336 = (t21335*t21232);
float t21337 = (t21244+t21336);
float t21338 = (t21337*t21325);
float t21339 = (t21246+t21338);
vec3 t21340 = vec3(t21327,t21333,t21339);
float t21341 = length(t21340);
float t21342 = (t21341*t21341);
bool t21343 = (t21342<1);
vec3 t21344 = vec3(t21234,t21240,t21246);
float t21345 = length(t21344);
float t21346 = (t21345*t21345);
bool t21347 = (t21346>1);
bool t21348 = (t21343&&t21347);
float t21349;
float t21350;
float t21351;
float t21352;
if(t21348){
t21349 = 0;
t21350 = 0;
t21351 = 0;
t21352 = 1;
} else {
t21349 = 0;
t21350 = 0;
t21351 = 0;
t21352 = 0;
}
float t21353 = (1-t21315);
float t21354 = (t21281*t21353);
float t21355 = (t21315+t21354);
float t21356 = (1-t21355);
float t21357 = (t21352*t21356);
float t21358 = (t21349*t21357);
float t21359 = (t21319+t21358);
bool t21360 = (t21240>0);
bool t21361 = (t21333>0);
bool t21362 = (!t21361);
bool t21363 = (t21360&&t21362);
bool t21364 = (!t21360);
bool t21365 = (t21361&&t21364);
bool t21366 = (t21363||t21365);
bool t21367 = (t21342<196);
bool t21368 = (t21342>float(6.76));
bool t21369 = (t21367&&t21368);
bool t21370 = (t21366&&t21369);
float t21371;
float t21372;
float t21373;
float t21374;
if(t21370){
float t21375 = (t21333/t21331);
float t21376 = (-t21375);
float t21377 = (t21376*t21324);
float t21378 = (t21327+t21377);
float t21379 = atan(t21378,t21339);
float t21380 = (u1.u0/30);
float t21381 = (t21379+t21380);
float t21382 = (2*3.1415927);
float t21383 = (t21381+t21382);
float t21384 = mod(t21383,2);
float t21385 = (t21384*3.1415927);
float t21386 = (t21385/t21382);
float t21387 = (t21376*t21331);
float t21388 = (t21333+t21387);
float t21389 = (t21376*t21337);
float t21390 = (t21339+t21389);
vec3 t21391 = vec3(t21378,t21388,t21390);
float t21392 = length(t21391);
float t21393 = (t21392*t21392);
float t21394 = sqrt(t21393);
float t21395 = (t21394-float(2.6));
float t21396 = (t21395/float(11.4));
vec4 t21397 = texture(s4,vec2(t21386,t21396));
t21371 = t21397.x;
t21372 = t21397.y;
t21373 = t21397.z;
vec3 t21398 = vec3(t21397.x,t21397.y,t21397.z);
float t21399 = length(t21398);
float t21400 = (t21399*t21399);
float t21401 = (t21400/float(3.0));
bool t21402 = (t21401<=1);
float t21403;
if(t21402){
t21403 = t21401;
} else {
t21403 = 1;
}
bool t21404 = (t21403>=0);
float t21405;
if(t21404){
t21405 = t21403;
} else {
t21405 = 0;
}
t21374 = t21405;
} else {
t21371 = 0;
t21372 = 0;
t21373 = 0;
t21374 = 0;
}
float t21406 = (1-t21355);
float t21407 = (t21352*t21406);
float t21408 = (t21355+t21407);
float t21409 = (1-t21408);
float t21410 = (t21374*t21409);
float t21411 = (t21371*t21410);
float t21412 = (t21359+t21411);
float t21413 = (t115*t21327);
float t21414 = pow(t21342,float(2.5));
float t21415 = (t21413/t21414);
float t21416 = (t21415*t21325);
float t21417 = (t21324+t21416);
float t21418 = (t21325*u1.u4);
float t21419 = (t21417*t21418);
float t21420 = (t21327+t21419);
float t21421 = (t115*t21333);
float t21422 = (t21421/t21414);
float t21423 = (t21422*t21325);
float t21424 = (t21331+t21423);
float t21425 = (t21424*t21418);
float t21426 = (t21333+t21425);
float t21427 = (t115*t21339);
float t21428 = (t21427/t21414);
float t21429 = (t21428*t21325);
float t21430 = (t21337+t21429);
float t21431 = (t21430*t21418);
float t21432 = (t21339+t21431);
vec3 t21433 = vec3(t21420,t21426,t21432);
float t21434 = length(t21433);
float t21435 = (t21434*t21434);
bool t21436 = (t21435<1);
vec3 t21437 = vec3(t21327,t21333,t21339);
float t21438 = length(t21437);
float t21439 = (t21438*t21438);
bool t21440 = (t21439>1);
bool t21441 = (t21436&&t21440);
float t21442;
float t21443;
float t21444;
float t21445;
if(t21441){
t21442 = 0;
t21443 = 0;
t21444 = 0;
t21445 = 1;
} else {
t21442 = 0;
t21443 = 0;
t21444 = 0;
t21445 = 0;
}
float t21446 = (1-t21408);
float t21447 = (t21374*t21446);
float t21448 = (t21408+t21447);
float t21449 = (1-t21448);
float t21450 = (t21445*t21449);
float t21451 = (t21442*t21450);
float t21452 = (t21412+t21451);
bool t21453 = (t21333>0);
bool t21454 = (t21426>0);
bool t21455 = (!t21454);
bool t21456 = (t21453&&t21455);
bool t21457 = (!t21453);
bool t21458 = (t21454&&t21457);
bool t21459 = (t21456||t21458);
bool t21460 = (t21435<196);
bool t21461 = (t21435>float(6.76));
bool t21462 = (t21460&&t21461);
bool t21463 = (t21459&&t21462);
float t21464;
float t21465;
float t21466;
float t21467;
if(t21463){
float t21468 = (t21426/t21424);
float t21469 = (-t21468);
float t21470 = (t21469*t21417);
float t21471 = (t21420+t21470);
float t21472 = atan(t21471,t21432);
float t21473 = (u1.u0/30);
float t21474 = (t21472+t21473);
float t21475 = (2*3.1415927);
float t21476 = (t21474+t21475);
float t21477 = mod(t21476,2);
float t21478 = (t21477*3.1415927);
float t21479 = (t21478/t21475);
float t21480 = (t21469*t21424);
float t21481 = (t21426+t21480);
float t21482 = (t21469*t21430);
float t21483 = (t21432+t21482);
vec3 t21484 = vec3(t21471,t21481,t21483);
float t21485 = length(t21484);
float t21486 = (t21485*t21485);
float t21487 = sqrt(t21486);
float t21488 = (t21487-float(2.6));
float t21489 = (t21488/float(11.4));
vec4 t21490 = texture(s4,vec2(t21479,t21489));
t21464 = t21490.x;
t21465 = t21490.y;
t21466 = t21490.z;
vec3 t21491 = vec3(t21490.x,t21490.y,t21490.z);
float t21492 = length(t21491);
float t21493 = (t21492*t21492);
float t21494 = (t21493/float(3.0));
bool t21495 = (t21494<=1);
float t21496;
if(t21495){
t21496 = t21494;
} else {
t21496 = 1;
}
bool t21497 = (t21496>=0);
float t21498;
if(t21497){
t21498 = t21496;
} else {
t21498 = 0;
}
t21467 = t21498;
} else {
t21464 = 0;
t21465 = 0;
t21466 = 0;
t21467 = 0;
}
float t21499 = (1-t21448);
float t21500 = (t21445*t21499);
float t21501 = (t21448+t21500);
float t21502 = (1-t21501);
float t21503 = (t21467*t21502);
float t21504 = (t21464*t21503);
float t21505 = (t21452+t21504);
float t21506 = (t115*t21420);
float t21507 = pow(t21435,float(2.5));
float t21508 = (t21506/t21507);
float t21509 = (t21508*t21418);
float t21510 = (t21417+t21509);
float t21511 = (t21418*u1.u4);
float t21512 = (t21510*t21511);
float t21513 = (t21420+t21512);
float t21514 = (t115*t21426);
float t21515 = (t21514/t21507);
float t21516 = (t21515*t21418);
float t21517 = (t21424+t21516);
float t21518 = (t21517*t21511);
float t21519 = (t21426+t21518);
float t21520 = (t115*t21432);
float t21521 = (t21520/t21507);
float t21522 = (t21521*t21418);
float t21523 = (t21430+t21522);
float t21524 = (t21523*t21511);
float t21525 = (t21432+t21524);
vec3 t21526 = vec3(t21513,t21519,t21525);
float t21527 = length(t21526);
float t21528 = (t21527*t21527);
bool t21529 = (t21528<1);
vec3 t21530 = vec3(t21420,t21426,t21432);
float t21531 = length(t21530);
float t21532 = (t21531*t21531);
bool t21533 = (t21532>1);
bool t21534 = (t21529&&t21533);
float t21535;
float t21536;
float t21537;
float t21538;
if(t21534){
t21535 = 0;
t21536 = 0;
t21537 = 0;
t21538 = 1;
} else {
t21535 = 0;
t21536 = 0;
t21537 = 0;
t21538 = 0;
}
float t21539 = (1-t21501);
float t21540 = (t21467*t21539);
float t21541 = (t21501+t21540);
float t21542 = (1-t21541);
float t21543 = (t21538*t21542);
float t21544 = (t21535*t21543);
float t21545 = (t21505+t21544);
bool t21546 = (t21426>0);
bool t21547 = (t21519>0);
bool t21548 = (!t21547);
bool t21549 = (t21546&&t21548);
bool t21550 = (!t21546);
bool t21551 = (t21547&&t21550);
bool t21552 = (t21549||t21551);
bool t21553 = (t21528<196);
bool t21554 = (t21528>float(6.76));
bool t21555 = (t21553&&t21554);
bool t21556 = (t21552&&t21555);
float t21557;
float t21558;
float t21559;
float t21560;
if(t21556){
float t21561 = (t21519/t21517);
float t21562 = (-t21561);
float t21563 = (t21562*t21510);
float t21564 = (t21513+t21563);
float t21565 = atan(t21564,t21525);
float t21566 = (u1.u0/30);
float t21567 = (t21565+t21566);
float t21568 = (2*3.1415927);
float t21569 = (t21567+t21568);
float t21570 = mod(t21569,2);
float t21571 = (t21570*3.1415927);
float t21572 = (t21571/t21568);
float t21573 = (t21562*t21517);
float t21574 = (t21519+t21573);
float t21575 = (t21562*t21523);
float t21576 = (t21525+t21575);
vec3 t21577 = vec3(t21564,t21574,t21576);
float t21578 = length(t21577);
float t21579 = (t21578*t21578);
float t21580 = sqrt(t21579);
float t21581 = (t21580-float(2.6));
float t21582 = (t21581/float(11.4));
vec4 t21583 = texture(s4,vec2(t21572,t21582));
t21557 = t21583.x;
t21558 = t21583.y;
t21559 = t21583.z;
vec3 t21584 = vec3(t21583.x,t21583.y,t21583.z);
float t21585 = length(t21584);
float t21586 = (t21585*t21585);
float t21587 = (t21586/float(3.0));
bool t21588 = (t21587<=1);
float t21589;
if(t21588){
t21589 = t21587;
} else {
t21589 = 1;
}
bool t21590 = (t21589>=0);
float t21591;
if(t21590){
t21591 = t21589;
} else {
t21591 = 0;
}
t21560 = t21591;
} else {
t21557 = 0;
t21558 = 0;
t21559 = 0;
t21560 = 0;
}
float t21592 = (1-t21541);
float t21593 = (t21538*t21592);
float t21594 = (t21541+t21593);
float t21595 = (1-t21594);
float t21596 = (t21560*t21595);
float t21597 = (t21557*t21596);
float t21598 = (t21545+t21597);
float t21599 = (t115*t21513);
float t21600 = pow(t21528,float(2.5));
float t21601 = (t21599/t21600);
float t21602 = (t21601*t21511);
float t21603 = (t21510+t21602);
float t21604 = (t21511*u1.u4);
float t21605 = (t21603*t21604);
float t21606 = (t21513+t21605);
float t21607 = (t115*t21519);
float t21608 = (t21607/t21600);
float t21609 = (t21608*t21511);
float t21610 = (t21517+t21609);
float t21611 = (t21610*t21604);
float t21612 = (t21519+t21611);
float t21613 = (t115*t21525);
float t21614 = (t21613/t21600);
float t21615 = (t21614*t21511);
float t21616 = (t21523+t21615);
float t21617 = (t21616*t21604);
float t21618 = (t21525+t21617);
vec3 t21619 = vec3(t21606,t21612,t21618);
float t21620 = length(t21619);
float t21621 = (t21620*t21620);
bool t21622 = (t21621<1);
vec3 t21623 = vec3(t21513,t21519,t21525);
float t21624 = length(t21623);
float t21625 = (t21624*t21624);
bool t21626 = (t21625>1);
bool t21627 = (t21622&&t21626);
float t21628;
float t21629;
float t21630;
float t21631;
if(t21627){
t21628 = 0;
t21629 = 0;
t21630 = 0;
t21631 = 1;
} else {
t21628 = 0;
t21629 = 0;
t21630 = 0;
t21631 = 0;
}
float t21632 = (1-t21594);
float t21633 = (t21560*t21632);
float t21634 = (t21594+t21633);
float t21635 = (1-t21634);
float t21636 = (t21631*t21635);
float t21637 = (t21628*t21636);
float t21638 = (t21598+t21637);
bool t21639 = (t21519>0);
bool t21640 = (t21612>0);
bool t21641 = (!t21640);
bool t21642 = (t21639&&t21641);
bool t21643 = (!t21639);
bool t21644 = (t21640&&t21643);
bool t21645 = (t21642||t21644);
bool t21646 = (t21621<196);
bool t21647 = (t21621>float(6.76));
bool t21648 = (t21646&&t21647);
bool t21649 = (t21645&&t21648);
float t21650;
float t21651;
float t21652;
float t21653;
if(t21649){
float t21654 = (t21612/t21610);
float t21655 = (-t21654);
float t21656 = (t21655*t21603);
float t21657 = (t21606+t21656);
float t21658 = atan(t21657,t21618);
float t21659 = (u1.u0/30);
float t21660 = (t21658+t21659);
float t21661 = (2*3.1415927);
float t21662 = (t21660+t21661);
float t21663 = mod(t21662,2);
float t21664 = (t21663*3.1415927);
float t21665 = (t21664/t21661);
float t21666 = (t21655*t21610);
float t21667 = (t21612+t21666);
float t21668 = (t21655*t21616);
float t21669 = (t21618+t21668);
vec3 t21670 = vec3(t21657,t21667,t21669);
float t21671 = length(t21670);
float t21672 = (t21671*t21671);
float t21673 = sqrt(t21672);
float t21674 = (t21673-float(2.6));
float t21675 = (t21674/float(11.4));
vec4 t21676 = texture(s4,vec2(t21665,t21675));
t21650 = t21676.x;
t21651 = t21676.y;
t21652 = t21676.z;
vec3 t21677 = vec3(t21676.x,t21676.y,t21676.z);
float t21678 = length(t21677);
float t21679 = (t21678*t21678);
float t21680 = (t21679/float(3.0));
bool t21681 = (t21680<=1);
float t21682;
if(t21681){
t21682 = t21680;
} else {
t21682 = 1;
}
bool t21683 = (t21682>=0);
float t21684;
if(t21683){
t21684 = t21682;
} else {
t21684 = 0;
}
t21653 = t21684;
} else {
t21650 = 0;
t21651 = 0;
t21652 = 0;
t21653 = 0;
}
float t21685 = (1-t21634);
float t21686 = (t21631*t21685);
float t21687 = (t21634+t21686);
float t21688 = (1-t21687);
float t21689 = (t21653*t21688);
float t21690 = (t21650*t21689);
float t21691 = (t21638+t21690);
float t21692 = (t115*t21606);
float t21693 = pow(t21621,float(2.5));
float t21694 = (t21692/t21693);
float t21695 = (t21694*t21604);
float t21696 = (t21603+t21695);
float t21697 = (t21604*u1.u4);
float t21698 = (t21696*t21697);
float t21699 = (t21606+t21698);
float t21700 = (t115*t21612);
float t21701 = (t21700/t21693);
float t21702 = (t21701*t21604);
float t21703 = (t21610+t21702);
float t21704 = (t21703*t21697);
float t21705 = (t21612+t21704);
float t21706 = (t115*t21618);
float t21707 = (t21706/t21693);
float t21708 = (t21707*t21604);
float t21709 = (t21616+t21708);
float t21710 = (t21709*t21697);
float t21711 = (t21618+t21710);
vec3 t21712 = vec3(t21699,t21705,t21711);
float t21713 = length(t21712);
float t21714 = (t21713*t21713);
bool t21715 = (t21714<1);
vec3 t21716 = vec3(t21606,t21612,t21618);
float t21717 = length(t21716);
float t21718 = (t21717*t21717);
bool t21719 = (t21718>1);
bool t21720 = (t21715&&t21719);
float t21721;
float t21722;
float t21723;
float t21724;
if(t21720){
t21721 = 0;
t21722 = 0;
t21723 = 0;
t21724 = 1;
} else {
t21721 = 0;
t21722 = 0;
t21723 = 0;
t21724 = 0;
}
float t21725 = (1-t21687);
float t21726 = (t21653*t21725);
float t21727 = (t21687+t21726);
float t21728 = (1-t21727);
float t21729 = (t21724*t21728);
float t21730 = (t21721*t21729);
float t21731 = (t21691+t21730);
bool t21732 = (t21612>0);
bool t21733 = (t21705>0);
bool t21734 = (!t21733);
bool t21735 = (t21732&&t21734);
bool t21736 = (!t21732);
bool t21737 = (t21733&&t21736);
bool t21738 = (t21735||t21737);
bool t21739 = (t21714<196);
bool t21740 = (t21714>float(6.76));
bool t21741 = (t21739&&t21740);
bool t21742 = (t21738&&t21741);
float t21743;
float t21744;
float t21745;
float t21746;
if(t21742){
float t21747 = (t21705/t21703);
float t21748 = (-t21747);
float t21749 = (t21748*t21696);
float t21750 = (t21699+t21749);
float t21751 = atan(t21750,t21711);
float t21752 = (u1.u0/30);
float t21753 = (t21751+t21752);
float t21754 = (2*3.1415927);
float t21755 = (t21753+t21754);
float t21756 = mod(t21755,2);
float t21757 = (t21756*3.1415927);
float t21758 = (t21757/t21754);
float t21759 = (t21748*t21703);
float t21760 = (t21705+t21759);
float t21761 = (t21748*t21709);
float t21762 = (t21711+t21761);
vec3 t21763 = vec3(t21750,t21760,t21762);
float t21764 = length(t21763);
float t21765 = (t21764*t21764);
float t21766 = sqrt(t21765);
float t21767 = (t21766-float(2.6));
float t21768 = (t21767/float(11.4));
vec4 t21769 = texture(s4,vec2(t21758,t21768));
t21743 = t21769.x;
t21744 = t21769.y;
t21745 = t21769.z;
vec3 t21770 = vec3(t21769.x,t21769.y,t21769.z);
float t21771 = length(t21770);
float t21772 = (t21771*t21771);
float t21773 = (t21772/float(3.0));
bool t21774 = (t21773<=1);
float t21775;
if(t21774){
t21775 = t21773;
} else {
t21775 = 1;
}
bool t21776 = (t21775>=0);
float t21777;
if(t21776){
t21777 = t21775;
} else {
t21777 = 0;
}
t21746 = t21777;
} else {
t21743 = 0;
t21744 = 0;
t21745 = 0;
t21746 = 0;
}
float t21778 = (1-t21727);
float t21779 = (t21724*t21778);
float t21780 = (t21727+t21779);
float t21781 = (1-t21780);
float t21782 = (t21746*t21781);
float t21783 = (t21743*t21782);
float t21784 = (t21731+t21783);
float t21785 = (t115*t21699);
float t21786 = pow(t21714,float(2.5));
float t21787 = (t21785/t21786);
float t21788 = (t21787*t21697);
float t21789 = (t21696+t21788);
float t21790 = (t21697*u1.u4);
float t21791 = (t21789*t21790);
float t21792 = (t21699+t21791);
float t21793 = (t115*t21705);
float t21794 = (t21793/t21786);
float t21795 = (t21794*t21697);
float t21796 = (t21703+t21795);
float t21797 = (t21796*t21790);
float t21798 = (t21705+t21797);
float t21799 = (t115*t21711);
float t21800 = (t21799/t21786);
float t21801 = (t21800*t21697);
float t21802 = (t21709+t21801);
float t21803 = (t21802*t21790);
float t21804 = (t21711+t21803);
vec3 t21805 = vec3(t21792,t21798,t21804);
float t21806 = length(t21805);
float t21807 = (t21806*t21806);
bool t21808 = (t21807<1);
vec3 t21809 = vec3(t21699,t21705,t21711);
float t21810 = length(t21809);
float t21811 = (t21810*t21810);
bool t21812 = (t21811>1);
bool t21813 = (t21808&&t21812);
float t21814;
float t21815;
float t21816;
float t21817;
if(t21813){
t21814 = 0;
t21815 = 0;
t21816 = 0;
t21817 = 1;
} else {
t21814 = 0;
t21815 = 0;
t21816 = 0;
t21817 = 0;
}
float t21818 = (1-t21780);
float t21819 = (t21746*t21818);
float t21820 = (t21780+t21819);
float t21821 = (1-t21820);
float t21822 = (t21817*t21821);
float t21823 = (t21814*t21822);
float t21824 = (t21784+t21823);
bool t21825 = (t21705>0);
bool t21826 = (t21798>0);
bool t21827 = (!t21826);
bool t21828 = (t21825&&t21827);
bool t21829 = (!t21825);
bool t21830 = (t21826&&t21829);
bool t21831 = (t21828||t21830);
bool t21832 = (t21807<196);
bool t21833 = (t21807>float(6.76));
bool t21834 = (t21832&&t21833);
bool t21835 = (t21831&&t21834);
float t21836;
float t21837;
float t21838;
float t21839;
if(t21835){
float t21840 = (t21798/t21796);
float t21841 = (-t21840);
float t21842 = (t21841*t21789);
float t21843 = (t21792+t21842);
float t21844 = atan(t21843,t21804);
float t21845 = (u1.u0/30);
float t21846 = (t21844+t21845);
float t21847 = (2*3.1415927);
float t21848 = (t21846+t21847);
float t21849 = mod(t21848,2);
float t21850 = (t21849*3.1415927);
float t21851 = (t21850/t21847);
float t21852 = (t21841*t21796);
float t21853 = (t21798+t21852);
float t21854 = (t21841*t21802);
float t21855 = (t21804+t21854);
vec3 t21856 = vec3(t21843,t21853,t21855);
float t21857 = length(t21856);
float t21858 = (t21857*t21857);
float t21859 = sqrt(t21858);
float t21860 = (t21859-float(2.6));
float t21861 = (t21860/float(11.4));
vec4 t21862 = texture(s4,vec2(t21851,t21861));
t21836 = t21862.x;
t21837 = t21862.y;
t21838 = t21862.z;
vec3 t21863 = vec3(t21862.x,t21862.y,t21862.z);
float t21864 = length(t21863);
float t21865 = (t21864*t21864);
float t21866 = (t21865/float(3.0));
bool t21867 = (t21866<=1);
float t21868;
if(t21867){
t21868 = t21866;
} else {
t21868 = 1;
}
bool t21869 = (t21868>=0);
float t21870;
if(t21869){
t21870 = t21868;
} else {
t21870 = 0;
}
t21839 = t21870;
} else {
t21836 = 0;
t21837 = 0;
t21838 = 0;
t21839 = 0;
}
float t21871 = (1-t21820);
float t21872 = (t21817*t21871);
float t21873 = (t21820+t21872);
float t21874 = (1-t21873);
float t21875 = (t21839*t21874);
float t21876 = (t21836*t21875);
float t21877 = (t21824+t21876);
float t21878 = (t115*t21792);
float t21879 = pow(t21807,float(2.5));
float t21880 = (t21878/t21879);
float t21881 = (t21880*t21790);
float t21882 = (t21789+t21881);
float t21883 = (t21790*u1.u4);
float t21884 = (t21882*t21883);
float t21885 = (t21792+t21884);
float t21886 = (t115*t21798);
float t21887 = (t21886/t21879);
float t21888 = (t21887*t21790);
float t21889 = (t21796+t21888);
float t21890 = (t21889*t21883);
float t21891 = (t21798+t21890);
float t21892 = (t115*t21804);
float t21893 = (t21892/t21879);
float t21894 = (t21893*t21790);
float t21895 = (t21802+t21894);
float t21896 = (t21895*t21883);
float t21897 = (t21804+t21896);
vec3 t21898 = vec3(t21885,t21891,t21897);
float t21899 = length(t21898);
float t21900 = (t21899*t21899);
bool t21901 = (t21900<1);
vec3 t21902 = vec3(t21792,t21798,t21804);
float t21903 = length(t21902);
float t21904 = (t21903*t21903);
bool t21905 = (t21904>1);
bool t21906 = (t21901&&t21905);
float t21907;
float t21908;
float t21909;
float t21910;
if(t21906){
t21907 = 0;
t21908 = 0;
t21909 = 0;
t21910 = 1;
} else {
t21907 = 0;
t21908 = 0;
t21909 = 0;
t21910 = 0;
}
float t21911 = (1-t21873);
float t21912 = (t21839*t21911);
float t21913 = (t21873+t21912);
float t21914 = (1-t21913);
float t21915 = (t21910*t21914);
float t21916 = (t21907*t21915);
float t21917 = (t21877+t21916);
bool t21918 = (t21798>0);
bool t21919 = (t21891>0);
bool t21920 = (!t21919);
bool t21921 = (t21918&&t21920);
bool t21922 = (!t21918);
bool t21923 = (t21919&&t21922);
bool t21924 = (t21921||t21923);
bool t21925 = (t21900<196);
bool t21926 = (t21900>float(6.76));
bool t21927 = (t21925&&t21926);
bool t21928 = (t21924&&t21927);
float t21929;
float t21930;
float t21931;
float t21932;
if(t21928){
float t21933 = (t21891/t21889);
float t21934 = (-t21933);
float t21935 = (t21934*t21882);
float t21936 = (t21885+t21935);
float t21937 = atan(t21936,t21897);
float t21938 = (u1.u0/30);
float t21939 = (t21937+t21938);
float t21940 = (2*3.1415927);
float t21941 = (t21939+t21940);
float t21942 = mod(t21941,2);
float t21943 = (t21942*3.1415927);
float t21944 = (t21943/t21940);
float t21945 = (t21934*t21889);
float t21946 = (t21891+t21945);
float t21947 = (t21934*t21895);
float t21948 = (t21897+t21947);
vec3 t21949 = vec3(t21936,t21946,t21948);
float t21950 = length(t21949);
float t21951 = (t21950*t21950);
float t21952 = sqrt(t21951);
float t21953 = (t21952-float(2.6));
float t21954 = (t21953/float(11.4));
vec4 t21955 = texture(s4,vec2(t21944,t21954));
t21929 = t21955.x;
t21930 = t21955.y;
t21931 = t21955.z;
vec3 t21956 = vec3(t21955.x,t21955.y,t21955.z);
float t21957 = length(t21956);
float t21958 = (t21957*t21957);
float t21959 = (t21958/float(3.0));
bool t21960 = (t21959<=1);
float t21961;
if(t21960){
t21961 = t21959;
} else {
t21961 = 1;
}
bool t21962 = (t21961>=0);
float t21963;
if(t21962){
t21963 = t21961;
} else {
t21963 = 0;
}
t21932 = t21963;
} else {
t21929 = 0;
t21930 = 0;
t21931 = 0;
t21932 = 0;
}
float t21964 = (1-t21913);
float t21965 = (t21910*t21964);
float t21966 = (t21913+t21965);
float t21967 = (1-t21966);
float t21968 = (t21932*t21967);
float t21969 = (t21929*t21968);
float t21970 = (t21917+t21969);
float t21971 = (t115*t21885);
float t21972 = pow(t21900,float(2.5));
float t21973 = (t21971/t21972);
float t21974 = (t21973*t21883);
float t21975 = (t21882+t21974);
float t21976 = (t21883*u1.u4);
float t21977 = (t21975*t21976);
float t21978 = (t21885+t21977);
float t21979 = (t115*t21891);
float t21980 = (t21979/t21972);
float t21981 = (t21980*t21883);
float t21982 = (t21889+t21981);
float t21983 = (t21982*t21976);
float t21984 = (t21891+t21983);
float t21985 = (t115*t21897);
float t21986 = (t21985/t21972);
float t21987 = (t21986*t21883);
float t21988 = (t21895+t21987);
float t21989 = (t21988*t21976);
float t21990 = (t21897+t21989);
vec3 t21991 = vec3(t21978,t21984,t21990);
float t21992 = length(t21991);
float t21993 = (t21992*t21992);
bool t21994 = (t21993<1);
vec3 t21995 = vec3(t21885,t21891,t21897);
float t21996 = length(t21995);
float t21997 = (t21996*t21996);
bool t21998 = (t21997>1);
bool t21999 = (t21994&&t21998);
float t22000;
float t22001;
float t22002;
float t22003;
if(t21999){
t22000 = 0;
t22001 = 0;
t22002 = 0;
t22003 = 1;
} else {
t22000 = 0;
t22001 = 0;
t22002 = 0;
t22003 = 0;
}
float t22004 = (1-t21966);
float t22005 = (t21932*t22004);
float t22006 = (t21966+t22005);
float t22007 = (1-t22006);
float t22008 = (t22003*t22007);
float t22009 = (t22000*t22008);
float t22010 = (t21970+t22009);
bool t22011 = (t21891>0);
bool t22012 = (t21984>0);
bool t22013 = (!t22012);
bool t22014 = (t22011&&t22013);
bool t22015 = (!t22011);
bool t22016 = (t22012&&t22015);
bool t22017 = (t22014||t22016);
bool t22018 = (t21993<196);
bool t22019 = (t21993>float(6.76));
bool t22020 = (t22018&&t22019);
bool t22021 = (t22017&&t22020);
float t22022;
float t22023;
float t22024;
float t22025;
if(t22021){
float t22026 = (t21984/t21982);
float t22027 = (-t22026);
float t22028 = (t22027*t21975);
float t22029 = (t21978+t22028);
float t22030 = atan(t22029,t21990);
float t22031 = (u1.u0/30);
float t22032 = (t22030+t22031);
float t22033 = (2*3.1415927);
float t22034 = (t22032+t22033);
float t22035 = mod(t22034,2);
float t22036 = (t22035*3.1415927);
float t22037 = (t22036/t22033);
float t22038 = (t22027*t21982);
float t22039 = (t21984+t22038);
float t22040 = (t22027*t21988);
float t22041 = (t21990+t22040);
vec3 t22042 = vec3(t22029,t22039,t22041);
float t22043 = length(t22042);
float t22044 = (t22043*t22043);
float t22045 = sqrt(t22044);
float t22046 = (t22045-float(2.6));
float t22047 = (t22046/float(11.4));
vec4 t22048 = texture(s4,vec2(t22037,t22047));
t22022 = t22048.x;
t22023 = t22048.y;
t22024 = t22048.z;
vec3 t22049 = vec3(t22048.x,t22048.y,t22048.z);
float t22050 = length(t22049);
float t22051 = (t22050*t22050);
float t22052 = (t22051/float(3.0));
bool t22053 = (t22052<=1);
float t22054;
if(t22053){
t22054 = t22052;
} else {
t22054 = 1;
}
bool t22055 = (t22054>=0);
float t22056;
if(t22055){
t22056 = t22054;
} else {
t22056 = 0;
}
t22025 = t22056;
} else {
t22022 = 0;
t22023 = 0;
t22024 = 0;
t22025 = 0;
}
float t22057 = (1-t22006);
float t22058 = (t22003*t22057);
float t22059 = (t22006+t22058);
float t22060 = (1-t22059);
float t22061 = (t22025*t22060);
float t22062 = (t22022*t22061);
float t22063 = (t22010+t22062);
float t22064 = (t115*t21978);
float t22065 = pow(t21993,float(2.5));
float t22066 = (t22064/t22065);
float t22067 = (t22066*t21976);
float t22068 = (t21975+t22067);
float t22069 = (t21976*u1.u4);
float t22070 = (t22068*t22069);
float t22071 = (t21978+t22070);
float t22072 = (t115*t21984);
float t22073 = (t22072/t22065);
float t22074 = (t22073*t21976);
float t22075 = (t21982+t22074);
float t22076 = (t22075*t22069);
float t22077 = (t21984+t22076);
float t22078 = (t115*t21990);
float t22079 = (t22078/t22065);
float t22080 = (t22079*t21976);
float t22081 = (t21988+t22080);
float t22082 = (t22081*t22069);
float t22083 = (t21990+t22082);
vec3 t22084 = vec3(t22071,t22077,t22083);
float t22085 = length(t22084);
float t22086 = (t22085*t22085);
bool t22087 = (t22086<1);
vec3 t22088 = vec3(t21978,t21984,t21990);
float t22089 = length(t22088);
float t22090 = (t22089*t22089);
bool t22091 = (t22090>1);
bool t22092 = (t22087&&t22091);
float t22093;
float t22094;
float t22095;
float t22096;
if(t22092){
t22093 = 0;
t22094 = 0;
t22095 = 0;
t22096 = 1;
} else {
t22093 = 0;
t22094 = 0;
t22095 = 0;
t22096 = 0;
}
float t22097 = (1-t22059);
float t22098 = (t22025*t22097);
float t22099 = (t22059+t22098);
float t22100 = (1-t22099);
float t22101 = (t22096*t22100);
float t22102 = (t22093*t22101);
float t22103 = (t22063+t22102);
bool t22104 = (t21984>0);
bool t22105 = (t22077>0);
bool t22106 = (!t22105);
bool t22107 = (t22104&&t22106);
bool t22108 = (!t22104);
bool t22109 = (t22105&&t22108);
bool t22110 = (t22107||t22109);
bool t22111 = (t22086<196);
bool t22112 = (t22086>float(6.76));
bool t22113 = (t22111&&t22112);
bool t22114 = (t22110&&t22113);
float t22115;
float t22116;
float t22117;
float t22118;
if(t22114){
float t22119 = (t22077/t22075);
float t22120 = (-t22119);
float t22121 = (t22120*t22068);
float t22122 = (t22071+t22121);
float t22123 = atan(t22122,t22083);
float t22124 = (u1.u0/30);
float t22125 = (t22123+t22124);
float t22126 = (2*3.1415927);
float t22127 = (t22125+t22126);
float t22128 = mod(t22127,2);
float t22129 = (t22128*3.1415927);
float t22130 = (t22129/t22126);
float t22131 = (t22120*t22075);
float t22132 = (t22077+t22131);
float t22133 = (t22120*t22081);
float t22134 = (t22083+t22133);
vec3 t22135 = vec3(t22122,t22132,t22134);
float t22136 = length(t22135);
float t22137 = (t22136*t22136);
float t22138 = sqrt(t22137);
float t22139 = (t22138-float(2.6));
float t22140 = (t22139/float(11.4));
vec4 t22141 = texture(s4,vec2(t22130,t22140));
t22115 = t22141.x;
t22116 = t22141.y;
t22117 = t22141.z;
vec3 t22142 = vec3(t22141.x,t22141.y,t22141.z);
float t22143 = length(t22142);
float t22144 = (t22143*t22143);
float t22145 = (t22144/float(3.0));
bool t22146 = (t22145<=1);
float t22147;
if(t22146){
t22147 = t22145;
} else {
t22147 = 1;
}
bool t22148 = (t22147>=0);
float t22149;
if(t22148){
t22149 = t22147;
} else {
t22149 = 0;
}
t22118 = t22149;
} else {
t22115 = 0;
t22116 = 0;
t22117 = 0;
t22118 = 0;
}
float t22150 = (1-t22099);
float t22151 = (t22096*t22150);
float t22152 = (t22099+t22151);
float t22153 = (1-t22152);
float t22154 = (t22118*t22153);
float t22155 = (t22115*t22154);
float t22156 = (t22103+t22155);
float t22157 = (t115*t22071);
float t22158 = pow(t22086,float(2.5));
float t22159 = (t22157/t22158);
float t22160 = (t22159*t22069);
float t22161 = (t22068+t22160);
float t22162 = (t22069*u1.u4);
float t22163 = (t22161*t22162);
float t22164 = (t22071+t22163);
float t22165 = (t115*t22077);
float t22166 = (t22165/t22158);
float t22167 = (t22166*t22069);
float t22168 = (t22075+t22167);
float t22169 = (t22168*t22162);
float t22170 = (t22077+t22169);
float t22171 = (t115*t22083);
float t22172 = (t22171/t22158);
float t22173 = (t22172*t22069);
float t22174 = (t22081+t22173);
float t22175 = (t22174*t22162);
float t22176 = (t22083+t22175);
vec3 t22177 = vec3(t22164,t22170,t22176);
float t22178 = length(t22177);
float t22179 = (t22178*t22178);
bool t22180 = (t22179<1);
vec3 t22181 = vec3(t22071,t22077,t22083);
float t22182 = length(t22181);
float t22183 = (t22182*t22182);
bool t22184 = (t22183>1);
bool t22185 = (t22180&&t22184);
float t22186;
float t22187;
float t22188;
float t22189;
if(t22185){
t22186 = 0;
t22187 = 0;
t22188 = 0;
t22189 = 1;
} else {
t22186 = 0;
t22187 = 0;
t22188 = 0;
t22189 = 0;
}
float t22190 = (1-t22152);
float t22191 = (t22118*t22190);
float t22192 = (t22152+t22191);
float t22193 = (1-t22192);
float t22194 = (t22189*t22193);
float t22195 = (t22186*t22194);
float t22196 = (t22156+t22195);
bool t22197 = (t22077>0);
bool t22198 = (t22170>0);
bool t22199 = (!t22198);
bool t22200 = (t22197&&t22199);
bool t22201 = (!t22197);
bool t22202 = (t22198&&t22201);
bool t22203 = (t22200||t22202);
bool t22204 = (t22179<196);
bool t22205 = (t22179>float(6.76));
bool t22206 = (t22204&&t22205);
bool t22207 = (t22203&&t22206);
float t22208;
float t22209;
float t22210;
float t22211;
if(t22207){
float t22212 = (t22170/t22168);
float t22213 = (-t22212);
float t22214 = (t22213*t22161);
float t22215 = (t22164+t22214);
float t22216 = atan(t22215,t22176);
float t22217 = (u1.u0/30);
float t22218 = (t22216+t22217);
float t22219 = (2*3.1415927);
float t22220 = (t22218+t22219);
float t22221 = mod(t22220,2);
float t22222 = (t22221*3.1415927);
float t22223 = (t22222/t22219);
float t22224 = (t22213*t22168);
float t22225 = (t22170+t22224);
float t22226 = (t22213*t22174);
float t22227 = (t22176+t22226);
vec3 t22228 = vec3(t22215,t22225,t22227);
float t22229 = length(t22228);
float t22230 = (t22229*t22229);
float t22231 = sqrt(t22230);
float t22232 = (t22231-float(2.6));
float t22233 = (t22232/float(11.4));
vec4 t22234 = texture(s4,vec2(t22223,t22233));
t22208 = t22234.x;
t22209 = t22234.y;
t22210 = t22234.z;
vec3 t22235 = vec3(t22234.x,t22234.y,t22234.z);
float t22236 = length(t22235);
float t22237 = (t22236*t22236);
float t22238 = (t22237/float(3.0));
bool t22239 = (t22238<=1);
float t22240;
if(t22239){
t22240 = t22238;
} else {
t22240 = 1;
}
bool t22241 = (t22240>=0);
float t22242;
if(t22241){
t22242 = t22240;
} else {
t22242 = 0;
}
t22211 = t22242;
} else {
t22208 = 0;
t22209 = 0;
t22210 = 0;
t22211 = 0;
}
float t22243 = (1-t22192);
float t22244 = (t22189*t22243);
float t22245 = (t22192+t22244);
float t22246 = (1-t22245);
float t22247 = (t22211*t22246);
float t22248 = (t22208*t22247);
float t22249 = (t22196+t22248);
float t22250 = (t115*t22164);
float t22251 = pow(t22179,float(2.5));
float t22252 = (t22250/t22251);
float t22253 = (t22252*t22162);
float t22254 = (t22161+t22253);
float t22255 = (t22162*u1.u4);
float t22256 = (t22254*t22255);
float t22257 = (t22164+t22256);
float t22258 = (t115*t22170);
float t22259 = (t22258/t22251);
float t22260 = (t22259*t22162);
float t22261 = (t22168+t22260);
float t22262 = (t22261*t22255);
float t22263 = (t22170+t22262);
float t22264 = (t115*t22176);
float t22265 = (t22264/t22251);
float t22266 = (t22265*t22162);
float t22267 = (t22174+t22266);
float t22268 = (t22267*t22255);
float t22269 = (t22176+t22268);
vec3 t22270 = vec3(t22257,t22263,t22269);
float t22271 = length(t22270);
float t22272 = (t22271*t22271);
bool t22273 = (t22272<1);
vec3 t22274 = vec3(t22164,t22170,t22176);
float t22275 = length(t22274);
float t22276 = (t22275*t22275);
bool t22277 = (t22276>1);
bool t22278 = (t22273&&t22277);
float t22279;
float t22280;
float t22281;
float t22282;
if(t22278){
t22279 = 0;
t22280 = 0;
t22281 = 0;
t22282 = 1;
} else {
t22279 = 0;
t22280 = 0;
t22281 = 0;
t22282 = 0;
}
float t22283 = (1-t22245);
float t22284 = (t22211*t22283);
float t22285 = (t22245+t22284);
float t22286 = (1-t22285);
float t22287 = (t22282*t22286);
float t22288 = (t22279*t22287);
float t22289 = (t22249+t22288);
bool t22290 = (t22170>0);
bool t22291 = (t22263>0);
bool t22292 = (!t22291);
bool t22293 = (t22290&&t22292);
bool t22294 = (!t22290);
bool t22295 = (t22291&&t22294);
bool t22296 = (t22293||t22295);
bool t22297 = (t22272<196);
bool t22298 = (t22272>float(6.76));
bool t22299 = (t22297&&t22298);
bool t22300 = (t22296&&t22299);
float t22301;
float t22302;
float t22303;
float t22304;
if(t22300){
float t22305 = (t22263/t22261);
float t22306 = (-t22305);
float t22307 = (t22306*t22254);
float t22308 = (t22257+t22307);
float t22309 = atan(t22308,t22269);
float t22310 = (u1.u0/30);
float t22311 = (t22309+t22310);
float t22312 = (2*3.1415927);
float t22313 = (t22311+t22312);
float t22314 = mod(t22313,2);
float t22315 = (t22314*3.1415927);
float t22316 = (t22315/t22312);
float t22317 = (t22306*t22261);
float t22318 = (t22263+t22317);
float t22319 = (t22306*t22267);
float t22320 = (t22269+t22319);
vec3 t22321 = vec3(t22308,t22318,t22320);
float t22322 = length(t22321);
float t22323 = (t22322*t22322);
float t22324 = sqrt(t22323);
float t22325 = (t22324-float(2.6));
float t22326 = (t22325/float(11.4));
vec4 t22327 = texture(s4,vec2(t22316,t22326));
t22301 = t22327.x;
t22302 = t22327.y;
t22303 = t22327.z;
vec3 t22328 = vec3(t22327.x,t22327.y,t22327.z);
float t22329 = length(t22328);
float t22330 = (t22329*t22329);
float t22331 = (t22330/float(3.0));
bool t22332 = (t22331<=1);
float t22333;
if(t22332){
t22333 = t22331;
} else {
t22333 = 1;
}
bool t22334 = (t22333>=0);
float t22335;
if(t22334){
t22335 = t22333;
} else {
t22335 = 0;
}
t22304 = t22335;
} else {
t22301 = 0;
t22302 = 0;
t22303 = 0;
t22304 = 0;
}
float t22336 = (1-t22285);
float t22337 = (t22282*t22336);
float t22338 = (t22285+t22337);
float t22339 = (1-t22338);
float t22340 = (t22304*t22339);
float t22341 = (t22301*t22340);
float t22342 = (t22289+t22341);
float t22343 = (t115*t22257);
float t22344 = pow(t22272,float(2.5));
float t22345 = (t22343/t22344);
float t22346 = (t22345*t22255);
float t22347 = (t22254+t22346);
float t22348 = (t22255*u1.u4);
float t22349 = (t22347*t22348);
float t22350 = (t22257+t22349);
float t22351 = (t115*t22263);
float t22352 = (t22351/t22344);
float t22353 = (t22352*t22255);
float t22354 = (t22261+t22353);
float t22355 = (t22354*t22348);
float t22356 = (t22263+t22355);
float t22357 = (t115*t22269);
float t22358 = (t22357/t22344);
float t22359 = (t22358*t22255);
float t22360 = (t22267+t22359);
float t22361 = (t22360*t22348);
float t22362 = (t22269+t22361);
vec3 t22363 = vec3(t22350,t22356,t22362);
float t22364 = length(t22363);
float t22365 = (t22364*t22364);
bool t22366 = (t22365<1);
vec3 t22367 = vec3(t22257,t22263,t22269);
float t22368 = length(t22367);
float t22369 = (t22368*t22368);
bool t22370 = (t22369>1);
bool t22371 = (t22366&&t22370);
float t22372;
float t22373;
float t22374;
float t22375;
if(t22371){
t22372 = 0;
t22373 = 0;
t22374 = 0;
t22375 = 1;
} else {
t22372 = 0;
t22373 = 0;
t22374 = 0;
t22375 = 0;
}
float t22376 = (1-t22338);
float t22377 = (t22304*t22376);
float t22378 = (t22338+t22377);
float t22379 = (1-t22378);
float t22380 = (t22375*t22379);
float t22381 = (t22372*t22380);
float t22382 = (t22342+t22381);
bool t22383 = (t22263>0);
bool t22384 = (t22356>0);
bool t22385 = (!t22384);
bool t22386 = (t22383&&t22385);
bool t22387 = (!t22383);
bool t22388 = (t22384&&t22387);
bool t22389 = (t22386||t22388);
bool t22390 = (t22365<196);
bool t22391 = (t22365>float(6.76));
bool t22392 = (t22390&&t22391);
bool t22393 = (t22389&&t22392);
float t22394;
float t22395;
float t22396;
float t22397;
if(t22393){
float t22398 = (t22356/t22354);
float t22399 = (-t22398);
float t22400 = (t22399*t22347);
float t22401 = (t22350+t22400);
float t22402 = atan(t22401,t22362);
float t22403 = (u1.u0/30);
float t22404 = (t22402+t22403);
float t22405 = (2*3.1415927);
float t22406 = (t22404+t22405);
float t22407 = mod(t22406,2);
float t22408 = (t22407*3.1415927);
float t22409 = (t22408/t22405);
float t22410 = (t22399*t22354);
float t22411 = (t22356+t22410);
float t22412 = (t22399*t22360);
float t22413 = (t22362+t22412);
vec3 t22414 = vec3(t22401,t22411,t22413);
float t22415 = length(t22414);
float t22416 = (t22415*t22415);
float t22417 = sqrt(t22416);
float t22418 = (t22417-float(2.6));
float t22419 = (t22418/float(11.4));
vec4 t22420 = texture(s4,vec2(t22409,t22419));
t22394 = t22420.x;
t22395 = t22420.y;
t22396 = t22420.z;
vec3 t22421 = vec3(t22420.x,t22420.y,t22420.z);
float t22422 = length(t22421);
float t22423 = (t22422*t22422);
float t22424 = (t22423/float(3.0));
bool t22425 = (t22424<=1);
float t22426;
if(t22425){
t22426 = t22424;
} else {
t22426 = 1;
}
bool t22427 = (t22426>=0);
float t22428;
if(t22427){
t22428 = t22426;
} else {
t22428 = 0;
}
t22397 = t22428;
} else {
t22394 = 0;
t22395 = 0;
t22396 = 0;
t22397 = 0;
}
float t22429 = (1-t22378);
float t22430 = (t22375*t22429);
float t22431 = (t22378+t22430);
float t22432 = (1-t22431);
float t22433 = (t22397*t22432);
float t22434 = (t22394*t22433);
float t22435 = (t22382+t22434);
float t22436 = (t115*t22350);
float t22437 = pow(t22365,float(2.5));
float t22438 = (t22436/t22437);
float t22439 = (t22438*t22348);
float t22440 = (t22347+t22439);
float t22441 = (t22348*u1.u4);
float t22442 = (t22440*t22441);
float t22443 = (t22350+t22442);
float t22444 = (t115*t22356);
float t22445 = (t22444/t22437);
float t22446 = (t22445*t22348);
float t22447 = (t22354+t22446);
float t22448 = (t22447*t22441);
float t22449 = (t22356+t22448);
float t22450 = (t115*t22362);
float t22451 = (t22450/t22437);
float t22452 = (t22451*t22348);
float t22453 = (t22360+t22452);
float t22454 = (t22453*t22441);
float t22455 = (t22362+t22454);
vec3 t22456 = vec3(t22443,t22449,t22455);
float t22457 = length(t22456);
float t22458 = (t22457*t22457);
bool t22459 = (t22458<1);
vec3 t22460 = vec3(t22350,t22356,t22362);
float t22461 = length(t22460);
float t22462 = (t22461*t22461);
bool t22463 = (t22462>1);
bool t22464 = (t22459&&t22463);
float t22465;
float t22466;
float t22467;
float t22468;
if(t22464){
t22465 = 0;
t22466 = 0;
t22467 = 0;
t22468 = 1;
} else {
t22465 = 0;
t22466 = 0;
t22467 = 0;
t22468 = 0;
}
float t22469 = (1-t22431);
float t22470 = (t22397*t22469);
float t22471 = (t22431+t22470);
float t22472 = (1-t22471);
float t22473 = (t22468*t22472);
float t22474 = (t22465*t22473);
float t22475 = (t22435+t22474);
bool t22476 = (t22356>0);
bool t22477 = (t22449>0);
bool t22478 = (!t22477);
bool t22479 = (t22476&&t22478);
bool t22480 = (!t22476);
bool t22481 = (t22477&&t22480);
bool t22482 = (t22479||t22481);
bool t22483 = (t22458<196);
bool t22484 = (t22458>float(6.76));
bool t22485 = (t22483&&t22484);
bool t22486 = (t22482&&t22485);
float t22487;
float t22488;
float t22489;
float t22490;
if(t22486){
float t22491 = (t22449/t22447);
float t22492 = (-t22491);
float t22493 = (t22492*t22440);
float t22494 = (t22443+t22493);
float t22495 = atan(t22494,t22455);
float t22496 = (u1.u0/30);
float t22497 = (t22495+t22496);
float t22498 = (2*3.1415927);
float t22499 = (t22497+t22498);
float t22500 = mod(t22499,2);
float t22501 = (t22500*3.1415927);
float t22502 = (t22501/t22498);
float t22503 = (t22492*t22447);
float t22504 = (t22449+t22503);
float t22505 = (t22492*t22453);
float t22506 = (t22455+t22505);
vec3 t22507 = vec3(t22494,t22504,t22506);
float t22508 = length(t22507);
float t22509 = (t22508*t22508);
float t22510 = sqrt(t22509);
float t22511 = (t22510-float(2.6));
float t22512 = (t22511/float(11.4));
vec4 t22513 = texture(s4,vec2(t22502,t22512));
t22487 = t22513.x;
t22488 = t22513.y;
t22489 = t22513.z;
vec3 t22514 = vec3(t22513.x,t22513.y,t22513.z);
float t22515 = length(t22514);
float t22516 = (t22515*t22515);
float t22517 = (t22516/float(3.0));
bool t22518 = (t22517<=1);
float t22519;
if(t22518){
t22519 = t22517;
} else {
t22519 = 1;
}
bool t22520 = (t22519>=0);
float t22521;
if(t22520){
t22521 = t22519;
} else {
t22521 = 0;
}
t22490 = t22521;
} else {
t22487 = 0;
t22488 = 0;
t22489 = 0;
t22490 = 0;
}
float t22522 = (1-t22471);
float t22523 = (t22468*t22522);
float t22524 = (t22471+t22523);
float t22525 = (1-t22524);
float t22526 = (t22490*t22525);
float t22527 = (t22487*t22526);
float t22528 = (t22475+t22527);
float t22529 = (t115*t22443);
float t22530 = pow(t22458,float(2.5));
float t22531 = (t22529/t22530);
float t22532 = (t22531*t22441);
float t22533 = (t22440+t22532);
float t22534 = (t22441*u1.u4);
float t22535 = (t22533*t22534);
float t22536 = (t22443+t22535);
float t22537 = (t115*t22449);
float t22538 = (t22537/t22530);
float t22539 = (t22538*t22441);
float t22540 = (t22447+t22539);
float t22541 = (t22540*t22534);
float t22542 = (t22449+t22541);
float t22543 = (t115*t22455);
float t22544 = (t22543/t22530);
float t22545 = (t22544*t22441);
float t22546 = (t22453+t22545);
float t22547 = (t22546*t22534);
float t22548 = (t22455+t22547);
vec3 t22549 = vec3(t22536,t22542,t22548);
float t22550 = length(t22549);
float t22551 = (t22550*t22550);
bool t22552 = (t22551<1);
vec3 t22553 = vec3(t22443,t22449,t22455);
float t22554 = length(t22553);
float t22555 = (t22554*t22554);
bool t22556 = (t22555>1);
bool t22557 = (t22552&&t22556);
float t22558;
float t22559;
float t22560;
float t22561;
if(t22557){
t22558 = 0;
t22559 = 0;
t22560 = 0;
t22561 = 1;
} else {
t22558 = 0;
t22559 = 0;
t22560 = 0;
t22561 = 0;
}
float t22562 = (1-t22524);
float t22563 = (t22490*t22562);
float t22564 = (t22524+t22563);
float t22565 = (1-t22564);
float t22566 = (t22561*t22565);
float t22567 = (t22558*t22566);
float t22568 = (t22528+t22567);
bool t22569 = (t22449>0);
bool t22570 = (t22542>0);
bool t22571 = (!t22570);
bool t22572 = (t22569&&t22571);
bool t22573 = (!t22569);
bool t22574 = (t22570&&t22573);
bool t22575 = (t22572||t22574);
bool t22576 = (t22551<196);
bool t22577 = (t22551>float(6.76));
bool t22578 = (t22576&&t22577);
bool t22579 = (t22575&&t22578);
float t22580;
float t22581;
float t22582;
float t22583;
if(t22579){
float t22584 = (t22542/t22540);
float t22585 = (-t22584);
float t22586 = (t22585*t22533);
float t22587 = (t22536+t22586);
float t22588 = atan(t22587,t22548);
float t22589 = (u1.u0/30);
float t22590 = (t22588+t22589);
float t22591 = (2*3.1415927);
float t22592 = (t22590+t22591);
float t22593 = mod(t22592,2);
float t22594 = (t22593*3.1415927);
float t22595 = (t22594/t22591);
float t22596 = (t22585*t22540);
float t22597 = (t22542+t22596);
float t22598 = (t22585*t22546);
float t22599 = (t22548+t22598);
vec3 t22600 = vec3(t22587,t22597,t22599);
float t22601 = length(t22600);
float t22602 = (t22601*t22601);
float t22603 = sqrt(t22602);
float t22604 = (t22603-float(2.6));
float t22605 = (t22604/float(11.4));
vec4 t22606 = texture(s4,vec2(t22595,t22605));
t22580 = t22606.x;
t22581 = t22606.y;
t22582 = t22606.z;
vec3 t22607 = vec3(t22606.x,t22606.y,t22606.z);
float t22608 = length(t22607);
float t22609 = (t22608*t22608);
float t22610 = (t22609/float(3.0));
bool t22611 = (t22610<=1);
float t22612;
if(t22611){
t22612 = t22610;
} else {
t22612 = 1;
}
bool t22613 = (t22612>=0);
float t22614;
if(t22613){
t22614 = t22612;
} else {
t22614 = 0;
}
t22583 = t22614;
} else {
t22580 = 0;
t22581 = 0;
t22582 = 0;
t22583 = 0;
}
float t22615 = (1-t22564);
float t22616 = (t22561*t22615);
float t22617 = (t22564+t22616);
float t22618 = (1-t22617);
float t22619 = (t22583*t22618);
float t22620 = (t22580*t22619);
float t22621 = (t22568+t22620);
float t22622 = (t115*t22536);
float t22623 = pow(t22551,float(2.5));
float t22624 = (t22622/t22623);
float t22625 = (t22624*t22534);
float t22626 = (t22533+t22625);
float t22627 = (t22534*u1.u4);
float t22628 = (t22626*t22627);
float t22629 = (t22536+t22628);
float t22630 = (t115*t22542);
float t22631 = (t22630/t22623);
float t22632 = (t22631*t22534);
float t22633 = (t22540+t22632);
float t22634 = (t22633*t22627);
float t22635 = (t22542+t22634);
float t22636 = (t115*t22548);
float t22637 = (t22636/t22623);
float t22638 = (t22637*t22534);
float t22639 = (t22546+t22638);
float t22640 = (t22639*t22627);
float t22641 = (t22548+t22640);
vec3 t22642 = vec3(t22629,t22635,t22641);
float t22643 = length(t22642);
float t22644 = (t22643*t22643);
bool t22645 = (t22644<1);
vec3 t22646 = vec3(t22536,t22542,t22548);
float t22647 = length(t22646);
float t22648 = (t22647*t22647);
bool t22649 = (t22648>1);
bool t22650 = (t22645&&t22649);
float t22651;
float t22652;
float t22653;
float t22654;
if(t22650){
t22651 = 0;
t22652 = 0;
t22653 = 0;
t22654 = 1;
} else {
t22651 = 0;
t22652 = 0;
t22653 = 0;
t22654 = 0;
}
float t22655 = (1-t22617);
float t22656 = (t22583*t22655);
float t22657 = (t22617+t22656);
float t22658 = (1-t22657);
float t22659 = (t22654*t22658);
float t22660 = (t22651*t22659);
float t22661 = (t22621+t22660);
bool t22662 = (t22542>0);
bool t22663 = (t22635>0);
bool t22664 = (!t22663);
bool t22665 = (t22662&&t22664);
bool t22666 = (!t22662);
bool t22667 = (t22663&&t22666);
bool t22668 = (t22665||t22667);
bool t22669 = (t22644<196);
bool t22670 = (t22644>float(6.76));
bool t22671 = (t22669&&t22670);
bool t22672 = (t22668&&t22671);
float t22673;
float t22674;
float t22675;
float t22676;
if(t22672){
float t22677 = (t22635/t22633);
float t22678 = (-t22677);
float t22679 = (t22678*t22626);
float t22680 = (t22629+t22679);
float t22681 = atan(t22680,t22641);
float t22682 = (u1.u0/30);
float t22683 = (t22681+t22682);
float t22684 = (2*3.1415927);
float t22685 = (t22683+t22684);
float t22686 = mod(t22685,2);
float t22687 = (t22686*3.1415927);
float t22688 = (t22687/t22684);
float t22689 = (t22678*t22633);
float t22690 = (t22635+t22689);
float t22691 = (t22678*t22639);
float t22692 = (t22641+t22691);
vec3 t22693 = vec3(t22680,t22690,t22692);
float t22694 = length(t22693);
float t22695 = (t22694*t22694);
float t22696 = sqrt(t22695);
float t22697 = (t22696-float(2.6));
float t22698 = (t22697/float(11.4));
vec4 t22699 = texture(s4,vec2(t22688,t22698));
t22673 = t22699.x;
t22674 = t22699.y;
t22675 = t22699.z;
vec3 t22700 = vec3(t22699.x,t22699.y,t22699.z);
float t22701 = length(t22700);
float t22702 = (t22701*t22701);
float t22703 = (t22702/float(3.0));
bool t22704 = (t22703<=1);
float t22705;
if(t22704){
t22705 = t22703;
} else {
t22705 = 1;
}
bool t22706 = (t22705>=0);
float t22707;
if(t22706){
t22707 = t22705;
} else {
t22707 = 0;
}
t22676 = t22707;
} else {
t22673 = 0;
t22674 = 0;
t22675 = 0;
t22676 = 0;
}
float t22708 = (1-t22657);
float t22709 = (t22654*t22708);
float t22710 = (t22657+t22709);
float t22711 = (1-t22710);
float t22712 = (t22676*t22711);
float t22713 = (t22673*t22712);
float t22714 = (t22661+t22713);
float t22715 = (t115*t22629);
float t22716 = pow(t22644,float(2.5));
float t22717 = (t22715/t22716);
float t22718 = (t22717*t22627);
float t22719 = (t22626+t22718);
float t22720 = (t22627*u1.u4);
float t22721 = (t22719*t22720);
float t22722 = (t22629+t22721);
float t22723 = (t115*t22635);
float t22724 = (t22723/t22716);
float t22725 = (t22724*t22627);
float t22726 = (t22633+t22725);
float t22727 = (t22726*t22720);
float t22728 = (t22635+t22727);
float t22729 = (t115*t22641);
float t22730 = (t22729/t22716);
float t22731 = (t22730*t22627);
float t22732 = (t22639+t22731);
float t22733 = (t22732*t22720);
float t22734 = (t22641+t22733);
vec3 t22735 = vec3(t22722,t22728,t22734);
float t22736 = length(t22735);
float t22737 = (t22736*t22736);
bool t22738 = (t22737<1);
vec3 t22739 = vec3(t22629,t22635,t22641);
float t22740 = length(t22739);
float t22741 = (t22740*t22740);
bool t22742 = (t22741>1);
bool t22743 = (t22738&&t22742);
float t22744;
float t22745;
float t22746;
float t22747;
if(t22743){
t22744 = 0;
t22745 = 0;
t22746 = 0;
t22747 = 1;
} else {
t22744 = 0;
t22745 = 0;
t22746 = 0;
t22747 = 0;
}
float t22748 = (1-t22710);
float t22749 = (t22676*t22748);
float t22750 = (t22710+t22749);
float t22751 = (1-t22750);
float t22752 = (t22747*t22751);
float t22753 = (t22744*t22752);
float t22754 = (t22714+t22753);
bool t22755 = (t22635>0);
bool t22756 = (t22728>0);
bool t22757 = (!t22756);
bool t22758 = (t22755&&t22757);
bool t22759 = (!t22755);
bool t22760 = (t22756&&t22759);
bool t22761 = (t22758||t22760);
bool t22762 = (t22737<196);
bool t22763 = (t22737>float(6.76));
bool t22764 = (t22762&&t22763);
bool t22765 = (t22761&&t22764);
float t22766;
float t22767;
float t22768;
float t22769;
if(t22765){
float t22770 = (t22728/t22726);
float t22771 = (-t22770);
float t22772 = (t22771*t22719);
float t22773 = (t22722+t22772);
float t22774 = atan(t22773,t22734);
float t22775 = (u1.u0/30);
float t22776 = (t22774+t22775);
float t22777 = (2*3.1415927);
float t22778 = (t22776+t22777);
float t22779 = mod(t22778,2);
float t22780 = (t22779*3.1415927);
float t22781 = (t22780/t22777);
float t22782 = (t22771*t22726);
float t22783 = (t22728+t22782);
float t22784 = (t22771*t22732);
float t22785 = (t22734+t22784);
vec3 t22786 = vec3(t22773,t22783,t22785);
float t22787 = length(t22786);
float t22788 = (t22787*t22787);
float t22789 = sqrt(t22788);
float t22790 = (t22789-float(2.6));
float t22791 = (t22790/float(11.4));
vec4 t22792 = texture(s4,vec2(t22781,t22791));
t22766 = t22792.x;
t22767 = t22792.y;
t22768 = t22792.z;
vec3 t22793 = vec3(t22792.x,t22792.y,t22792.z);
float t22794 = length(t22793);
float t22795 = (t22794*t22794);
float t22796 = (t22795/float(3.0));
bool t22797 = (t22796<=1);
float t22798;
if(t22797){
t22798 = t22796;
} else {
t22798 = 1;
}
bool t22799 = (t22798>=0);
float t22800;
if(t22799){
t22800 = t22798;
} else {
t22800 = 0;
}
t22769 = t22800;
} else {
t22766 = 0;
t22767 = 0;
t22768 = 0;
t22769 = 0;
}
float t22801 = (1-t22750);
float t22802 = (t22747*t22801);
float t22803 = (t22750+t22802);
float t22804 = (1-t22803);
float t22805 = (t22769*t22804);
float t22806 = (t22766*t22805);
float t22807 = (t22754+t22806);
float t22808 = (t115*t22722);
float t22809 = pow(t22737,float(2.5));
float t22810 = (t22808/t22809);
float t22811 = (t22810*t22720);
float t22812 = (t22719+t22811);
float t22813 = (t22720*u1.u4);
float t22814 = (t22812*t22813);
float t22815 = (t22722+t22814);
float t22816 = (t115*t22728);
float t22817 = (t22816/t22809);
float t22818 = (t22817*t22720);
float t22819 = (t22726+t22818);
float t22820 = (t22819*t22813);
float t22821 = (t22728+t22820);
float t22822 = (t115*t22734);
float t22823 = (t22822/t22809);
float t22824 = (t22823*t22720);
float t22825 = (t22732+t22824);
float t22826 = (t22825*t22813);
float t22827 = (t22734+t22826);
vec3 t22828 = vec3(t22815,t22821,t22827);
float t22829 = length(t22828);
float t22830 = (t22829*t22829);
bool t22831 = (t22830<1);
vec3 t22832 = vec3(t22722,t22728,t22734);
float t22833 = length(t22832);
float t22834 = (t22833*t22833);
bool t22835 = (t22834>1);
bool t22836 = (t22831&&t22835);
float t22837;
float t22838;
float t22839;
float t22840;
if(t22836){
t22837 = 0;
t22838 = 0;
t22839 = 0;
t22840 = 1;
} else {
t22837 = 0;
t22838 = 0;
t22839 = 0;
t22840 = 0;
}
float t22841 = (1-t22803);
float t22842 = (t22769*t22841);
float t22843 = (t22803+t22842);
float t22844 = (1-t22843);
float t22845 = (t22840*t22844);
float t22846 = (t22837*t22845);
float t22847 = (t22807+t22846);
bool t22848 = (t22728>0);
bool t22849 = (t22821>0);
bool t22850 = (!t22849);
bool t22851 = (t22848&&t22850);
bool t22852 = (!t22848);
bool t22853 = (t22849&&t22852);
bool t22854 = (t22851||t22853);
bool t22855 = (t22830<196);
bool t22856 = (t22830>float(6.76));
bool t22857 = (t22855&&t22856);
bool t22858 = (t22854&&t22857);
float t22859;
float t22860;
float t22861;
float t22862;
if(t22858){
float t22863 = (t22821/t22819);
float t22864 = (-t22863);
float t22865 = (t22864*t22812);
float t22866 = (t22815+t22865);
float t22867 = atan(t22866,t22827);
float t22868 = (u1.u0/30);
float t22869 = (t22867+t22868);
float t22870 = (2*3.1415927);
float t22871 = (t22869+t22870);
float t22872 = mod(t22871,2);
float t22873 = (t22872*3.1415927);
float t22874 = (t22873/t22870);
float t22875 = (t22864*t22819);
float t22876 = (t22821+t22875);
float t22877 = (t22864*t22825);
float t22878 = (t22827+t22877);
vec3 t22879 = vec3(t22866,t22876,t22878);
float t22880 = length(t22879);
float t22881 = (t22880*t22880);
float t22882 = sqrt(t22881);
float t22883 = (t22882-float(2.6));
float t22884 = (t22883/float(11.4));
vec4 t22885 = texture(s4,vec2(t22874,t22884));
t22859 = t22885.x;
t22860 = t22885.y;
t22861 = t22885.z;
vec3 t22886 = vec3(t22885.x,t22885.y,t22885.z);
float t22887 = length(t22886);
float t22888 = (t22887*t22887);
float t22889 = (t22888/float(3.0));
bool t22890 = (t22889<=1);
float t22891;
if(t22890){
t22891 = t22889;
} else {
t22891 = 1;
}
bool t22892 = (t22891>=0);
float t22893;
if(t22892){
t22893 = t22891;
} else {
t22893 = 0;
}
t22862 = t22893;
} else {
t22859 = 0;
t22860 = 0;
t22861 = 0;
t22862 = 0;
}
float t22894 = (1-t22843);
float t22895 = (t22840*t22894);
float t22896 = (t22843+t22895);
float t22897 = (1-t22896);
float t22898 = (t22862*t22897);
float t22899 = (t22859*t22898);
float t22900 = (t22847+t22899);
float t22901 = (t115*t22815);
float t22902 = pow(t22830,float(2.5));
float t22903 = (t22901/t22902);
float t22904 = (t22903*t22813);
float t22905 = (t22812+t22904);
float t22906 = (t22813*u1.u4);
float t22907 = (t22905*t22906);
float t22908 = (t22815+t22907);
float t22909 = (t115*t22821);
float t22910 = (t22909/t22902);
float t22911 = (t22910*t22813);
float t22912 = (t22819+t22911);
float t22913 = (t22912*t22906);
float t22914 = (t22821+t22913);
float t22915 = (t115*t22827);
float t22916 = (t22915/t22902);
float t22917 = (t22916*t22813);
float t22918 = (t22825+t22917);
float t22919 = (t22918*t22906);
float t22920 = (t22827+t22919);
vec3 t22921 = vec3(t22908,t22914,t22920);
float t22922 = length(t22921);
float t22923 = (t22922*t22922);
bool t22924 = (t22923<1);
vec3 t22925 = vec3(t22815,t22821,t22827);
float t22926 = length(t22925);
float t22927 = (t22926*t22926);
bool t22928 = (t22927>1);
bool t22929 = (t22924&&t22928);
float t22930;
float t22931;
float t22932;
float t22933;
if(t22929){
t22930 = 0;
t22931 = 0;
t22932 = 0;
t22933 = 1;
} else {
t22930 = 0;
t22931 = 0;
t22932 = 0;
t22933 = 0;
}
float t22934 = (1-t22896);
float t22935 = (t22862*t22934);
float t22936 = (t22896+t22935);
float t22937 = (1-t22936);
float t22938 = (t22933*t22937);
float t22939 = (t22930*t22938);
float t22940 = (t22900+t22939);
bool t22941 = (t22821>0);
bool t22942 = (t22914>0);
bool t22943 = (!t22942);
bool t22944 = (t22941&&t22943);
bool t22945 = (!t22941);
bool t22946 = (t22942&&t22945);
bool t22947 = (t22944||t22946);
bool t22948 = (t22923<196);
bool t22949 = (t22923>float(6.76));
bool t22950 = (t22948&&t22949);
bool t22951 = (t22947&&t22950);
float t22952;
float t22953;
float t22954;
float t22955;
if(t22951){
float t22956 = (t22914/t22912);
float t22957 = (-t22956);
float t22958 = (t22957*t22905);
float t22959 = (t22908+t22958);
float t22960 = atan(t22959,t22920);
float t22961 = (u1.u0/30);
float t22962 = (t22960+t22961);
float t22963 = (2*3.1415927);
float t22964 = (t22962+t22963);
float t22965 = mod(t22964,2);
float t22966 = (t22965*3.1415927);
float t22967 = (t22966/t22963);
float t22968 = (t22957*t22912);
float t22969 = (t22914+t22968);
float t22970 = (t22957*t22918);
float t22971 = (t22920+t22970);
vec3 t22972 = vec3(t22959,t22969,t22971);
float t22973 = length(t22972);
float t22974 = (t22973*t22973);
float t22975 = sqrt(t22974);
float t22976 = (t22975-float(2.6));
float t22977 = (t22976/float(11.4));
vec4 t22978 = texture(s4,vec2(t22967,t22977));
t22952 = t22978.x;
t22953 = t22978.y;
t22954 = t22978.z;
vec3 t22979 = vec3(t22978.x,t22978.y,t22978.z);
float t22980 = length(t22979);
float t22981 = (t22980*t22980);
float t22982 = (t22981/float(3.0));
bool t22983 = (t22982<=1);
float t22984;
if(t22983){
t22984 = t22982;
} else {
t22984 = 1;
}
bool t22985 = (t22984>=0);
float t22986;
if(t22985){
t22986 = t22984;
} else {
t22986 = 0;
}
t22955 = t22986;
} else {
t22952 = 0;
t22953 = 0;
t22954 = 0;
t22955 = 0;
}
float t22987 = (1-t22936);
float t22988 = (t22933*t22987);
float t22989 = (t22936+t22988);
float t22990 = (1-t22989);
float t22991 = (t22955*t22990);
float t22992 = (t22952*t22991);
float t22993 = (t22940+t22992);
float t22994 = (t115*t22908);
float t22995 = pow(t22923,float(2.5));
float t22996 = (t22994/t22995);
float t22997 = (t22996*t22906);
float t22998 = (t22905+t22997);
float t22999 = (t22906*u1.u4);
float t23000 = (t22998*t22999);
float t23001 = (t22908+t23000);
float t23002 = (t115*t22914);
float t23003 = (t23002/t22995);
float t23004 = (t23003*t22906);
float t23005 = (t22912+t23004);
float t23006 = (t23005*t22999);
float t23007 = (t22914+t23006);
float t23008 = (t115*t22920);
float t23009 = (t23008/t22995);
float t23010 = (t23009*t22906);
float t23011 = (t22918+t23010);
float t23012 = (t23011*t22999);
float t23013 = (t22920+t23012);
vec3 t23014 = vec3(t23001,t23007,t23013);
float t23015 = length(t23014);
float t23016 = (t23015*t23015);
bool t23017 = (t23016<1);
vec3 t23018 = vec3(t22908,t22914,t22920);
float t23019 = length(t23018);
float t23020 = (t23019*t23019);
bool t23021 = (t23020>1);
bool t23022 = (t23017&&t23021);
float t23023;
float t23024;
float t23025;
float t23026;
if(t23022){
t23023 = 0;
t23024 = 0;
t23025 = 0;
t23026 = 1;
} else {
t23023 = 0;
t23024 = 0;
t23025 = 0;
t23026 = 0;
}
float t23027 = (1-t22989);
float t23028 = (t22955*t23027);
float t23029 = (t22989+t23028);
float t23030 = (1-t23029);
float t23031 = (t23026*t23030);
float t23032 = (t23023*t23031);
float t23033 = (t22993+t23032);
bool t23034 = (t22914>0);
bool t23035 = (t23007>0);
bool t23036 = (!t23035);
bool t23037 = (t23034&&t23036);
bool t23038 = (!t23034);
bool t23039 = (t23035&&t23038);
bool t23040 = (t23037||t23039);
bool t23041 = (t23016<196);
bool t23042 = (t23016>float(6.76));
bool t23043 = (t23041&&t23042);
bool t23044 = (t23040&&t23043);
float t23045;
float t23046;
float t23047;
float t23048;
if(t23044){
float t23049 = (t23007/t23005);
float t23050 = (-t23049);
float t23051 = (t23050*t22998);
float t23052 = (t23001+t23051);
float t23053 = atan(t23052,t23013);
float t23054 = (u1.u0/30);
float t23055 = (t23053+t23054);
float t23056 = (2*3.1415927);
float t23057 = (t23055+t23056);
float t23058 = mod(t23057,2);
float t23059 = (t23058*3.1415927);
float t23060 = (t23059/t23056);
float t23061 = (t23050*t23005);
float t23062 = (t23007+t23061);
float t23063 = (t23050*t23011);
float t23064 = (t23013+t23063);
vec3 t23065 = vec3(t23052,t23062,t23064);
float t23066 = length(t23065);
float t23067 = (t23066*t23066);
float t23068 = sqrt(t23067);
float t23069 = (t23068-float(2.6));
float t23070 = (t23069/float(11.4));
vec4 t23071 = texture(s4,vec2(t23060,t23070));
t23045 = t23071.x;
t23046 = t23071.y;
t23047 = t23071.z;
vec3 t23072 = vec3(t23071.x,t23071.y,t23071.z);
float t23073 = length(t23072);
float t23074 = (t23073*t23073);
float t23075 = (t23074/float(3.0));
bool t23076 = (t23075<=1);
float t23077;
if(t23076){
t23077 = t23075;
} else {
t23077 = 1;
}
bool t23078 = (t23077>=0);
float t23079;
if(t23078){
t23079 = t23077;
} else {
t23079 = 0;
}
t23048 = t23079;
} else {
t23045 = 0;
t23046 = 0;
t23047 = 0;
t23048 = 0;
}
float t23080 = (1-t23029);
float t23081 = (t23026*t23080);
float t23082 = (t23029+t23081);
float t23083 = (1-t23082);
float t23084 = (t23048*t23083);
float t23085 = (t23045*t23084);
float t23086 = (t23033+t23085);
float t23087 = (t115*t23001);
float t23088 = pow(t23016,float(2.5));
float t23089 = (t23087/t23088);
float t23090 = (t23089*t22999);
float t23091 = (t22998+t23090);
float t23092 = (t22999*u1.u4);
float t23093 = (t23091*t23092);
float t23094 = (t23001+t23093);
float t23095 = (t115*t23007);
float t23096 = (t23095/t23088);
float t23097 = (t23096*t22999);
float t23098 = (t23005+t23097);
float t23099 = (t23098*t23092);
float t23100 = (t23007+t23099);
float t23101 = (t115*t23013);
float t23102 = (t23101/t23088);
float t23103 = (t23102*t22999);
float t23104 = (t23011+t23103);
float t23105 = (t23104*t23092);
float t23106 = (t23013+t23105);
vec3 t23107 = vec3(t23094,t23100,t23106);
float t23108 = length(t23107);
float t23109 = (t23108*t23108);
bool t23110 = (t23109<1);
vec3 t23111 = vec3(t23001,t23007,t23013);
float t23112 = length(t23111);
float t23113 = (t23112*t23112);
bool t23114 = (t23113>1);
bool t23115 = (t23110&&t23114);
float t23116;
float t23117;
float t23118;
float t23119;
if(t23115){
t23116 = 0;
t23117 = 0;
t23118 = 0;
t23119 = 1;
} else {
t23116 = 0;
t23117 = 0;
t23118 = 0;
t23119 = 0;
}
float t23120 = (1-t23082);
float t23121 = (t23048*t23120);
float t23122 = (t23082+t23121);
float t23123 = (1-t23122);
float t23124 = (t23119*t23123);
float t23125 = (t23116*t23124);
float t23126 = (t23086+t23125);
bool t23127 = (t23007>0);
bool t23128 = (t23100>0);
bool t23129 = (!t23128);
bool t23130 = (t23127&&t23129);
bool t23131 = (!t23127);
bool t23132 = (t23128&&t23131);
bool t23133 = (t23130||t23132);
bool t23134 = (t23109<196);
bool t23135 = (t23109>float(6.76));
bool t23136 = (t23134&&t23135);
bool t23137 = (t23133&&t23136);
float t23138;
float t23139;
float t23140;
float t23141;
if(t23137){
float t23142 = (t23100/t23098);
float t23143 = (-t23142);
float t23144 = (t23143*t23091);
float t23145 = (t23094+t23144);
float t23146 = atan(t23145,t23106);
float t23147 = (u1.u0/30);
float t23148 = (t23146+t23147);
float t23149 = (2*3.1415927);
float t23150 = (t23148+t23149);
float t23151 = mod(t23150,2);
float t23152 = (t23151*3.1415927);
float t23153 = (t23152/t23149);
float t23154 = (t23143*t23098);
float t23155 = (t23100+t23154);
float t23156 = (t23143*t23104);
float t23157 = (t23106+t23156);
vec3 t23158 = vec3(t23145,t23155,t23157);
float t23159 = length(t23158);
float t23160 = (t23159*t23159);
float t23161 = sqrt(t23160);
float t23162 = (t23161-float(2.6));
float t23163 = (t23162/float(11.4));
vec4 t23164 = texture(s4,vec2(t23153,t23163));
t23138 = t23164.x;
t23139 = t23164.y;
t23140 = t23164.z;
vec3 t23165 = vec3(t23164.x,t23164.y,t23164.z);
float t23166 = length(t23165);
float t23167 = (t23166*t23166);
float t23168 = (t23167/float(3.0));
bool t23169 = (t23168<=1);
float t23170;
if(t23169){
t23170 = t23168;
} else {
t23170 = 1;
}
bool t23171 = (t23170>=0);
float t23172;
if(t23171){
t23172 = t23170;
} else {
t23172 = 0;
}
t23141 = t23172;
} else {
t23138 = 0;
t23139 = 0;
t23140 = 0;
t23141 = 0;
}
float t23173 = (1-t23122);
float t23174 = (t23119*t23173);
float t23175 = (t23122+t23174);
float t23176 = (1-t23175);
float t23177 = (t23141*t23176);
float t23178 = (t23138*t23177);
float t23179 = (t23126+t23178);
float t23180 = (t115*t23094);
float t23181 = pow(t23109,float(2.5));
float t23182 = (t23180/t23181);
float t23183 = (t23182*t23092);
float t23184 = (t23091+t23183);
float t23185 = (t23092*u1.u4);
float t23186 = (t23184*t23185);
float t23187 = (t23094+t23186);
float t23188 = (t115*t23100);
float t23189 = (t23188/t23181);
float t23190 = (t23189*t23092);
float t23191 = (t23098+t23190);
float t23192 = (t23191*t23185);
float t23193 = (t23100+t23192);
float t23194 = (t115*t23106);
float t23195 = (t23194/t23181);
float t23196 = (t23195*t23092);
float t23197 = (t23104+t23196);
float t23198 = (t23197*t23185);
float t23199 = (t23106+t23198);
vec3 t23200 = vec3(t23187,t23193,t23199);
float t23201 = length(t23200);
float t23202 = (t23201*t23201);
bool t23203 = (t23202<1);
vec3 t23204 = vec3(t23094,t23100,t23106);
float t23205 = length(t23204);
float t23206 = (t23205*t23205);
bool t23207 = (t23206>1);
bool t23208 = (t23203&&t23207);
float t23209;
float t23210;
float t23211;
float t23212;
if(t23208){
t23209 = 0;
t23210 = 0;
t23211 = 0;
t23212 = 1;
} else {
t23209 = 0;
t23210 = 0;
t23211 = 0;
t23212 = 0;
}
float t23213 = (1-t23175);
float t23214 = (t23141*t23213);
float t23215 = (t23175+t23214);
float t23216 = (1-t23215);
float t23217 = (t23212*t23216);
float t23218 = (t23209*t23217);
float t23219 = (t23179+t23218);
bool t23220 = (t23100>0);
bool t23221 = (t23193>0);
bool t23222 = (!t23221);
bool t23223 = (t23220&&t23222);
bool t23224 = (!t23220);
bool t23225 = (t23221&&t23224);
bool t23226 = (t23223||t23225);
bool t23227 = (t23202<196);
bool t23228 = (t23202>float(6.76));
bool t23229 = (t23227&&t23228);
bool t23230 = (t23226&&t23229);
float t23231;
float t23232;
float t23233;
float t23234;
if(t23230){
float t23235 = (t23193/t23191);
float t23236 = (-t23235);
float t23237 = (t23236*t23184);
float t23238 = (t23187+t23237);
float t23239 = atan(t23238,t23199);
float t23240 = (u1.u0/30);
float t23241 = (t23239+t23240);
float t23242 = (2*3.1415927);
float t23243 = (t23241+t23242);
float t23244 = mod(t23243,2);
float t23245 = (t23244*3.1415927);
float t23246 = (t23245/t23242);
float t23247 = (t23236*t23191);
float t23248 = (t23193+t23247);
float t23249 = (t23236*t23197);
float t23250 = (t23199+t23249);
vec3 t23251 = vec3(t23238,t23248,t23250);
float t23252 = length(t23251);
float t23253 = (t23252*t23252);
float t23254 = sqrt(t23253);
float t23255 = (t23254-float(2.6));
float t23256 = (t23255/float(11.4));
vec4 t23257 = texture(s4,vec2(t23246,t23256));
t23231 = t23257.x;
t23232 = t23257.y;
t23233 = t23257.z;
vec3 t23258 = vec3(t23257.x,t23257.y,t23257.z);
float t23259 = length(t23258);
float t23260 = (t23259*t23259);
float t23261 = (t23260/float(3.0));
bool t23262 = (t23261<=1);
float t23263;
if(t23262){
t23263 = t23261;
} else {
t23263 = 1;
}
bool t23264 = (t23263>=0);
float t23265;
if(t23264){
t23265 = t23263;
} else {
t23265 = 0;
}
t23234 = t23265;
} else {
t23231 = 0;
t23232 = 0;
t23233 = 0;
t23234 = 0;
}
float t23266 = (1-t23215);
float t23267 = (t23212*t23266);
float t23268 = (t23215+t23267);
float t23269 = (1-t23268);
float t23270 = (t23234*t23269);
float t23271 = (t23231*t23270);
float t23272 = (t23219+t23271);
float t23273 = (t115*t23187);
float t23274 = pow(t23202,float(2.5));
float t23275 = (t23273/t23274);
float t23276 = (t23275*t23185);
float t23277 = (t23184+t23276);
float t23278 = (t23185*u1.u4);
float t23279 = (t23277*t23278);
float t23280 = (t23187+t23279);
float t23281 = (t115*t23193);
float t23282 = (t23281/t23274);
float t23283 = (t23282*t23185);
float t23284 = (t23191+t23283);
float t23285 = (t23284*t23278);
float t23286 = (t23193+t23285);
float t23287 = (t115*t23199);
float t23288 = (t23287/t23274);
float t23289 = (t23288*t23185);
float t23290 = (t23197+t23289);
float t23291 = (t23290*t23278);
float t23292 = (t23199+t23291);
vec3 t23293 = vec3(t23280,t23286,t23292);
float t23294 = length(t23293);
float t23295 = (t23294*t23294);
bool t23296 = (t23295<1);
vec3 t23297 = vec3(t23187,t23193,t23199);
float t23298 = length(t23297);
float t23299 = (t23298*t23298);
bool t23300 = (t23299>1);
bool t23301 = (t23296&&t23300);
float t23302;
float t23303;
float t23304;
float t23305;
if(t23301){
t23302 = 0;
t23303 = 0;
t23304 = 0;
t23305 = 1;
} else {
t23302 = 0;
t23303 = 0;
t23304 = 0;
t23305 = 0;
}
float t23306 = (1-t23268);
float t23307 = (t23234*t23306);
float t23308 = (t23268+t23307);
float t23309 = (1-t23308);
float t23310 = (t23305*t23309);
float t23311 = (t23302*t23310);
float t23312 = (t23272+t23311);
bool t23313 = (t23193>0);
bool t23314 = (t23286>0);
bool t23315 = (!t23314);
bool t23316 = (t23313&&t23315);
bool t23317 = (!t23313);
bool t23318 = (t23314&&t23317);
bool t23319 = (t23316||t23318);
bool t23320 = (t23295<196);
bool t23321 = (t23295>float(6.76));
bool t23322 = (t23320&&t23321);
bool t23323 = (t23319&&t23322);
float t23324;
float t23325;
float t23326;
float t23327;
if(t23323){
float t23328 = (t23286/t23284);
float t23329 = (-t23328);
float t23330 = (t23329*t23277);
float t23331 = (t23280+t23330);
float t23332 = atan(t23331,t23292);
float t23333 = (u1.u0/30);
float t23334 = (t23332+t23333);
float t23335 = (2*3.1415927);
float t23336 = (t23334+t23335);
float t23337 = mod(t23336,2);
float t23338 = (t23337*3.1415927);
float t23339 = (t23338/t23335);
float t23340 = (t23329*t23284);
float t23341 = (t23286+t23340);
float t23342 = (t23329*t23290);
float t23343 = (t23292+t23342);
vec3 t23344 = vec3(t23331,t23341,t23343);
float t23345 = length(t23344);
float t23346 = (t23345*t23345);
float t23347 = sqrt(t23346);
float t23348 = (t23347-float(2.6));
float t23349 = (t23348/float(11.4));
vec4 t23350 = texture(s4,vec2(t23339,t23349));
t23324 = t23350.x;
t23325 = t23350.y;
t23326 = t23350.z;
vec3 t23351 = vec3(t23350.x,t23350.y,t23350.z);
float t23352 = length(t23351);
float t23353 = (t23352*t23352);
float t23354 = (t23353/float(3.0));
bool t23355 = (t23354<=1);
float t23356;
if(t23355){
t23356 = t23354;
} else {
t23356 = 1;
}
bool t23357 = (t23356>=0);
float t23358;
if(t23357){
t23358 = t23356;
} else {
t23358 = 0;
}
t23327 = t23358;
} else {
t23324 = 0;
t23325 = 0;
t23326 = 0;
t23327 = 0;
}
float t23359 = (1-t23308);
float t23360 = (t23305*t23359);
float t23361 = (t23308+t23360);
float t23362 = (1-t23361);
float t23363 = (t23327*t23362);
float t23364 = (t23324*t23363);
float t23365 = (t23312+t23364);
float t23366 = (t115*t23280);
float t23367 = pow(t23295,float(2.5));
float t23368 = (t23366/t23367);
float t23369 = (t23368*t23278);
float t23370 = (t23277+t23369);
float t23371 = (t115*t23292);
float t23372 = (t23371/t23367);
float t23373 = (t23372*t23278);
float t23374 = (t23290+t23373);
float t23375 = atan(t23370,t23374);
float t23376 = (t23375+float(4.5));
float t23377 = (2*3.1415927);
float t23378 = mod(t23376,t23377);
float t23379 = (t23378/t23377);
float t23380 = (t115*t23286);
float t23381 = (t23380/t23367);
float t23382 = (t23381*t23278);
float t23383 = (t23284+t23382);
vec2 t23384 = vec2(t23370,t23374);
float t23385 = length(t23384);
float t23386 = atan(t23383,t23385);
float t23387 = (3.1415927/2);
float t23388 = (t23386+t23387);
float t23389 = (t23388/3.1415927);
vec4 t23390 = texture(s5,vec2(t23379,t23389));
float t23391 = (1-t23361);
float t23392 = (t23327*t23391);
float t23393 = (t23361+t23392);
float t23394 = (1-t23393);
float t23395 = (1*t23394);
float t23396 = (t23390.x*t23395);
float t23397 = (t23365+t23396);
float t23398 = (t48*t52);
float t23399 = (0+t23398);
float t23400 = (t67*t105);
float t23401 = (t23399+t23400);
float t23402 = (t146*t153);
float t23403 = (t23401+t23402);
float t23404 = (t168*t206);
float t23405 = (t23403+t23404);
float t23406 = (t239*t246);
float t23407 = (t23405+t23406);
float t23408 = (t261*t299);
float t23409 = (t23407+t23408);
float t23410 = (t332*t339);
float t23411 = (t23409+t23410);
float t23412 = (t354*t392);
float t23413 = (t23411+t23412);
float t23414 = (t425*t432);
float t23415 = (t23413+t23414);
float t23416 = (t447*t485);
float t23417 = (t23415+t23416);
float t23418 = (t518*t525);
float t23419 = (t23417+t23418);
float t23420 = (t540*t578);
float t23421 = (t23419+t23420);
float t23422 = (t611*t618);
float t23423 = (t23421+t23422);
float t23424 = (t633*t671);
float t23425 = (t23423+t23424);
float t23426 = (t704*t711);
float t23427 = (t23425+t23426);
float t23428 = (t726*t764);
float t23429 = (t23427+t23428);
float t23430 = (t797*t804);
float t23431 = (t23429+t23430);
float t23432 = (t819*t857);
float t23433 = (t23431+t23432);
float t23434 = (t890*t897);
float t23435 = (t23433+t23434);
float t23436 = (t912*t950);
float t23437 = (t23435+t23436);
float t23438 = (t983*t990);
float t23439 = (t23437+t23438);
float t23440 = (t1005*t1043);
float t23441 = (t23439+t23440);
float t23442 = (t1076*t1083);
float t23443 = (t23441+t23442);
float t23444 = (t1098*t1136);
float t23445 = (t23443+t23444);
float t23446 = (t1169*t1176);
float t23447 = (t23445+t23446);
float t23448 = (t1191*t1229);
float t23449 = (t23447+t23448);
float t23450 = (t1262*t1269);
float t23451 = (t23449+t23450);
float t23452 = (t1284*t1322);
float t23453 = (t23451+t23452);
float t23454 = (t1355*t1362);
float t23455 = (t23453+t23454);
float t23456 = (t1377*t1415);
float t23457 = (t23455+t23456);
float t23458 = (t1448*t1455);
float t23459 = (t23457+t23458);
float t23460 = (t1470*t1508);
float t23461 = (t23459+t23460);
float t23462 = (t1541*t1548);
float t23463 = (t23461+t23462);
float t23464 = (t1563*t1601);
float t23465 = (t23463+t23464);
float t23466 = (t1634*t1641);
float t23467 = (t23465+t23466);
float t23468 = (t1656*t1694);
float t23469 = (t23467+t23468);
float t23470 = (t1727*t1734);
float t23471 = (t23469+t23470);
float t23472 = (t1749*t1787);
float t23473 = (t23471+t23472);
float t23474 = (t1820*t1827);
float t23475 = (t23473+t23474);
float t23476 = (t1842*t1880);
float t23477 = (t23475+t23476);
float t23478 = (t1913*t1920);
float t23479 = (t23477+t23478);
float t23480 = (t1935*t1973);
float t23481 = (t23479+t23480);
float t23482 = (t2006*t2013);
float t23483 = (t23481+t23482);
float t23484 = (t2028*t2066);
float t23485 = (t23483+t23484);
float t23486 = (t2099*t2106);
float t23487 = (t23485+t23486);
float t23488 = (t2121*t2159);
float t23489 = (t23487+t23488);
float t23490 = (t2192*t2199);
float t23491 = (t23489+t23490);
float t23492 = (t2214*t2252);
float t23493 = (t23491+t23492);
float t23494 = (t2285*t2292);
float t23495 = (t23493+t23494);
float t23496 = (t2307*t2345);
float t23497 = (t23495+t23496);
float t23498 = (t2378*t2385);
float t23499 = (t23497+t23498);
float t23500 = (t2400*t2438);
float t23501 = (t23499+t23500);
float t23502 = (t2471*t2478);
float t23503 = (t23501+t23502);
float t23504 = (t2493*t2531);
float t23505 = (t23503+t23504);
float t23506 = (t2564*t2571);
float t23507 = (t23505+t23506);
float t23508 = (t2586*t2624);
float t23509 = (t23507+t23508);
float t23510 = (t2657*t2664);
float t23511 = (t23509+t23510);
float t23512 = (t2679*t2717);
float t23513 = (t23511+t23512);
float t23514 = (t2750*t2757);
float t23515 = (t23513+t23514);
float t23516 = (t2772*t2810);
float t23517 = (t23515+t23516);
float t23518 = (t2843*t2850);
float t23519 = (t23517+t23518);
float t23520 = (t2865*t2903);
float t23521 = (t23519+t23520);
float t23522 = (t2936*t2943);
float t23523 = (t23521+t23522);
float t23524 = (t2958*t2996);
float t23525 = (t23523+t23524);
float t23526 = (t3029*t3036);
float t23527 = (t23525+t23526);
float t23528 = (t3051*t3089);
float t23529 = (t23527+t23528);
float t23530 = (t3122*t3129);
float t23531 = (t23529+t23530);
float t23532 = (t3144*t3182);
float t23533 = (t23531+t23532);
float t23534 = (t3215*t3222);
float t23535 = (t23533+t23534);
float t23536 = (t3237*t3275);
float t23537 = (t23535+t23536);
float t23538 = (t3308*t3315);
float t23539 = (t23537+t23538);
float t23540 = (t3330*t3368);
float t23541 = (t23539+t23540);
float t23542 = (t3401*t3408);
float t23543 = (t23541+t23542);
float t23544 = (t3423*t3461);
float t23545 = (t23543+t23544);
float t23546 = (t3494*t3501);
float t23547 = (t23545+t23546);
float t23548 = (t3516*t3554);
float t23549 = (t23547+t23548);
float t23550 = (t3587*t3594);
float t23551 = (t23549+t23550);
float t23552 = (t3609*t3647);
float t23553 = (t23551+t23552);
float t23554 = (t3680*t3687);
float t23555 = (t23553+t23554);
float t23556 = (t3702*t3740);
float t23557 = (t23555+t23556);
float t23558 = (t3773*t3780);
float t23559 = (t23557+t23558);
float t23560 = (t3795*t3833);
float t23561 = (t23559+t23560);
float t23562 = (t3866*t3873);
float t23563 = (t23561+t23562);
float t23564 = (t3888*t3926);
float t23565 = (t23563+t23564);
float t23566 = (t3959*t3966);
float t23567 = (t23565+t23566);
float t23568 = (t3981*t4019);
float t23569 = (t23567+t23568);
float t23570 = (t4052*t4059);
float t23571 = (t23569+t23570);
float t23572 = (t4074*t4112);
float t23573 = (t23571+t23572);
float t23574 = (t4145*t4152);
float t23575 = (t23573+t23574);
float t23576 = (t4167*t4205);
float t23577 = (t23575+t23576);
float t23578 = (t4238*t4245);
float t23579 = (t23577+t23578);
float t23580 = (t4260*t4298);
float t23581 = (t23579+t23580);
float t23582 = (t4331*t4338);
float t23583 = (t23581+t23582);
float t23584 = (t4353*t4391);
float t23585 = (t23583+t23584);
float t23586 = (t4424*t4431);
float t23587 = (t23585+t23586);
float t23588 = (t4446*t4484);
float t23589 = (t23587+t23588);
float t23590 = (t4517*t4524);
float t23591 = (t23589+t23590);
float t23592 = (t4539*t4577);
float t23593 = (t23591+t23592);
float t23594 = (t4610*t4617);
float t23595 = (t23593+t23594);
float t23596 = (t4632*t4670);
float t23597 = (t23595+t23596);
float t23598 = (t4703*t4710);
float t23599 = (t23597+t23598);
float t23600 = (t4725*t4763);
float t23601 = (t23599+t23600);
float t23602 = (t4796*t4803);
float t23603 = (t23601+t23602);
float t23604 = (t4818*t4856);
float t23605 = (t23603+t23604);
float t23606 = (t4889*t4896);
float t23607 = (t23605+t23606);
float t23608 = (t4911*t4949);
float t23609 = (t23607+t23608);
float t23610 = (t4982*t4989);
float t23611 = (t23609+t23610);
float t23612 = (t5004*t5042);
float t23613 = (t23611+t23612);
float t23614 = (t5075*t5082);
float t23615 = (t23613+t23614);
float t23616 = (t5097*t5135);
float t23617 = (t23615+t23616);
float t23618 = (t5168*t5175);
float t23619 = (t23617+t23618);
float t23620 = (t5190*t5228);
float t23621 = (t23619+t23620);
float t23622 = (t5261*t5268);
float t23623 = (t23621+t23622);
float t23624 = (t5283*t5321);
float t23625 = (t23623+t23624);
float t23626 = (t5354*t5361);
float t23627 = (t23625+t23626);
float t23628 = (t5376*t5414);
float t23629 = (t23627+t23628);
float t23630 = (t5447*t5454);
float t23631 = (t23629+t23630);
float t23632 = (t5469*t5507);
float t23633 = (t23631+t23632);
float t23634 = (t5540*t5547);
float t23635 = (t23633+t23634);
float t23636 = (t5562*t5600);
float t23637 = (t23635+t23636);
float t23638 = (t5633*t5640);
float t23639 = (t23637+t23638);
float t23640 = (t5655*t5693);
float t23641 = (t23639+t23640);
float t23642 = (t5726*t5733);
float t23643 = (t23641+t23642);
float t23644 = (t5748*t5786);
float t23645 = (t23643+t23644);
float t23646 = (t5819*t5826);
float t23647 = (t23645+t23646);
float t23648 = (t5841*t5879);
float t23649 = (t23647+t23648);
float t23650 = (t5912*t5919);
float t23651 = (t23649+t23650);
float t23652 = (t5934*t5972);
float t23653 = (t23651+t23652);
float t23654 = (t6005*t6012);
float t23655 = (t23653+t23654);
float t23656 = (t6027*t6065);
float t23657 = (t23655+t23656);
float t23658 = (t6098*t6105);
float t23659 = (t23657+t23658);
float t23660 = (t6120*t6158);
float t23661 = (t23659+t23660);
float t23662 = (t6191*t6198);
float t23663 = (t23661+t23662);
float t23664 = (t6213*t6251);
float t23665 = (t23663+t23664);
float t23666 = (t6284*t6291);
float t23667 = (t23665+t23666);
float t23668 = (t6306*t6344);
float t23669 = (t23667+t23668);
float t23670 = (t6377*t6384);
float t23671 = (t23669+t23670);
float t23672 = (t6399*t6437);
float t23673 = (t23671+t23672);
float t23674 = (t6470*t6477);
float t23675 = (t23673+t23674);
float t23676 = (t6492*t6530);
float t23677 = (t23675+t23676);
float t23678 = (t6563*t6570);
float t23679 = (t23677+t23678);
float t23680 = (t6585*t6623);
float t23681 = (t23679+t23680);
float t23682 = (t6656*t6663);
float t23683 = (t23681+t23682);
float t23684 = (t6678*t6716);
float t23685 = (t23683+t23684);
float t23686 = (t6749*t6756);
float t23687 = (t23685+t23686);
float t23688 = (t6771*t6809);
float t23689 = (t23687+t23688);
float t23690 = (t6842*t6849);
float t23691 = (t23689+t23690);
float t23692 = (t6864*t6902);
float t23693 = (t23691+t23692);
float t23694 = (t6935*t6942);
float t23695 = (t23693+t23694);
float t23696 = (t6957*t6995);
float t23697 = (t23695+t23696);
float t23698 = (t7028*t7035);
float t23699 = (t23697+t23698);
float t23700 = (t7050*t7088);
float t23701 = (t23699+t23700);
float t23702 = (t7121*t7128);
float t23703 = (t23701+t23702);
float t23704 = (t7143*t7181);
float t23705 = (t23703+t23704);
float t23706 = (t7214*t7221);
float t23707 = (t23705+t23706);
float t23708 = (t7236*t7274);
float t23709 = (t23707+t23708);
float t23710 = (t7307*t7314);
float t23711 = (t23709+t23710);
float t23712 = (t7329*t7367);
float t23713 = (t23711+t23712);
float t23714 = (t7400*t7407);
float t23715 = (t23713+t23714);
float t23716 = (t7422*t7460);
float t23717 = (t23715+t23716);
float t23718 = (t7493*t7500);
float t23719 = (t23717+t23718);
float t23720 = (t7515*t7553);
float t23721 = (t23719+t23720);
float t23722 = (t7586*t7593);
float t23723 = (t23721+t23722);
float t23724 = (t7608*t7646);
float t23725 = (t23723+t23724);
float t23726 = (t7679*t7686);
float t23727 = (t23725+t23726);
float t23728 = (t7701*t7739);
float t23729 = (t23727+t23728);
float t23730 = (t7772*t7779);
float t23731 = (t23729+t23730);
float t23732 = (t7794*t7832);
float t23733 = (t23731+t23732);
float t23734 = (t7865*t7872);
float t23735 = (t23733+t23734);
float t23736 = (t7887*t7925);
float t23737 = (t23735+t23736);
float t23738 = (t7958*t7965);
float t23739 = (t23737+t23738);
float t23740 = (t7980*t8018);
float t23741 = (t23739+t23740);
float t23742 = (t8051*t8058);
float t23743 = (t23741+t23742);
float t23744 = (t8073*t8111);
float t23745 = (t23743+t23744);
float t23746 = (t8144*t8151);
float t23747 = (t23745+t23746);
float t23748 = (t8166*t8204);
float t23749 = (t23747+t23748);
float t23750 = (t8237*t8244);
float t23751 = (t23749+t23750);
float t23752 = (t8259*t8297);
float t23753 = (t23751+t23752);
float t23754 = (t8330*t8337);
float t23755 = (t23753+t23754);
float t23756 = (t8352*t8390);
float t23757 = (t23755+t23756);
float t23758 = (t8423*t8430);
float t23759 = (t23757+t23758);
float t23760 = (t8445*t8483);
float t23761 = (t23759+t23760);
float t23762 = (t8516*t8523);
float t23763 = (t23761+t23762);
float t23764 = (t8538*t8576);
float t23765 = (t23763+t23764);
float t23766 = (t8609*t8616);
float t23767 = (t23765+t23766);
float t23768 = (t8631*t8669);
float t23769 = (t23767+t23768);
float t23770 = (t8702*t8709);
float t23771 = (t23769+t23770);
float t23772 = (t8724*t8762);
float t23773 = (t23771+t23772);
float t23774 = (t8795*t8802);
float t23775 = (t23773+t23774);
float t23776 = (t8817*t8855);
float t23777 = (t23775+t23776);
float t23778 = (t8888*t8895);
float t23779 = (t23777+t23778);
float t23780 = (t8910*t8948);
float t23781 = (t23779+t23780);
float t23782 = (t8981*t8988);
float t23783 = (t23781+t23782);
float t23784 = (t9003*t9041);
float t23785 = (t23783+t23784);
float t23786 = (t9074*t9081);
float t23787 = (t23785+t23786);
float t23788 = (t9096*t9134);
float t23789 = (t23787+t23788);
float t23790 = (t9167*t9174);
float t23791 = (t23789+t23790);
float t23792 = (t9189*t9227);
float t23793 = (t23791+t23792);
float t23794 = (t9260*t9267);
float t23795 = (t23793+t23794);
float t23796 = (t9282*t9320);
float t23797 = (t23795+t23796);
float t23798 = (t9353*t9360);
float t23799 = (t23797+t23798);
float t23800 = (t9375*t9413);
float t23801 = (t23799+t23800);
float t23802 = (t9446*t9453);
float t23803 = (t23801+t23802);
float t23804 = (t9468*t9506);
float t23805 = (t23803+t23804);
float t23806 = (t9539*t9546);
float t23807 = (t23805+t23806);
float t23808 = (t9561*t9599);
float t23809 = (t23807+t23808);
float t23810 = (t9632*t9639);
float t23811 = (t23809+t23810);
float t23812 = (t9654*t9692);
float t23813 = (t23811+t23812);
float t23814 = (t9725*t9732);
float t23815 = (t23813+t23814);
float t23816 = (t9747*t9785);
float t23817 = (t23815+t23816);
float t23818 = (t9818*t9825);
float t23819 = (t23817+t23818);
float t23820 = (t9840*t9878);
float t23821 = (t23819+t23820);
float t23822 = (t9911*t9918);
float t23823 = (t23821+t23822);
float t23824 = (t9933*t9971);
float t23825 = (t23823+t23824);
float t23826 = (t10004*t10011);
float t23827 = (t23825+t23826);
float t23828 = (t10026*t10064);
float t23829 = (t23827+t23828);
float t23830 = (t10097*t10104);
float t23831 = (t23829+t23830);
float t23832 = (t10119*t10157);
float t23833 = (t23831+t23832);
float t23834 = (t10190*t10197);
float t23835 = (t23833+t23834);
float t23836 = (t10212*t10250);
float t23837 = (t23835+t23836);
float t23838 = (t10283*t10290);
float t23839 = (t23837+t23838);
float t23840 = (t10305*t10343);
float t23841 = (t23839+t23840);
float t23842 = (t10376*t10383);
float t23843 = (t23841+t23842);
float t23844 = (t10398*t10436);
float t23845 = (t23843+t23844);
float t23846 = (t10469*t10476);
float t23847 = (t23845+t23846);
float t23848 = (t10491*t10529);
float t23849 = (t23847+t23848);
float t23850 = (t10562*t10569);
float t23851 = (t23849+t23850);
float t23852 = (t10584*t10622);
float t23853 = (t23851+t23852);
float t23854 = (t10655*t10662);
float t23855 = (t23853+t23854);
float t23856 = (t10677*t10715);
float t23857 = (t23855+t23856);
float t23858 = (t10748*t10755);
float t23859 = (t23857+t23858);
float t23860 = (t10770*t10808);
float t23861 = (t23859+t23860);
float t23862 = (t10841*t10848);
float t23863 = (t23861+t23862);
float t23864 = (t10863*t10901);
float t23865 = (t23863+t23864);
float t23866 = (t10934*t10941);
float t23867 = (t23865+t23866);
float t23868 = (t10956*t10994);
float t23869 = (t23867+t23868);
float t23870 = (t11027*t11034);
float t23871 = (t23869+t23870);
float t23872 = (t11049*t11087);
float t23873 = (t23871+t23872);
float t23874 = (t11120*t11127);
float t23875 = (t23873+t23874);
float t23876 = (t11142*t11180);
float t23877 = (t23875+t23876);
float t23878 = (t11213*t11220);
float t23879 = (t23877+t23878);
float t23880 = (t11235*t11273);
float t23881 = (t23879+t23880);
float t23882 = (t11306*t11313);
float t23883 = (t23881+t23882);
float t23884 = (t11328*t11366);
float t23885 = (t23883+t23884);
float t23886 = (t11399*t11406);
float t23887 = (t23885+t23886);
float t23888 = (t11421*t11459);
float t23889 = (t23887+t23888);
float t23890 = (t11492*t11499);
float t23891 = (t23889+t23890);
float t23892 = (t11514*t11552);
float t23893 = (t23891+t23892);
float t23894 = (t11585*t11592);
float t23895 = (t23893+t23894);
float t23896 = (t11607*t11645);
float t23897 = (t23895+t23896);
float t23898 = (t11678*t11685);
float t23899 = (t23897+t23898);
float t23900 = (t11700*t11738);
float t23901 = (t23899+t23900);
float t23902 = (t11771*t11778);
float t23903 = (t23901+t23902);
float t23904 = (t11793*t11831);
float t23905 = (t23903+t23904);
float t23906 = (t11864*t11871);
float t23907 = (t23905+t23906);
float t23908 = (t11886*t11924);
float t23909 = (t23907+t23908);
float t23910 = (t11957*t11964);
float t23911 = (t23909+t23910);
float t23912 = (t11979*t12017);
float t23913 = (t23911+t23912);
float t23914 = (t12050*t12057);
float t23915 = (t23913+t23914);
float t23916 = (t12072*t12110);
float t23917 = (t23915+t23916);
float t23918 = (t12143*t12150);
float t23919 = (t23917+t23918);
float t23920 = (t12165*t12203);
float t23921 = (t23919+t23920);
float t23922 = (t12236*t12243);
float t23923 = (t23921+t23922);
float t23924 = (t12258*t12296);
float t23925 = (t23923+t23924);
float t23926 = (t12329*t12336);
float t23927 = (t23925+t23926);
float t23928 = (t12351*t12389);
float t23929 = (t23927+t23928);
float t23930 = (t12422*t12429);
float t23931 = (t23929+t23930);
float t23932 = (t12444*t12482);
float t23933 = (t23931+t23932);
float t23934 = (t12515*t12522);
float t23935 = (t23933+t23934);
float t23936 = (t12537*t12575);
float t23937 = (t23935+t23936);
float t23938 = (t12608*t12615);
float t23939 = (t23937+t23938);
float t23940 = (t12630*t12668);
float t23941 = (t23939+t23940);
float t23942 = (t12701*t12708);
float t23943 = (t23941+t23942);
float t23944 = (t12723*t12761);
float t23945 = (t23943+t23944);
float t23946 = (t12794*t12801);
float t23947 = (t23945+t23946);
float t23948 = (t12816*t12854);
float t23949 = (t23947+t23948);
float t23950 = (t12887*t12894);
float t23951 = (t23949+t23950);
float t23952 = (t12909*t12947);
float t23953 = (t23951+t23952);
float t23954 = (t12980*t12987);
float t23955 = (t23953+t23954);
float t23956 = (t13002*t13040);
float t23957 = (t23955+t23956);
float t23958 = (t13073*t13080);
float t23959 = (t23957+t23958);
float t23960 = (t13095*t13133);
float t23961 = (t23959+t23960);
float t23962 = (t13166*t13173);
float t23963 = (t23961+t23962);
float t23964 = (t13188*t13226);
float t23965 = (t23963+t23964);
float t23966 = (t13259*t13266);
float t23967 = (t23965+t23966);
float t23968 = (t13281*t13319);
float t23969 = (t23967+t23968);
float t23970 = (t13352*t13359);
float t23971 = (t23969+t23970);
float t23972 = (t13374*t13412);
float t23973 = (t23971+t23972);
float t23974 = (t13445*t13452);
float t23975 = (t23973+t23974);
float t23976 = (t13467*t13505);
float t23977 = (t23975+t23976);
float t23978 = (t13538*t13545);
float t23979 = (t23977+t23978);
float t23980 = (t13560*t13598);
float t23981 = (t23979+t23980);
float t23982 = (t13631*t13638);
float t23983 = (t23981+t23982);
float t23984 = (t13653*t13691);
float t23985 = (t23983+t23984);
float t23986 = (t13724*t13731);
float t23987 = (t23985+t23986);
float t23988 = (t13746*t13784);
float t23989 = (t23987+t23988);
float t23990 = (t13817*t13824);
float t23991 = (t23989+t23990);
float t23992 = (t13839*t13877);
float t23993 = (t23991+t23992);
float t23994 = (t13910*t13917);
float t23995 = (t23993+t23994);
float t23996 = (t13932*t13970);
float t23997 = (t23995+t23996);
float t23998 = (t14003*t14010);
float t23999 = (t23997+t23998);
float t24000 = (t14025*t14063);
float t24001 = (t23999+t24000);
float t24002 = (t14096*t14103);
float t24003 = (t24001+t24002);
float t24004 = (t14118*t14156);
float t24005 = (t24003+t24004);
float t24006 = (t14189*t14196);
float t24007 = (t24005+t24006);
float t24008 = (t14211*t14249);
float t24009 = (t24007+t24008);
float t24010 = (t14282*t14289);
float t24011 = (t24009+t24010);
float t24012 = (t14304*t14342);
float t24013 = (t24011+t24012);
float t24014 = (t14375*t14382);
float t24015 = (t24013+t24014);
float t24016 = (t14397*t14435);
float t24017 = (t24015+t24016);
float t24018 = (t14468*t14475);
float t24019 = (t24017+t24018);
float t24020 = (t14490*t14528);
float t24021 = (t24019+t24020);
float t24022 = (t14561*t14568);
float t24023 = (t24021+t24022);
float t24024 = (t14583*t14621);
float t24025 = (t24023+t24024);
float t24026 = (t14654*t14661);
float t24027 = (t24025+t24026);
float t24028 = (t14676*t14714);
float t24029 = (t24027+t24028);
float t24030 = (t14747*t14754);
float t24031 = (t24029+t24030);
float t24032 = (t14769*t14807);
float t24033 = (t24031+t24032);
float t24034 = (t14840*t14847);
float t24035 = (t24033+t24034);
float t24036 = (t14862*t14900);
float t24037 = (t24035+t24036);
float t24038 = (t14933*t14940);
float t24039 = (t24037+t24038);
float t24040 = (t14955*t14993);
float t24041 = (t24039+t24040);
float t24042 = (t15026*t15033);
float t24043 = (t24041+t24042);
float t24044 = (t15048*t15086);
float t24045 = (t24043+t24044);
float t24046 = (t15119*t15126);
float t24047 = (t24045+t24046);
float t24048 = (t15141*t15179);
float t24049 = (t24047+t24048);
float t24050 = (t15212*t15219);
float t24051 = (t24049+t24050);
float t24052 = (t15234*t15272);
float t24053 = (t24051+t24052);
float t24054 = (t15305*t15312);
float t24055 = (t24053+t24054);
float t24056 = (t15327*t15365);
float t24057 = (t24055+t24056);
float t24058 = (t15398*t15405);
float t24059 = (t24057+t24058);
float t24060 = (t15420*t15458);
float t24061 = (t24059+t24060);
float t24062 = (t15491*t15498);
float t24063 = (t24061+t24062);
float t24064 = (t15513*t15551);
float t24065 = (t24063+t24064);
float t24066 = (t15584*t15591);
float t24067 = (t24065+t24066);
float t24068 = (t15606*t15644);
float t24069 = (t24067+t24068);
float t24070 = (t15677*t15684);
float t24071 = (t24069+t24070);
float t24072 = (t15699*t15737);
float t24073 = (t24071+t24072);
float t24074 = (t15770*t15777);
float t24075 = (t24073+t24074);
float t24076 = (t15792*t15830);
float t24077 = (t24075+t24076);
float t24078 = (t15863*t15870);
float t24079 = (t24077+t24078);
float t24080 = (t15885*t15923);
float t24081 = (t24079+t24080);
float t24082 = (t15956*t15963);
float t24083 = (t24081+t24082);
float t24084 = (t15978*t16016);
float t24085 = (t24083+t24084);
float t24086 = (t16049*t16056);
float t24087 = (t24085+t24086);
float t24088 = (t16071*t16109);
float t24089 = (t24087+t24088);
float t24090 = (t16142*t16149);
float t24091 = (t24089+t24090);
float t24092 = (t16164*t16202);
float t24093 = (t24091+t24092);
float t24094 = (t16235*t16242);
float t24095 = (t24093+t24094);
float t24096 = (t16257*t16295);
float t24097 = (t24095+t24096);
float t24098 = (t16328*t16335);
float t24099 = (t24097+t24098);
float t24100 = (t16350*t16388);
float t24101 = (t24099+t24100);
float t24102 = (t16421*t16428);
float t24103 = (t24101+t24102);
float t24104 = (t16443*t16481);
float t24105 = (t24103+t24104);
float t24106 = (t16514*t16521);
float t24107 = (t24105+t24106);
float t24108 = (t16536*t16574);
float t24109 = (t24107+t24108);
float t24110 = (t16607*t16614);
float t24111 = (t24109+t24110);
float t24112 = (t16629*t16667);
float t24113 = (t24111+t24112);
float t24114 = (t16700*t16707);
float t24115 = (t24113+t24114);
float t24116 = (t16722*t16760);
float t24117 = (t24115+t24116);
float t24118 = (t16793*t16800);
float t24119 = (t24117+t24118);
float t24120 = (t16815*t16853);
float t24121 = (t24119+t24120);
float t24122 = (t16886*t16893);
float t24123 = (t24121+t24122);
float t24124 = (t16908*t16946);
float t24125 = (t24123+t24124);
float t24126 = (t16979*t16986);
float t24127 = (t24125+t24126);
float t24128 = (t17001*t17039);
float t24129 = (t24127+t24128);
float t24130 = (t17072*t17079);
float t24131 = (t24129+t24130);
float t24132 = (t17094*t17132);
float t24133 = (t24131+t24132);
float t24134 = (t17165*t17172);
float t24135 = (t24133+t24134);
float t24136 = (t17187*t17225);
float t24137 = (t24135+t24136);
float t24138 = (t17258*t17265);
float t24139 = (t24137+t24138);
float t24140 = (t17280*t17318);
float t24141 = (t24139+t24140);
float t24142 = (t17351*t17358);
float t24143 = (t24141+t24142);
float t24144 = (t17373*t17411);
float t24145 = (t24143+t24144);
float t24146 = (t17444*t17451);
float t24147 = (t24145+t24146);
float t24148 = (t17466*t17504);
float t24149 = (t24147+t24148);
float t24150 = (t17537*t17544);
float t24151 = (t24149+t24150);
float t24152 = (t17559*t17597);
float t24153 = (t24151+t24152);
float t24154 = (t17630*t17637);
float t24155 = (t24153+t24154);
float t24156 = (t17652*t17690);
float t24157 = (t24155+t24156);
float t24158 = (t17723*t17730);
float t24159 = (t24157+t24158);
float t24160 = (t17745*t17783);
float t24161 = (t24159+t24160);
float t24162 = (t17816*t17823);
float t24163 = (t24161+t24162);
float t24164 = (t17838*t17876);
float t24165 = (t24163+t24164);
float t24166 = (t17909*t17916);
float t24167 = (t24165+t24166);
float t24168 = (t17931*t17969);
float t24169 = (t24167+t24168);
float t24170 = (t18002*t18009);
float t24171 = (t24169+t24170);
float t24172 = (t18024*t18062);
float t24173 = (t24171+t24172);
float t24174 = (t18095*t18102);
float t24175 = (t24173+t24174);
float t24176 = (t18117*t18155);
float t24177 = (t24175+t24176);
float t24178 = (t18188*t18195);
float t24179 = (t24177+t24178);
float t24180 = (t18210*t18248);
float t24181 = (t24179+t24180);
float t24182 = (t18281*t18288);
float t24183 = (t24181+t24182);
float t24184 = (t18303*t18341);
float t24185 = (t24183+t24184);
float t24186 = (t18374*t18381);
float t24187 = (t24185+t24186);
float t24188 = (t18396*t18434);
float t24189 = (t24187+t24188);
float t24190 = (t18467*t18474);
float t24191 = (t24189+t24190);
float t24192 = (t18489*t18527);
float t24193 = (t24191+t24192);
float t24194 = (t18560*t18567);
float t24195 = (t24193+t24194);
float t24196 = (t18582*t18620);
float t24197 = (t24195+t24196);
float t24198 = (t18653*t18660);
float t24199 = (t24197+t24198);
float t24200 = (t18675*t18713);
float t24201 = (t24199+t24200);
float t24202 = (t18746*t18753);
float t24203 = (t24201+t24202);
float t24204 = (t18768*t18806);
float t24205 = (t24203+t24204);
float t24206 = (t18839*t18846);
float t24207 = (t24205+t24206);
float t24208 = (t18861*t18899);
float t24209 = (t24207+t24208);
float t24210 = (t18932*t18939);
float t24211 = (t24209+t24210);
float t24212 = (t18954*t18992);
float t24213 = (t24211+t24212);
float t24214 = (t19025*t19032);
float t24215 = (t24213+t24214);
float t24216 = (t19047*t19085);
float t24217 = (t24215+t24216);
float t24218 = (t19118*t19125);
float t24219 = (t24217+t24218);
float t24220 = (t19140*t19178);
float t24221 = (t24219+t24220);
float t24222 = (t19211*t19218);
float t24223 = (t24221+t24222);
float t24224 = (t19233*t19271);
float t24225 = (t24223+t24224);
float t24226 = (t19304*t19311);
float t24227 = (t24225+t24226);
float t24228 = (t19326*t19364);
float t24229 = (t24227+t24228);
float t24230 = (t19397*t19404);
float t24231 = (t24229+t24230);
float t24232 = (t19419*t19457);
float t24233 = (t24231+t24232);
float t24234 = (t19490*t19497);
float t24235 = (t24233+t24234);
float t24236 = (t19512*t19550);
float t24237 = (t24235+t24236);
float t24238 = (t19583*t19590);
float t24239 = (t24237+t24238);
float t24240 = (t19605*t19643);
float t24241 = (t24239+t24240);
float t24242 = (t19676*t19683);
float t24243 = (t24241+t24242);
float t24244 = (t19698*t19736);
float t24245 = (t24243+t24244);
float t24246 = (t19769*t19776);
float t24247 = (t24245+t24246);
float t24248 = (t19791*t19829);
float t24249 = (t24247+t24248);
float t24250 = (t19862*t19869);
float t24251 = (t24249+t24250);
float t24252 = (t19884*t19922);
float t24253 = (t24251+t24252);
float t24254 = (t19955*t19962);
float t24255 = (t24253+t24254);
float t24256 = (t19977*t20015);
float t24257 = (t24255+t24256);
float t24258 = (t20048*t20055);
float t24259 = (t24257+t24258);
float t24260 = (t20070*t20108);
float t24261 = (t24259+t24260);
float t24262 = (t20141*t20148);
float t24263 = (t24261+t24262);
float t24264 = (t20163*t20201);
float t24265 = (t24263+t24264);
float t24266 = (t20234*t20241);
float t24267 = (t24265+t24266);
float t24268 = (t20256*t20294);
float t24269 = (t24267+t24268);
float t24270 = (t20327*t20334);
float t24271 = (t24269+t24270);
float t24272 = (t20349*t20387);
float t24273 = (t24271+t24272);
float t24274 = (t20420*t20427);
float t24275 = (t24273+t24274);
float t24276 = (t20442*t20480);
float t24277 = (t24275+t24276);
float t24278 = (t20513*t20520);
float t24279 = (t24277+t24278);
float t24280 = (t20535*t20573);
float t24281 = (t24279+t24280);
float t24282 = (t20606*t20613);
float t24283 = (t24281+t24282);
float t24284 = (t20628*t20666);
float t24285 = (t24283+t24284);
float t24286 = (t20699*t20706);
float t24287 = (t24285+t24286);
float t24288 = (t20721*t20759);
float t24289 = (t24287+t24288);
float t24290 = (t20792*t20799);
float t24291 = (t24289+t24290);
float t24292 = (t20814*t20852);
float t24293 = (t24291+t24292);
float t24294 = (t20885*t20892);
float t24295 = (t24293+t24294);
float t24296 = (t20907*t20945);
float t24297 = (t24295+t24296);
float t24298 = (t20978*t20985);
float t24299 = (t24297+t24298);
float t24300 = (t21000*t21038);
float t24301 = (t24299+t24300);
float t24302 = (t21071*t21078);
float t24303 = (t24301+t24302);
float t24304 = (t21093*t21131);
float t24305 = (t24303+t24304);
float t24306 = (t21164*t21171);
float t24307 = (t24305+t24306);
float t24308 = (t21186*t21224);
float t24309 = (t24307+t24308);
float t24310 = (t21257*t21264);
float t24311 = (t24309+t24310);
float t24312 = (t21279*t21317);
float t24313 = (t24311+t24312);
float t24314 = (t21350*t21357);
float t24315 = (t24313+t24314);
float t24316 = (t21372*t21410);
float t24317 = (t24315+t24316);
float t24318 = (t21443*t21450);
float t24319 = (t24317+t24318);
float t24320 = (t21465*t21503);
float t24321 = (t24319+t24320);
float t24322 = (t21536*t21543);
float t24323 = (t24321+t24322);
float t24324 = (t21558*t21596);
float t24325 = (t24323+t24324);
float t24326 = (t21629*t21636);
float t24327 = (t24325+t24326);
float t24328 = (t21651*t21689);
float t24329 = (t24327+t24328);
float t24330 = (t21722*t21729);
float t24331 = (t24329+t24330);
float t24332 = (t21744*t21782);
float t24333 = (t24331+t24332);
float t24334 = (t21815*t21822);
float t24335 = (t24333+t24334);
float t24336 = (t21837*t21875);
float t24337 = (t24335+t24336);
float t24338 = (t21908*t21915);
float t24339 = (t24337+t24338);
float t24340 = (t21930*t21968);
float t24341 = (t24339+t24340);
float t24342 = (t22001*t22008);
float t24343 = (t24341+t24342);
float t24344 = (t22023*t22061);
float t24345 = (t24343+t24344);
float t24346 = (t22094*t22101);
float t24347 = (t24345+t24346);
float t24348 = (t22116*t22154);
float t24349 = (t24347+t24348);
float t24350 = (t22187*t22194);
float t24351 = (t24349+t24350);
float t24352 = (t22209*t22247);
float t24353 = (t24351+t24352);
float t24354 = (t22280*t22287);
float t24355 = (t24353+t24354);
float t24356 = (t22302*t22340);
float t24357 = (t24355+t24356);
float t24358 = (t22373*t22380);
float t24359 = (t24357+t24358);
float t24360 = (t22395*t22433);
float t24361 = (t24359+t24360);
float t24362 = (t22466*t22473);
float t24363 = (t24361+t24362);
float t24364 = (t22488*t22526);
float t24365 = (t24363+t24364);
float t24366 = (t22559*t22566);
float t24367 = (t24365+t24366);
float t24368 = (t22581*t22619);
float t24369 = (t24367+t24368);
float t24370 = (t22652*t22659);
float t24371 = (t24369+t24370);
float t24372 = (t22674*t22712);
float t24373 = (t24371+t24372);
float t24374 = (t22745*t22752);
float t24375 = (t24373+t24374);
float t24376 = (t22767*t22805);
float t24377 = (t24375+t24376);
float t24378 = (t22838*t22845);
float t24379 = (t24377+t24378);
float t24380 = (t22860*t22898);
float t24381 = (t24379+t24380);
float t24382 = (t22931*t22938);
float t24383 = (t24381+t24382);
float t24384 = (t22953*t22991);
float t24385 = (t24383+t24384);
float t24386 = (t23024*t23031);
float t24387 = (t24385+t24386);
float t24388 = (t23046*t23084);
float t24389 = (t24387+t24388);
float t24390 = (t23117*t23124);
float t24391 = (t24389+t24390);
float t24392 = (t23139*t23177);
float t24393 = (t24391+t24392);
float t24394 = (t23210*t23217);
float t24395 = (t24393+t24394);
float t24396 = (t23232*t23270);
float t24397 = (t24395+t24396);
float t24398 = (t23303*t23310);
float t24399 = (t24397+t24398);
float t24400 = (t23325*t23363);
float t24401 = (t24399+t24400);
float t24402 = (t23390.y*t23395);
float t24403 = (t24401+t24402);
float t24404 = (t49*t52);
float t24405 = (0+t24404);
float t24406 = (t68*t105);
float t24407 = (t24405+t24406);
float t24408 = (t147*t153);
float t24409 = (t24407+t24408);
float t24410 = (t169*t206);
float t24411 = (t24409+t24410);
float t24412 = (t240*t246);
float t24413 = (t24411+t24412);
float t24414 = (t262*t299);
float t24415 = (t24413+t24414);
float t24416 = (t333*t339);
float t24417 = (t24415+t24416);
float t24418 = (t355*t392);
float t24419 = (t24417+t24418);
float t24420 = (t426*t432);
float t24421 = (t24419+t24420);
float t24422 = (t448*t485);
float t24423 = (t24421+t24422);
float t24424 = (t519*t525);
float t24425 = (t24423+t24424);
float t24426 = (t541*t578);
float t24427 = (t24425+t24426);
float t24428 = (t612*t618);
float t24429 = (t24427+t24428);
float t24430 = (t634*t671);
float t24431 = (t24429+t24430);
float t24432 = (t705*t711);
float t24433 = (t24431+t24432);
float t24434 = (t727*t764);
float t24435 = (t24433+t24434);
float t24436 = (t798*t804);
float t24437 = (t24435+t24436);
float t24438 = (t820*t857);
float t24439 = (t24437+t24438);
float t24440 = (t891*t897);
float t24441 = (t24439+t24440);
float t24442 = (t913*t950);
float t24443 = (t24441+t24442);
float t24444 = (t984*t990);
float t24445 = (t24443+t24444);
float t24446 = (t1006*t1043);
float t24447 = (t24445+t24446);
float t24448 = (t1077*t1083);
float t24449 = (t24447+t24448);
float t24450 = (t1099*t1136);
float t24451 = (t24449+t24450);
float t24452 = (t1170*t1176);
float t24453 = (t24451+t24452);
float t24454 = (t1192*t1229);
float t24455 = (t24453+t24454);
float t24456 = (t1263*t1269);
float t24457 = (t24455+t24456);
float t24458 = (t1285*t1322);
float t24459 = (t24457+t24458);
float t24460 = (t1356*t1362);
float t24461 = (t24459+t24460);
float t24462 = (t1378*t1415);
float t24463 = (t24461+t24462);
float t24464 = (t1449*t1455);
float t24465 = (t24463+t24464);
float t24466 = (t1471*t1508);
float t24467 = (t24465+t24466);
float t24468 = (t1542*t1548);
float t24469 = (t24467+t24468);
float t24470 = (t1564*t1601);
float t24471 = (t24469+t24470);
float t24472 = (t1635*t1641);
float t24473 = (t24471+t24472);
float t24474 = (t1657*t1694);
float t24475 = (t24473+t24474);
float t24476 = (t1728*t1734);
float t24477 = (t24475+t24476);
float t24478 = (t1750*t1787);
float t24479 = (t24477+t24478);
float t24480 = (t1821*t1827);
float t24481 = (t24479+t24480);
float t24482 = (t1843*t1880);
float t24483 = (t24481+t24482);
float t24484 = (t1914*t1920);
float t24485 = (t24483+t24484);
float t24486 = (t1936*t1973);
float t24487 = (t24485+t24486);
float t24488 = (t2007*t2013);
float t24489 = (t24487+t24488);
float t24490 = (t2029*t2066);
float t24491 = (t24489+t24490);
float t24492 = (t2100*t2106);
float t24493 = (t24491+t24492);
float t24494 = (t2122*t2159);
float t24495 = (t24493+t24494);
float t24496 = (t2193*t2199);
float t24497 = (t24495+t24496);
float t24498 = (t2215*t2252);
float t24499 = (t24497+t24498);
float t24500 = (t2286*t2292);
float t24501 = (t24499+t24500);
float t24502 = (t2308*t2345);
float t24503 = (t24501+t24502);
float t24504 = (t2379*t2385);
float t24505 = (t24503+t24504);
float t24506 = (t2401*t2438);
float t24507 = (t24505+t24506);
float t24508 = (t2472*t2478);
float t24509 = (t24507+t24508);
float t24510 = (t2494*t2531);
float t24511 = (t24509+t24510);
float t24512 = (t2565*t2571);
float t24513 = (t24511+t24512);
float t24514 = (t2587*t2624);
float t24515 = (t24513+t24514);
float t24516 = (t2658*t2664);
float t24517 = (t24515+t24516);
float t24518 = (t2680*t2717);
float t24519 = (t24517+t24518);
float t24520 = (t2751*t2757);
float t24521 = (t24519+t24520);
float t24522 = (t2773*t2810);
float t24523 = (t24521+t24522);
float t24524 = (t2844*t2850);
float t24525 = (t24523+t24524);
float t24526 = (t2866*t2903);
float t24527 = (t24525+t24526);
float t24528 = (t2937*t2943);
float t24529 = (t24527+t24528);
float t24530 = (t2959*t2996);
float t24531 = (t24529+t24530);
float t24532 = (t3030*t3036);
float t24533 = (t24531+t24532);
float t24534 = (t3052*t3089);
float t24535 = (t24533+t24534);
float t24536 = (t3123*t3129);
float t24537 = (t24535+t24536);
float t24538 = (t3145*t3182);
float t24539 = (t24537+t24538);
float t24540 = (t3216*t3222);
float t24541 = (t24539+t24540);
float t24542 = (t3238*t3275);
float t24543 = (t24541+t24542);
float t24544 = (t3309*t3315);
float t24545 = (t24543+t24544);
float t24546 = (t3331*t3368);
float t24547 = (t24545+t24546);
float t24548 = (t3402*t3408);
float t24549 = (t24547+t24548);
float t24550 = (t3424*t3461);
float t24551 = (t24549+t24550);
float t24552 = (t3495*t3501);
float t24553 = (t24551+t24552);
float t24554 = (t3517*t3554);
float t24555 = (t24553+t24554);
float t24556 = (t3588*t3594);
float t24557 = (t24555+t24556);
float t24558 = (t3610*t3647);
float t24559 = (t24557+t24558);
float t24560 = (t3681*t3687);
float t24561 = (t24559+t24560);
float t24562 = (t3703*t3740);
float t24563 = (t24561+t24562);
float t24564 = (t3774*t3780);
float t24565 = (t24563+t24564);
float t24566 = (t3796*t3833);
float t24567 = (t24565+t24566);
float t24568 = (t3867*t3873);
float t24569 = (t24567+t24568);
float t24570 = (t3889*t3926);
float t24571 = (t24569+t24570);
float t24572 = (t3960*t3966);
float t24573 = (t24571+t24572);
float t24574 = (t3982*t4019);
float t24575 = (t24573+t24574);
float t24576 = (t4053*t4059);
float t24577 = (t24575+t24576);
float t24578 = (t4075*t4112);
float t24579 = (t24577+t24578);
float t24580 = (t4146*t4152);
float t24581 = (t24579+t24580);
float t24582 = (t4168*t4205);
float t24583 = (t24581+t24582);
float t24584 = (t4239*t4245);
float t24585 = (t24583+t24584);
float t24586 = (t4261*t4298);
float t24587 = (t24585+t24586);
float t24588 = (t4332*t4338);
float t24589 = (t24587+t24588);
float t24590 = (t4354*t4391);
float t24591 = (t24589+t24590);
float t24592 = (t4425*t4431);
float t24593 = (t24591+t24592);
float t24594 = (t4447*t4484);
float t24595 = (t24593+t24594);
float t24596 = (t4518*t4524);
float t24597 = (t24595+t24596);
float t24598 = (t4540*t4577);
float t24599 = (t24597+t24598);
float t24600 = (t4611*t4617);
float t24601 = (t24599+t24600);
float t24602 = (t4633*t4670);
float t24603 = (t24601+t24602);
float t24604 = (t4704*t4710);
float t24605 = (t24603+t24604);
float t24606 = (t4726*t4763);
float t24607 = (t24605+t24606);
float t24608 = (t4797*t4803);
float t24609 = (t24607+t24608);
float t24610 = (t4819*t4856);
float t24611 = (t24609+t24610);
float t24612 = (t4890*t4896);
float t24613 = (t24611+t24612);
float t24614 = (t4912*t4949);
float t24615 = (t24613+t24614);
float t24616 = (t4983*t4989);
float t24617 = (t24615+t24616);
float t24618 = (t5005*t5042);
float t24619 = (t24617+t24618);
float t24620 = (t5076*t5082);
float t24621 = (t24619+t24620);
float t24622 = (t5098*t5135);
float t24623 = (t24621+t24622);
float t24624 = (t5169*t5175);
float t24625 = (t24623+t24624);
float t24626 = (t5191*t5228);
float t24627 = (t24625+t24626);
float t24628 = (t5262*t5268);
float t24629 = (t24627+t24628);
float t24630 = (t5284*t5321);
float t24631 = (t24629+t24630);
float t24632 = (t5355*t5361);
float t24633 = (t24631+t24632);
float t24634 = (t5377*t5414);
float t24635 = (t24633+t24634);
float t24636 = (t5448*t5454);
float t24637 = (t24635+t24636);
float t24638 = (t5470*t5507);
float t24639 = (t24637+t24638);
float t24640 = (t5541*t5547);
float t24641 = (t24639+t24640);
float t24642 = (t5563*t5600);
float t24643 = (t24641+t24642);
float t24644 = (t5634*t5640);
float t24645 = (t24643+t24644);
float t24646 = (t5656*t5693);
float t24647 = (t24645+t24646);
float t24648 = (t5727*t5733);
float t24649 = (t24647+t24648);
float t24650 = (t5749*t5786);
float t24651 = (t24649+t24650);
float t24652 = (t5820*t5826);
float t24653 = (t24651+t24652);
float t24654 = (t5842*t5879);
float t24655 = (t24653+t24654);
float t24656 = (t5913*t5919);
float t24657 = (t24655+t24656);
float t24658 = (t5935*t5972);
float t24659 = (t24657+t24658);
float t24660 = (t6006*t6012);
float t24661 = (t24659+t24660);
float t24662 = (t6028*t6065);
float t24663 = (t24661+t24662);
float t24664 = (t6099*t6105);
float t24665 = (t24663+t24664);
float t24666 = (t6121*t6158);
float t24667 = (t24665+t24666);
float t24668 = (t6192*t6198);
float t24669 = (t24667+t24668);
float t24670 = (t6214*t6251);
float t24671 = (t24669+t24670);
float t24672 = (t6285*t6291);
float t24673 = (t24671+t24672);
float t24674 = (t6307*t6344);
float t24675 = (t24673+t24674);
float t24676 = (t6378*t6384);
float t24677 = (t24675+t24676);
float t24678 = (t6400*t6437);
float t24679 = (t24677+t24678);
float t24680 = (t6471*t6477);
float t24681 = (t24679+t24680);
float t24682 = (t6493*t6530);
float t24683 = (t24681+t24682);
float t24684 = (t6564*t6570);
float t24685 = (t24683+t24684);
float t24686 = (t6586*t6623);
float t24687 = (t24685+t24686);
float t24688 = (t6657*t6663);
float t24689 = (t24687+t24688);
float t24690 = (t6679*t6716);
float t24691 = (t24689+t24690);
float t24692 = (t6750*t6756);
float t24693 = (t24691+t24692);
float t24694 = (t6772*t6809);
float t24695 = (t24693+t24694);
float t24696 = (t6843*t6849);
float t24697 = (t24695+t24696);
float t24698 = (t6865*t6902);
float t24699 = (t24697+t24698);
float t24700 = (t6936*t6942);
float t24701 = (t24699+t24700);
float t24702 = (t6958*t6995);
float t24703 = (t24701+t24702);
float t24704 = (t7029*t7035);
float t24705 = (t24703+t24704);
float t24706 = (t7051*t7088);
float t24707 = (t24705+t24706);
float t24708 = (t7122*t7128);
float t24709 = (t24707+t24708);
float t24710 = (t7144*t7181);
float t24711 = (t24709+t24710);
float t24712 = (t7215*t7221);
float t24713 = (t24711+t24712);
float t24714 = (t7237*t7274);
float t24715 = (t24713+t24714);
float t24716 = (t7308*t7314);
float t24717 = (t24715+t24716);
float t24718 = (t7330*t7367);
float t24719 = (t24717+t24718);
float t24720 = (t7401*t7407);
float t24721 = (t24719+t24720);
float t24722 = (t7423*t7460);
float t24723 = (t24721+t24722);
float t24724 = (t7494*t7500);
float t24725 = (t24723+t24724);
float t24726 = (t7516*t7553);
float t24727 = (t24725+t24726);
float t24728 = (t7587*t7593);
float t24729 = (t24727+t24728);
float t24730 = (t7609*t7646);
float t24731 = (t24729+t24730);
float t24732 = (t7680*t7686);
float t24733 = (t24731+t24732);
float t24734 = (t7702*t7739);
float t24735 = (t24733+t24734);
float t24736 = (t7773*t7779);
float t24737 = (t24735+t24736);
float t24738 = (t7795*t7832);
float t24739 = (t24737+t24738);
float t24740 = (t7866*t7872);
float t24741 = (t24739+t24740);
float t24742 = (t7888*t7925);
float t24743 = (t24741+t24742);
float t24744 = (t7959*t7965);
float t24745 = (t24743+t24744);
float t24746 = (t7981*t8018);
float t24747 = (t24745+t24746);
float t24748 = (t8052*t8058);
float t24749 = (t24747+t24748);
float t24750 = (t8074*t8111);
float t24751 = (t24749+t24750);
float t24752 = (t8145*t8151);
float t24753 = (t24751+t24752);
float t24754 = (t8167*t8204);
float t24755 = (t24753+t24754);
float t24756 = (t8238*t8244);
float t24757 = (t24755+t24756);
float t24758 = (t8260*t8297);
float t24759 = (t24757+t24758);
float t24760 = (t8331*t8337);
float t24761 = (t24759+t24760);
float t24762 = (t8353*t8390);
float t24763 = (t24761+t24762);
float t24764 = (t8424*t8430);
float t24765 = (t24763+t24764);
float t24766 = (t8446*t8483);
float t24767 = (t24765+t24766);
float t24768 = (t8517*t8523);
float t24769 = (t24767+t24768);
float t24770 = (t8539*t8576);
float t24771 = (t24769+t24770);
float t24772 = (t8610*t8616);
float t24773 = (t24771+t24772);
float t24774 = (t8632*t8669);
float t24775 = (t24773+t24774);
float t24776 = (t8703*t8709);
float t24777 = (t24775+t24776);
float t24778 = (t8725*t8762);
float t24779 = (t24777+t24778);
float t24780 = (t8796*t8802);
float t24781 = (t24779+t24780);
float t24782 = (t8818*t8855);
float t24783 = (t24781+t24782);
float t24784 = (t8889*t8895);
float t24785 = (t24783+t24784);
float t24786 = (t8911*t8948);
float t24787 = (t24785+t24786);
float t24788 = (t8982*t8988);
float t24789 = (t24787+t24788);
float t24790 = (t9004*t9041);
float t24791 = (t24789+t24790);
float t24792 = (t9075*t9081);
float t24793 = (t24791+t24792);
float t24794 = (t9097*t9134);
float t24795 = (t24793+t24794);
float t24796 = (t9168*t9174);
float t24797 = (t24795+t24796);
float t24798 = (t9190*t9227);
float t24799 = (t24797+t24798);
float t24800 = (t9261*t9267);
float t24801 = (t24799+t24800);
float t24802 = (t9283*t9320);
float t24803 = (t24801+t24802);
float t24804 = (t9354*t9360);
float t24805 = (t24803+t24804);
float t24806 = (t9376*t9413);
float t24807 = (t24805+t24806);
float t24808 = (t9447*t9453);
float t24809 = (t24807+t24808);
float t24810 = (t9469*t9506);
float t24811 = (t24809+t24810);
float t24812 = (t9540*t9546);
float t24813 = (t24811+t24812);
float t24814 = (t9562*t9599);
float t24815 = (t24813+t24814);
float t24816 = (t9633*t9639);
float t24817 = (t24815+t24816);
float t24818 = (t9655*t9692);
float t24819 = (t24817+t24818);
float t24820 = (t9726*t9732);
float t24821 = (t24819+t24820);
float t24822 = (t9748*t9785);
float t24823 = (t24821+t24822);
float t24824 = (t9819*t9825);
float t24825 = (t24823+t24824);
float t24826 = (t9841*t9878);
float t24827 = (t24825+t24826);
float t24828 = (t9912*t9918);
float t24829 = (t24827+t24828);
float t24830 = (t9934*t9971);
float t24831 = (t24829+t24830);
float t24832 = (t10005*t10011);
float t24833 = (t24831+t24832);
float t24834 = (t10027*t10064);
float t24835 = (t24833+t24834);
float t24836 = (t10098*t10104);
float t24837 = (t24835+t24836);
float t24838 = (t10120*t10157);
float t24839 = (t24837+t24838);
float t24840 = (t10191*t10197);
float t24841 = (t24839+t24840);
float t24842 = (t10213*t10250);
float t24843 = (t24841+t24842);
float t24844 = (t10284*t10290);
float t24845 = (t24843+t24844);
float t24846 = (t10306*t10343);
float t24847 = (t24845+t24846);
float t24848 = (t10377*t10383);
float t24849 = (t24847+t24848);
float t24850 = (t10399*t10436);
float t24851 = (t24849+t24850);
float t24852 = (t10470*t10476);
float t24853 = (t24851+t24852);
float t24854 = (t10492*t10529);
float t24855 = (t24853+t24854);
float t24856 = (t10563*t10569);
float t24857 = (t24855+t24856);
float t24858 = (t10585*t10622);
float t24859 = (t24857+t24858);
float t24860 = (t10656*t10662);
float t24861 = (t24859+t24860);
float t24862 = (t10678*t10715);
float t24863 = (t24861+t24862);
float t24864 = (t10749*t10755);
float t24865 = (t24863+t24864);
float t24866 = (t10771*t10808);
float t24867 = (t24865+t24866);
float t24868 = (t10842*t10848);
float t24869 = (t24867+t24868);
float t24870 = (t10864*t10901);
float t24871 = (t24869+t24870);
float t24872 = (t10935*t10941);
float t24873 = (t24871+t24872);
float t24874 = (t10957*t10994);
float t24875 = (t24873+t24874);
float t24876 = (t11028*t11034);
float t24877 = (t24875+t24876);
float t24878 = (t11050*t11087);
float t24879 = (t24877+t24878);
float t24880 = (t11121*t11127);
float t24881 = (t24879+t24880);
float t24882 = (t11143*t11180);
float t24883 = (t24881+t24882);
float t24884 = (t11214*t11220);
float t24885 = (t24883+t24884);
float t24886 = (t11236*t11273);
float t24887 = (t24885+t24886);
float t24888 = (t11307*t11313);
float t24889 = (t24887+t24888);
float t24890 = (t11329*t11366);
float t24891 = (t24889+t24890);
float t24892 = (t11400*t11406);
float t24893 = (t24891+t24892);
float t24894 = (t11422*t11459);
float t24895 = (t24893+t24894);
float t24896 = (t11493*t11499);
float t24897 = (t24895+t24896);
float t24898 = (t11515*t11552);
float t24899 = (t24897+t24898);
float t24900 = (t11586*t11592);
float t24901 = (t24899+t24900);
float t24902 = (t11608*t11645);
float t24903 = (t24901+t24902);
float t24904 = (t11679*t11685);
float t24905 = (t24903+t24904);
float t24906 = (t11701*t11738);
float t24907 = (t24905+t24906);
float t24908 = (t11772*t11778);
float t24909 = (t24907+t24908);
float t24910 = (t11794*t11831);
float t24911 = (t24909+t24910);
float t24912 = (t11865*t11871);
float t24913 = (t24911+t24912);
float t24914 = (t11887*t11924);
float t24915 = (t24913+t24914);
float t24916 = (t11958*t11964);
float t24917 = (t24915+t24916);
float t24918 = (t11980*t12017);
float t24919 = (t24917+t24918);
float t24920 = (t12051*t12057);
float t24921 = (t24919+t24920);
float t24922 = (t12073*t12110);
float t24923 = (t24921+t24922);
float t24924 = (t12144*t12150);
float t24925 = (t24923+t24924);
float t24926 = (t12166*t12203);
float t24927 = (t24925+t24926);
float t24928 = (t12237*t12243);
float t24929 = (t24927+t24928);
float t24930 = (t12259*t12296);
float t24931 = (t24929+t24930);
float t24932 = (t12330*t12336);
float t24933 = (t24931+t24932);
float t24934 = (t12352*t12389);
float t24935 = (t24933+t24934);
float t24936 = (t12423*t12429);
float t24937 = (t24935+t24936);
float t24938 = (t12445*t12482);
float t24939 = (t24937+t24938);
float t24940 = (t12516*t12522);
float t24941 = (t24939+t24940);
float t24942 = (t12538*t12575);
float t24943 = (t24941+t24942);
float t24944 = (t12609*t12615);
float t24945 = (t24943+t24944);
float t24946 = (t12631*t12668);
float t24947 = (t24945+t24946);
float t24948 = (t12702*t12708);
float t24949 = (t24947+t24948);
float t24950 = (t12724*t12761);
float t24951 = (t24949+t24950);
float t24952 = (t12795*t12801);
float t24953 = (t24951+t24952);
float t24954 = (t12817*t12854);
float t24955 = (t24953+t24954);
float t24956 = (t12888*t12894);
float t24957 = (t24955+t24956);
float t24958 = (t12910*t12947);
float t24959 = (t24957+t24958);
float t24960 = (t12981*t12987);
float t24961 = (t24959+t24960);
float t24962 = (t13003*t13040);
float t24963 = (t24961+t24962);
float t24964 = (t13074*t13080);
float t24965 = (t24963+t24964);
float t24966 = (t13096*t13133);
float t24967 = (t24965+t24966);
float t24968 = (t13167*t13173);
float t24969 = (t24967+t24968);
float t24970 = (t13189*t13226);
float t24971 = (t24969+t24970);
float t24972 = (t13260*t13266);
float t24973 = (t24971+t24972);
float t24974 = (t13282*t13319);
float t24975 = (t24973+t24974);
float t24976 = (t13353*t13359);
float t24977 = (t24975+t24976);
float t24978 = (t13375*t13412);
float t24979 = (t24977+t24978);
float t24980 = (t13446*t13452);
float t24981 = (t24979+t24980);
float t24982 = (t13468*t13505);
float t24983 = (t24981+t24982);
float t24984 = (t13539*t13545);
float t24985 = (t24983+t24984);
float t24986 = (t13561*t13598);
float t24987 = (t24985+t24986);
float t24988 = (t13632*t13638);
float t24989 = (t24987+t24988);
float t24990 = (t13654*t13691);
float t24991 = (t24989+t24990);
float t24992 = (t13725*t13731);
float t24993 = (t24991+t24992);
float t24994 = (t13747*t13784);
float t24995 = (t24993+t24994);
float t24996 = (t13818*t13824);
float t24997 = (t24995+t24996);
float t24998 = (t13840*t13877);
float t24999 = (t24997+t24998);
float t25000 = (t13911*t13917);
float t25001 = (t24999+t25000);
float t25002 = (t13933*t13970);
float t25003 = (t25001+t25002);
float t25004 = (t14004*t14010);
float t25005 = (t25003+t25004);
float t25006 = (t14026*t14063);
float t25007 = (t25005+t25006);
float t25008 = (t14097*t14103);
float t25009 = (t25007+t25008);
float t25010 = (t14119*t14156);
float t25011 = (t25009+t25010);
float t25012 = (t14190*t14196);
float t25013 = (t25011+t25012);
float t25014 = (t14212*t14249);
float t25015 = (t25013+t25014);
float t25016 = (t14283*t14289);
float t25017 = (t25015+t25016);
float t25018 = (t14305*t14342);
float t25019 = (t25017+t25018);
float t25020 = (t14376*t14382);
float t25021 = (t25019+t25020);
float t25022 = (t14398*t14435);
float t25023 = (t25021+t25022);
float t25024 = (t14469*t14475);
float t25025 = (t25023+t25024);
float t25026 = (t14491*t14528);
float t25027 = (t25025+t25026);
float t25028 = (t14562*t14568);
float t25029 = (t25027+t25028);
float t25030 = (t14584*t14621);
float t25031 = (t25029+t25030);
float t25032 = (t14655*t14661);
float t25033 = (t25031+t25032);
float t25034 = (t14677*t14714);
float t25035 = (t25033+t25034);
float t25036 = (t14748*t14754);
float t25037 = (t25035+t25036);
float t25038 = (t14770*t14807);
float t25039 = (t25037+t25038);
float t25040 = (t14841*t14847);
float t25041 = (t25039+t25040);
float t25042 = (t14863*t14900);
float t25043 = (t25041+t25042);
float t25044 = (t14934*t14940);
float t25045 = (t25043+t25044);
float t25046 = (t14956*t14993);
float t25047 = (t25045+t25046);
float t25048 = (t15027*t15033);
float t25049 = (t25047+t25048);
float t25050 = (t15049*t15086);
float t25051 = (t25049+t25050);
float t25052 = (t15120*t15126);
float t25053 = (t25051+t25052);
float t25054 = (t15142*t15179);
float t25055 = (t25053+t25054);
float t25056 = (t15213*t15219);
float t25057 = (t25055+t25056);
float t25058 = (t15235*t15272);
float t25059 = (t25057+t25058);
float t25060 = (t15306*t15312);
float t25061 = (t25059+t25060);
float t25062 = (t15328*t15365);
float t25063 = (t25061+t25062);
float t25064 = (t15399*t15405);
float t25065 = (t25063+t25064);
float t25066 = (t15421*t15458);
float t25067 = (t25065+t25066);
float t25068 = (t15492*t15498);
float t25069 = (t25067+t25068);
float t25070 = (t15514*t15551);
float t25071 = (t25069+t25070);
float t25072 = (t15585*t15591);
float t25073 = (t25071+t25072);
float t25074 = (t15607*t15644);
float t25075 = (t25073+t25074);
float t25076 = (t15678*t15684);
float t25077 = (t25075+t25076);
float t25078 = (t15700*t15737);
float t25079 = (t25077+t25078);
float t25080 = (t15771*t15777);
float t25081 = (t25079+t25080);
float t25082 = (t15793*t15830);
float t25083 = (t25081+t25082);
float t25084 = (t15864*t15870);
float t25085 = (t25083+t25084);
float t25086 = (t15886*t15923);
float t25087 = (t25085+t25086);
float t25088 = (t15957*t15963);
float t25089 = (t25087+t25088);
float t25090 = (t15979*t16016);
float t25091 = (t25089+t25090);
float t25092 = (t16050*t16056);
float t25093 = (t25091+t25092);
float t25094 = (t16072*t16109);
float t25095 = (t25093+t25094);
float t25096 = (t16143*t16149);
float t25097 = (t25095+t25096);
float t25098 = (t16165*t16202);
float t25099 = (t25097+t25098);
float t25100 = (t16236*t16242);
float t25101 = (t25099+t25100);
float t25102 = (t16258*t16295);
float t25103 = (t25101+t25102);
float t25104 = (t16329*t16335);
float t25105 = (t25103+t25104);
float t25106 = (t16351*t16388);
float t25107 = (t25105+t25106);
float t25108 = (t16422*t16428);
float t25109 = (t25107+t25108);
float t25110 = (t16444*t16481);
float t25111 = (t25109+t25110);
float t25112 = (t16515*t16521);
float t25113 = (t25111+t25112);
float t25114 = (t16537*t16574);
float t25115 = (t25113+t25114);
float t25116 = (t16608*t16614);
float t25117 = (t25115+t25116);
float t25118 = (t16630*t16667);
float t25119 = (t25117+t25118);
float t25120 = (t16701*t16707);
float t25121 = (t25119+t25120);
float t25122 = (t16723*t16760);
float t25123 = (t25121+t25122);
float t25124 = (t16794*t16800);
float t25125 = (t25123+t25124);
float t25126 = (t16816*t16853);
float t25127 = (t25125+t25126);
float t25128 = (t16887*t16893);
float t25129 = (t25127+t25128);
float t25130 = (t16909*t16946);
float t25131 = (t25129+t25130);
float t25132 = (t16980*t16986);
float t25133 = (t25131+t25132);
float t25134 = (t17002*t17039);
float t25135 = (t25133+t25134);
float t25136 = (t17073*t17079);
float t25137 = (t25135+t25136);
float t25138 = (t17095*t17132);
float t25139 = (t25137+t25138);
float t25140 = (t17166*t17172);
float t25141 = (t25139+t25140);
float t25142 = (t17188*t17225);
float t25143 = (t25141+t25142);
float t25144 = (t17259*t17265);
float t25145 = (t25143+t25144);
float t25146 = (t17281*t17318);
float t25147 = (t25145+t25146);
float t25148 = (t17352*t17358);
float t25149 = (t25147+t25148);
float t25150 = (t17374*t17411);
float t25151 = (t25149+t25150);
float t25152 = (t17445*t17451);
float t25153 = (t25151+t25152);
float t25154 = (t17467*t17504);
float t25155 = (t25153+t25154);
float t25156 = (t17538*t17544);
float t25157 = (t25155+t25156);
float t25158 = (t17560*t17597);
float t25159 = (t25157+t25158);
float t25160 = (t17631*t17637);
float t25161 = (t25159+t25160);
float t25162 = (t17653*t17690);
float t25163 = (t25161+t25162);
float t25164 = (t17724*t17730);
float t25165 = (t25163+t25164);
float t25166 = (t17746*t17783);
float t25167 = (t25165+t25166);
float t25168 = (t17817*t17823);
float t25169 = (t25167+t25168);
float t25170 = (t17839*t17876);
float t25171 = (t25169+t25170);
float t25172 = (t17910*t17916);
float t25173 = (t25171+t25172);
float t25174 = (t17932*t17969);
float t25175 = (t25173+t25174);
float t25176 = (t18003*t18009);
float t25177 = (t25175+t25176);
float t25178 = (t18025*t18062);
float t25179 = (t25177+t25178);
float t25180 = (t18096*t18102);
float t25181 = (t25179+t25180);
float t25182 = (t18118*t18155);
float t25183 = (t25181+t25182);
float t25184 = (t18189*t18195);
float t25185 = (t25183+t25184);
float t25186 = (t18211*t18248);
float t25187 = (t25185+t25186);
float t25188 = (t18282*t18288);
float t25189 = (t25187+t25188);
float t25190 = (t18304*t18341);
float t25191 = (t25189+t25190);
float t25192 = (t18375*t18381);
float t25193 = (t25191+t25192);
float t25194 = (t18397*t18434);
float t25195 = (t25193+t25194);
float t25196 = (t18468*t18474);
float t25197 = (t25195+t25196);
float t25198 = (t18490*t18527);
float t25199 = (t25197+t25198);
float t25200 = (t18561*t18567);
float t25201 = (t25199+t25200);
float t25202 = (t18583*t18620);
float t25203 = (t25201+t25202);
float t25204 = (t18654*t18660);
float t25205 = (t25203+t25204);
float t25206 = (t18676*t18713);
float t25207 = (t25205+t25206);
float t25208 = (t18747*t18753);
float t25209 = (t25207+t25208);
float t25210 = (t18769*t18806);
float t25211 = (t25209+t25210);
float t25212 = (t18840*t18846);
float t25213 = (t25211+t25212);
float t25214 = (t18862*t18899);
float t25215 = (t25213+t25214);
float t25216 = (t18933*t18939);
float t25217 = (t25215+t25216);
float t25218 = (t18955*t18992);
float t25219 = (t25217+t25218);
float t25220 = (t19026*t19032);
float t25221 = (t25219+t25220);
float t25222 = (t19048*t19085);
float t25223 = (t25221+t25222);
float t25224 = (t19119*t19125);
float t25225 = (t25223+t25224);
float t25226 = (t19141*t19178);
float t25227 = (t25225+t25226);
float t25228 = (t19212*t19218);
float t25229 = (t25227+t25228);
float t25230 = (t19234*t19271);
float t25231 = (t25229+t25230);
float t25232 = (t19305*t19311);
float t25233 = (t25231+t25232);
float t25234 = (t19327*t19364);
float t25235 = (t25233+t25234);
float t25236 = (t19398*t19404);
float t25237 = (t25235+t25236);
float t25238 = (t19420*t19457);
float t25239 = (t25237+t25238);
float t25240 = (t19491*t19497);
float t25241 = (t25239+t25240);
float t25242 = (t19513*t19550);
float t25243 = (t25241+t25242);
float t25244 = (t19584*t19590);
float t25245 = (t25243+t25244);
float t25246 = (t19606*t19643);
float t25247 = (t25245+t25246);
float t25248 = (t19677*t19683);
float t25249 = (t25247+t25248);
float t25250 = (t19699*t19736);
float t25251 = (t25249+t25250);
float t25252 = (t19770*t19776);
float t25253 = (t25251+t25252);
float t25254 = (t19792*t19829);
float t25255 = (t25253+t25254);
float t25256 = (t19863*t19869);
float t25257 = (t25255+t25256);
float t25258 = (t19885*t19922);
float t25259 = (t25257+t25258);
float t25260 = (t19956*t19962);
float t25261 = (t25259+t25260);
float t25262 = (t19978*t20015);
float t25263 = (t25261+t25262);
float t25264 = (t20049*t20055);
float t25265 = (t25263+t25264);
float t25266 = (t20071*t20108);
float t25267 = (t25265+t25266);
float t25268 = (t20142*t20148);
float t25269 = (t25267+t25268);
float t25270 = (t20164*t20201);
float t25271 = (t25269+t25270);
float t25272 = (t20235*t20241);
float t25273 = (t25271+t25272);
float t25274 = (t20257*t20294);
float t25275 = (t25273+t25274);
float t25276 = (t20328*t20334);
float t25277 = (t25275+t25276);
float t25278 = (t20350*t20387);
float t25279 = (t25277+t25278);
float t25280 = (t20421*t20427);
float t25281 = (t25279+t25280);
float t25282 = (t20443*t20480);
float t25283 = (t25281+t25282);
float t25284 = (t20514*t20520);
float t25285 = (t25283+t25284);
float t25286 = (t20536*t20573);
float t25287 = (t25285+t25286);
float t25288 = (t20607*t20613);
float t25289 = (t25287+t25288);
float t25290 = (t20629*t20666);
float t25291 = (t25289+t25290);
float t25292 = (t20700*t20706);
float t25293 = (t25291+t25292);
float t25294 = (t20722*t20759);
float t25295 = (t25293+t25294);
float t25296 = (t20793*t20799);
float t25297 = (t25295+t25296);
float t25298 = (t20815*t20852);
float t25299 = (t25297+t25298);
float t25300 = (t20886*t20892);
float t25301 = (t25299+t25300);
float t25302 = (t20908*t20945);
float t25303 = (t25301+t25302);
float t25304 = (t20979*t20985);
float t25305 = (t25303+t25304);
float t25306 = (t21001*t21038);
float t25307 = (t25305+t25306);
float t25308 = (t21072*t21078);
float t25309 = (t25307+t25308);
float t25310 = (t21094*t21131);
float t25311 = (t25309+t25310);
float t25312 = (t21165*t21171);
float t25313 = (t25311+t25312);
float t25314 = (t21187*t21224);
float t25315 = (t25313+t25314);
float t25316 = (t21258*t21264);
float t25317 = (t25315+t25316);
float t25318 = (t21280*t21317);
float t25319 = (t25317+t25318);
float t25320 = (t21351*t21357);
float t25321 = (t25319+t25320);
float t25322 = (t21373*t21410);
float t25323 = (t25321+t25322);
float t25324 = (t21444*t21450);
float t25325 = (t25323+t25324);
float t25326 = (t21466*t21503);
float t25327 = (t25325+t25326);
float t25328 = (t21537*t21543);
float t25329 = (t25327+t25328);
float t25330 = (t21559*t21596);
float t25331 = (t25329+t25330);
float t25332 = (t21630*t21636);
float t25333 = (t25331+t25332);
float t25334 = (t21652*t21689);
float t25335 = (t25333+t25334);
float t25336 = (t21723*t21729);
float t25337 = (t25335+t25336);
float t25338 = (t21745*t21782);
float t25339 = (t25337+t25338);
float t25340 = (t21816*t21822);
float t25341 = (t25339+t25340);
float t25342 = (t21838*t21875);
float t25343 = (t25341+t25342);
float t25344 = (t21909*t21915);
float t25345 = (t25343+t25344);
float t25346 = (t21931*t21968);
float t25347 = (t25345+t25346);
float t25348 = (t22002*t22008);
float t25349 = (t25347+t25348);
float t25350 = (t22024*t22061);
float t25351 = (t25349+t25350);
float t25352 = (t22095*t22101);
float t25353 = (t25351+t25352);
float t25354 = (t22117*t22154);
float t25355 = (t25353+t25354);
float t25356 = (t22188*t22194);
float t25357 = (t25355+t25356);
float t25358 = (t22210*t22247);
float t25359 = (t25357+t25358);
float t25360 = (t22281*t22287);
float t25361 = (t25359+t25360);
float t25362 = (t22303*t22340);
float t25363 = (t25361+t25362);
float t25364 = (t22374*t22380);
float t25365 = (t25363+t25364);
float t25366 = (t22396*t22433);
float t25367 = (t25365+t25366);
float t25368 = (t22467*t22473);
float t25369 = (t25367+t25368);
float t25370 = (t22489*t22526);
float t25371 = (t25369+t25370);
float t25372 = (t22560*t22566);
float t25373 = (t25371+t25372);
float t25374 = (t22582*t22619);
float t25375 = (t25373+t25374);
float t25376 = (t22653*t22659);
float t25377 = (t25375+t25376);
float t25378 = (t22675*t22712);
float t25379 = (t25377+t25378);
float t25380 = (t22746*t22752);
float t25381 = (t25379+t25380);
float t25382 = (t22768*t22805);
float t25383 = (t25381+t25382);
float t25384 = (t22839*t22845);
float t25385 = (t25383+t25384);
float t25386 = (t22861*t22898);
float t25387 = (t25385+t25386);
float t25388 = (t22932*t22938);
float t25389 = (t25387+t25388);
float t25390 = (t22954*t22991);
float t25391 = (t25389+t25390);
float t25392 = (t23025*t23031);
float t25393 = (t25391+t25392);
float t25394 = (t23047*t23084);
float t25395 = (t25393+t25394);
float t25396 = (t23118*t23124);
float t25397 = (t25395+t25396);
float t25398 = (t23140*t23177);
float t25399 = (t25397+t25398);
float t25400 = (t23211*t23217);
float t25401 = (t25399+t25400);
float t25402 = (t23233*t23270);
float t25403 = (t25401+t25402);
float t25404 = (t23304*t23310);
float t25405 = (t25403+t25404);
float t25406 = (t23326*t23363);
float t25407 = (t25405+t25406);
float t25408 = (t23390.z*t23395);
float t25409 = (t25407+t25408);
out0 = vec3(t23397,t24403,t25409);
}
